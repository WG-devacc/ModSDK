(def element nullLayout() layout=true)

(def macro VAR_RELATION (_relationEntity:expression)
	(var __relationComponent:gfx = "_relationEntity.relation" (event "_relationEntity.evAdded") (event "_relationEntity.evRemoved"))
	(var relationIndex:number = "__relationComponent ? __relationComponent.value : SC.Battle.PLAYER_RELATION.NEUTRAL" (event "__relationComponent.evChanged"))
	(var relation:str = "SC.Battle.PLAYER_RELATION.NAMES[SC.Battle.PLAYER_RELATION.VALUE_TO_NAME[relationIndex]]")
)

(def macro SHIP_CLASS_STR (shipComponent:expression)
	(var shipClass:str =	"(shipComponent.subtype == ShipTypes.CRUISER) 		? tr('IDS_CRUISER') :
							(shipComponent.subtype == ShipTypes.AIRCARRIER)		? tr('IDS_AIRCARRIER') :
							(shipComponent.subtype == ShipTypes.BATTLESHIP) 	? tr('IDS_BATTLESHIP') : 
							(shipComponent.subtype == ShipTypes.AUXILIARYSHIP) 	? tr('IDS_AUXILIARY') :
							(shipComponent.subtype == ShipTypes.SUBMARINE)		? tr('IDS_SUBMARINE') 
																				: tr('IDS_DESTROYER')"
	)			
)

(def macro PULL_TRAINING_ROOM_ENTITY ()
	(var trainingRoomEntity:gfx = "$datahub.getSingleEntity(CC.trainingRoomWindowState)")
	(var trainingRoomWindowStateComponent:gfx = "trainingRoomEntity ? trainingRoomEntity.trainingRoomWindowState : null")

	(var windowState:str =				"trainingRoomWindowStateComponent.state					" (event "trainingRoomWindowStateComponent.evUpdate"))
	(var notReadyWindowState:number = 	"trainingRoomWindowStateComponent.notReadyWindowState	" (event "trainingRoomWindowStateComponent.evUpdate"))
	(var windowInset:number =			"trainingRoomWindowStateComponent.windowInset			" (event "trainingRoomWindowStateComponent.evUpdate"))
	(var windowInsetLabel:str	=		"trainingRoomWindowStateComponent.windowInsetLabel		" (event "trainingRoomWindowStateComponent.evUpdate"))
)


(def macro trace(expr:expression)
	(block
		(style 
			(backgroundColor = "0x88000000")
		)
		(tf
			(class $TextDefault)
			(autoSize='left')
			(style
				(autoSize=true) 
			)
			(bind text "expr")
		)
	)
)


(def macro traceChange(expr:expression)
	(scope
		(var traceChangeCount:number = 0)
		(bind traceChangeCount "traceChangeCount + 1" watch=false init=false (bind trigger "expr"))
	)
	(block
		(controller $Repeat layout=true
			(bind count "traceChangeCount")
			(exprs
					(style
						(backgroundColor = "0x88FFFFFF")
					)
					(tf
						(class $TextHUD16Bold)
						(style (textColor = "0xFFFF00FF"))
						(autoSize='left')
						(text = "expr")
					)
			)
		)
	)
)


(def macro eventChecker (eventName:expression = "'eventName'")
	(scope
		(event eventName)

		(var test:number = 0)
		(bind test "test+1" watch=false init=false (event "eventName"))
	)

	(block
		(style
			(padding = 8)
			(bind backgroundColor "test%2 == 0 ? C_WARNING : C_POSITIVE")
		)
		(tf
			(class $TextHUDBold)
			(bind text "test")
		)

		(controller $Animation
					(bindcall play duration=0.1 to={scaleX:1.5, scaleY:1.5} (bind trigger "test"))
					(bindcall play delay=0.1 duration=0.1 to={scaleX:1, scaleY:1} (bind trigger "test"))
		)
	)


)


(def macro log(expr:expression)
	(scope
		(var logVar:str = "log(expr)")
	)

	(block
		(visible = false)
		(style
			(position = "absolute")
		)
		(tf
			(bind text "logVar")
		)
	)
)

(def macro DRAW_RECT (x:expression = 0, y:expression = 0, w:expression = 0, h:expression = 0, c:expression = 0xFFFFFF, a:expression = 1)
	(.graphics
		(beginFill "c" "a")
		(drawRect "x" "y" "w" "h")
		(endFill)
	)
)

(def macro DRAW_GRADIENT_RECT ( w:expression = 0, h:expression = 0, 
	type:expression = "'linear'", colors:expression = "[0xffffff,0x0]", alphas:expression="[1,1]", ratios:expression="[0,255]" )
	(.graphics
		(beginGradientFill "type" "colors" "alphas" "ratios")
		(drawRect 0 0 "w" "h")
		(endFill)
	)
)

(def macro BIND_SCALE (scale:expression)
	(bind scaleX "scale")
	(bind scaleY "scale")
)


(def macro MODAL_WINDOW_BACKGROUND_BATTLE () layout=true
	(block
		(class $FullsizeAbsolute)
		(style
			(backgroundSize = "fill")
			(alpha = "0.8")
			(backgroundImage = "'url:../service_kit/panel_backgrounds/modal_battle.png'")
		)
	)
)

(def macro TOOLTIP_SYSTEM_INNER_PANEL_BACKGROUND () layout=true
	(block
		(class $FullsizeAbsolute)
		(style (paddingLeft = "-M") (paddingRight = "-M") (paddingTop = "-SXS") (paddingBottom = "-SXS"))
		(block
			(class $FullsizeAbsolute)
			(style
				(backgroundImage = "'url:../service_kit/panel_backgrounds/inner_panel.png'")
				(scale9grid = 3)
			)
		)
	)
)

(def macro MODAL_WINDOW_INIT ()
	(scope
		(event startShow)
		(event startHide)

		(var showState:number = "SC.Ui_windows.WINDOW_STATE.INIT")
		(var stageComponent:gfx = "$datahub.getSingleEntity(CC.stage).stage")
		(var stageWidth:number = "stageComponent.width" (event "stageComponent.evStageSizeChanged"))
		(var stageHeight:number = "stageComponent.height" (event "stageComponent.evStageSizeChanged"))
	)

	(style
		(bind width "stageWidth")
		(bind height "stageHeight")
		(position = "absolute")
	)

	(dispatch startShow dir="EventDirection.DOWN" init=false watch=false (bind trigger "showState") (bind enabled "showState != SC.Ui_windows.WINDOW_STATE.SHOW"))
	(dispatch startHide dir="EventDirection.DOWN" init=false watch=false (bind trigger "showState") (bind enabled "showState == SC.Ui_windows.WINDOW_STATE.SHOW"))
)

(def macro DEFAULT_MODAL_WINDOW_SCOPE_EVENTS ()
	(scope
		(event startHide)
		(event startShow)
	)
)

(def macro MODAL_WINDOW_BG () layout=true
	(scope
		(macro GET_PREF 'isBlurOptionEnabled' "'graphics.GUI.blur'")
	)

	(class $FullsizeAbsolute)

	(block
		(bind visible "!isBlurOptionEnabled")

		(class $FullsizeAbsolute)
		(style
			(backgroundImage = "'url:../bg/nations_tree_v2.jpg'")
			(backgroundSize = "cover")
		)

		(controller $Animation
			(bindcall play  duration=0.2
							from = "{ alpha: 0 }"
							to = "{ alpha: 1 }"
							(event "startShow")
			)
			(bindcall play  duration=0.2
							delay=0.2
							from = "{ alpha: 1 }"
							to = "{ alpha: 0 }"
							action="kill"
							(event "startHide")
			)
		)
	)

	(block
		(bind visible "isBlurOptionEnabled")
		(class $FullsizeAbsolute)
		(element DeclareBlurLayer)

		(mc mc_blurmap_medium
			(class $FullsizeAbsolute)

			(rendererString = blurMeBaby)
			(controller $Animation
				(bindcall play  duration=0.2
								from = "{ blurIntensity: 0 }"
								to = "{ blurIntensity: 1 }"
								(event "startShow")
				)
				(bindcall play  duration=0.2
								delay=0.2
								from = "{ blurIntensity: 1 }"
								to = "{ blurIntensity: 0 }"
								action="kill"
								(event "startHide")
				)
			)
		)

		(block
			(class $FullsizeAbsolute)
			(style (backgroundColor = 0x80000700))
			(bind alpha 0)

			(controller $Animation
				(bindcall play  duration=0.2
								delay=0.1
								from = "{ alpha: 0 }"
								to = "{ alpha: 1 }"
								(event "startShow")
				)
				(bindcall play  duration=0.2
								delay=0.2
								from = "{ alpha: 1 }"
								to = "{ alpha: 0 }"
								action="kill"
								(event "startHide")
				)
			)
		)
	)
)

(def macro DEFAULT_MODAL_WINDOW_ANIMATION (_positionY:number, hideEvent:expression = 'startHide', animationFinishedEvent:expression = null)
	(bind alpha 0)
	(style (bind top 10))
	(controller $Animation
		(bindcall play  delay = "0.1 + _positionY * 0.075"
						duration=0.15
						from = "{visualOffsetY: 10}"
						to = "{alpha: 1, visualOffsetY: 0}"
						easing="Easing.quad_out"
						action="killAll"
						(event "startShow")
		)
	)
	(controller $Animation
		(bindcall play  delay = "_positionY * 0.055"
						duration=0.15
						to = "{alpha: 0, visualOffsetY: -10}"
						easing="Easing.quad_in"
						action="killAll"
						(event "$scope[hideEvent]")
		)
		(dispatch "animationFinishedEvent != null ? animationFinishedEvent : 'startShow'" args="{}" init=false on=evAnimEnded (bind enabled "animationFinishedEvent != null"))
	)
)

(def macro DEFAULT_APPEAR_ANIMATION_BY_EVENT (_positionY:number, startEvent:expression = 'evStartShow')
	(bind alpha 0)
	(style (bind top 10))
	(controller $Animation
		(bindcall play  delay = "0.1 + _positionY * 0.075"
						duration=0.15
						from = "{visualOffsetY: 10}"
						to = "{alpha: 1, visualOffsetY: 0}"
						easing="Easing.quad_out"
						action="killAll"
						(event "startEvent")
		)
	)
)

(def macro CHANGE_ALPHA_BY_TRIGGER_ANIM (_duration:expression, _fromAlpha:number, _toAlpha:number, _triggerExpression:expression, _easing:expression="Easing.line")
	(alpha = "_triggerExpression ? _toAlpha : _fromAlpha")
	(controller $Animation
		(bindcall play	duration="_duration"
						to="{alpha: _toAlpha}"
						action="kill"
						easing="_easing"
						(bind enabled "_triggerExpression")
		)
		(bindcall play	duration="_duration"
						to="{alpha: _fromAlpha}"
						action="kill"
						easing="_easing"
						(bind enabled "!_triggerExpression")
		)
	)
)

(def macro FAIR_SCALE (scale:expression)
	(scaleX = "scale")
	(scaleY = "scale")
	(style
		(ubScaleX = "scale")
		(ubScaleY = "scale")
	)
)

(def macro BIND_FAIR_SCALE (scale:expression)
	(bind scaleX "scale")
	(bind scaleY "scale")
	(style
		(bind ubScaleX "scale")
		(bind ubScaleY "scale")
	)
)

(def macro HIDE_UI_CMD ()
	(scope
		(var cmdEntity:gfx = "$datahub.getPrimaryEntity(CC.commandMappingCommandName, 'CMD_HIDE_INTERFACE')")
		(var hudVisible:bool = "true")
		(bind hudVisible "!hudVisible" init=false (event "cmdEntity.commandMappingCommand.evCall"))
	)

	(bind visible "hudVisible")
)

(def macro PULL_SHIP (shipId:expression)
	(var shipEntity:gfx = "$datahub.getPrimaryEntity(CC.ship, shipId)")
	(var shipComponent:gfx = "shipEntity.ship" (event "shipEntity.ship.evUpdate") (event "shipEntity.ship.evCurrentSkinChanged") (event "shipEntity.ship.evFlagNameWithCrewChanged"))
)

(def macro PULL_CURRENT_SHIP_ID ()
	(var dockEntity:gfx = "$datahub.getSingleEntity(CC.dockDataMarker)")
	(var shipSelectionComponent:gfx = "dockEntity ? dockEntity.shipSelection : null")
	(var shipId:number = "shipSelectionComponent.currentShipId" (event "shipSelectionComponent.evShipUpdate"))
)

(def macro PULL_USI (entity:expression)
	(var upgradableShipInfo:gfx = "entity.upgradableShipInfo" (event "entity.upgradableShipInfo.evUpdate"))
)

(def macro PULL_EXTERIOR (exteriorId:expression)
	(scope
		(var exteriorEntity:gfx = "$datahub.getPrimaryEntity(CC.exteriorConfig, exteriorId)")
		(var exteriorConfig:gfx = "exteriorEntity.exteriorConfig")
	)
)

(def macro PULL_EXTERIOR_SCOPE (_exteriorId:expression, _entityField:expression, _componentField:expression)
	(var name="_entityField" type=gfx value="$datahub.getPrimaryEntity(CC.exteriorConfig, _exteriorId)")
	(var name="_componentField" type=gfx value="$scope[_entityField].exteriorConfig")
)

(def macro MASK()
	(mc 'size'
		(style
			(position = "absolute")
			(width = 100%)
			(height = 100%)
		)
		(isMask = true)
	)
)

(def macro HUMAN_READABLE_COUNTDOWN_SCOPE (remainTime:expression)
	(var formatDigitsNumber:number = "remainTime < 9.9 ? 1 : 0")
	(var isShowMinutes:bool = "round(remainTime) > 59")
	(var countdownText:str = "countdownFormat(remainTime, formatDigitsNumber, isShowMinutes, false)")
)

(def macro PULL_EVENT_ENTITY ()
	(scope
		(var battleDataEntity:gfx = "$datahub.getSingleEntity(CC.battleData)")
		(var gameModeId:number = "battleDataEntity.battleInfo.gameModeId")
		(var inEvent:bool = "gameModeId == SC.Battle.GAME_MODE.KEY_BATTLE")
	)
)

(def macro IS_ALT_VISION_MODE ()
	(macro GET_PREF 'altVisionMode' "'battle.altVision.mode'")

	(var cameraEntity:gfx = "$datahub.getSingleEntity(CC.camera)")
	(var altVision:bool = "cameraEntity.camera.altVision" (event "cameraEntity.camera.evAltVisionChanged"))
	(var isTactical:bool = "cameraEntity.camera.isTactical" (event "cameraEntity.camera.evTacticalStateChanged"))
	(var isAltVisionMode:bool = "altVision || altVisionMode == AltVisionMode.ENABLED")
)

(def macro STAGE_SIZE ()
	(var stageComponent:gfx = "$datahub.getSingleEntity(CC.stage).stage")
	(var stageWidth:number = "stageComponent.width" (event "stageComponent.evStageSizeChanged"))
	(var stageHeight:number = "stageComponent.height" (event "stageComponent.evStageSizeChanged"))
)

(def macro SCOPE_SELF_WEAPON_TYPE ()
	(var selfVehicleEntity:gfx = "$datahub.getSingleEntity(CC.selfVehicle)")
	(var weaponControllerComponent:gfx = "selfVehicleEntity.weaponController" (event "selfVehicleEntity.evAdded") (event "selfVehicleEntity.evRemoved"))
	(var weaponType:number = "weaponControllerComponent ? weaponControllerComponent.selectedWeapon : SC.Ships.SHIP_WEAPON_TYPES.NONE" (event "weaponControllerComponent.evSelectedWeaponChanged"))
)

(def macro UNIFIED_STATUS_TO_COLOR_AND_ALPHA (_unifiedStatus:expression, _textColorField:expression, _textAlphaField:expression)
	(scope
		(var __unifiedStatus:str = "_unifiedStatus ? _unifiedStatus : ''")
		(var __textColorReal:number = "	__unifiedStatus == SC.Ui_styles.UNIFIED_STATUS.ATTENTION			? SC.Ui_styles.SERVICE_COLORS.ORANGE :
										__unifiedStatus == SC.Ui_styles.UNIFIED_STATUS.DATE_ATTENTION		? SC.Ui_styles.SERVICE_COLORS.ORANGE :
										__unifiedStatus == SC.Ui_styles.UNIFIED_STATUS.CALENDAR_ATTENTION	? SC.Ui_styles.SERVICE_COLORS.ORANGE :
										__unifiedStatus == SC.Ui_styles.UNIFIED_STATUS.RETRAINING			? SC.Ui_styles.SERVICE_COLORS.ORANGE :
										__unifiedStatus == SC.Ui_styles.UNIFIED_STATUS.CHECK				? SC.Ui_styles.SERVICE_COLORS.YELLOW :
										__unifiedStatus == SC.Ui_styles.UNIFIED_STATUS.REWARD_AVAILABLE		? SC.Ui_styles.SERVICE_COLORS.YELLOW :
										__unifiedStatus == SC.Ui_styles.UNIFIED_STATUS.CAMPAIGN_REWARD		? SC.Ui_styles.SERVICE_COLORS.YELLOW :
										__unifiedStatus == SC.Ui_styles.UNIFIED_STATUS.CONTAINER_REWARD		? SC.Ui_styles.SERVICE_COLORS.YELLOW :
										__unifiedStatus == SC.Ui_styles.UNIFIED_STATUS.BROTHERHOOD_REWARD	? SC.Ui_styles.SERVICE_COLORS.YELLOW :
										__unifiedStatus == SC.Ui_styles.UNIFIED_STATUS.SALE_AVAILABLE		? SC.Ui_styles.SERVICE_COLORS.YELLOW :
										__unifiedStatus == SC.Ui_styles.UNIFIED_STATUS.EARLY_ACCESS			? SC.Ui_styles.SERVICE_COLORS.YELLOW :
										__unifiedStatus == SC.Ui_styles.UNIFIED_STATUS.OUT_BATTLE			? SC.Ui_styles.SERVICE_COLORS.YELLOW :
										__unifiedStatus == SC.Ui_styles.UNIFIED_STATUS.UNIQUE_CREW			? SC.Ui_styles.SERVICE_COLORS.YELLOW :
										__unifiedStatus == SC.Ui_styles.UNIFIED_STATUS.RECOMMENDED			? SC.Ui_styles.SERVICE_COLORS.YELLOW :
										__unifiedStatus == SC.Ui_styles.UNIFIED_STATUS.BATTLEPASS			? SC.Ui_styles.SERVICE_COLORS.YELLOW :
										__unifiedStatus == SC.Ui_styles.UNIFIED_STATUS.AUTOPICK				? SC.Ui_styles.SERVICE_COLORS.YELLOW :
										__unifiedStatus == SC.Ui_styles.UNIFIED_STATUS.VICTORY				? SC.Ui_styles.SERVICE_COLORS.GREEN	:
										__unifiedStatus == SC.Ui_styles.UNIFIED_STATUS.DEFEAT				? SC.Ui_styles.SERVICE_COLORS.RED :
										__unifiedStatus == SC.Ui_styles.UNIFIED_STATUS.NEGATIVE				? SC.Ui_styles.SERVICE_COLORS.RED	:
										__unifiedStatus == SC.Ui_styles.UNIFIED_STATUS.WARNING				? SC.Ui_styles.SERVICE_COLORS.RED	:
										__unifiedStatus == SC.Ui_styles.UNIFIED_STATUS.LOCK					? SC.Ui_styles.SERVICE_COLORS.WHITE :
										__unifiedStatus == SC.Ui_styles.UNIFIED_STATUS.EPIC_SKILL			? SC.Ui_styles.SERVICE_COLORS.WHITE :
										__unifiedStatus == SC.Ui_styles.UNIFIED_STATUS.IN_BATTLE			? SC.Ui_styles.SERVICE_COLORS.WHITE :
										__unifiedStatus == SC.Ui_styles.UNIFIED_STATUS.ABUSE_NORMAL			? SC.Ui_styles.SERVICE_COLORS.WHITE :
										__unifiedStatus == SC.Ui_styles.UNIFIED_STATUS.ABUSE_SUSPECT		? SC.Ui_styles.SERVICE_COLORS.PINK :
										__unifiedStatus == SC.Ui_styles.UNIFIED_STATUS.ABUSE_CONFIRMED		? SC.Ui_styles.SERVICE_COLORS.ORANGE :
										__unifiedStatus == SC.Ui_styles.UNIFIED_STATUS.DEFAULT				? SC.Ui_styles.SERVICE_COLORS.WHITE :
										__unifiedStatus == SC.Ui_styles.UNIFIED_STATUS.NOTIFICATION			? SC.Ui_styles.SERVICE_COLORS.WHITE
																											: SC.Ui_styles.SERVICE_COLORS.WHITE")
		(var name="_textColorField" type=number value="__textColorReal")
		(var name="_textAlphaField" type=number value="	__textColorReal != SC.Ui_styles.SERVICE_COLORS.WHITE ? 1 : TA")
	)
)

(def macro IS_ALIVE ()
	(var selfAvatarEntity:gfx =  "$datahub.getSingleEntity(CC.playerAvatar)")
	(var healthComponent:gfx = "selfAvatarEntity.health")
	(var isAlive:bool = "healthComponent ? healthComponent.isAlive : false" (event "healthComponent.evIsAliveChanged"))
)

(def macro IS_ON_PLANE ()
	(var ownCarrierEntity:gfx = "$datahub.getSingleEntity(CC.aircarrier)")
	(var activeSquadron:number = "ownCarrierEntity ? ownCarrierEntity.aircarrier.activeSquadron : ActiveSquadron.NONE" (event "ownCarrierEntity.aircarrier.evStateChanged"))
	(var isOnPlane:bool = "activeSquadron != ActiveSquadron.NONE")
)

(def macro IS_SPECTATOR_MODE ()
	(var spectatorWatcher:gfx = "$datahub.getFirstWatcher(CC.spectatorState)")
	(var spectatorEntity:gfx = "spectatorWatcher.entity" (event "spectatorWatcher.event"))
	(var spectatorState:number = "spectatorEntity ? spectatorEntity.spectatorState.state: null" (event "spectatorEntity.spectatorState.evStateChanged"))
	(var isPreSpectator:bool = "spectatorState == SC.Common.SPECTATOR_STATE.PRE_SPECTATOR")
	(var isSpectator:bool = "spectatorEntity && !isPreSpectator")
	(var isSpectatorTrainingMode:bool = "spectatorState == SC.Common.SPECTATOR_STATE.TRAINING_SPECTATOR")
)

(def macro COLOR_TO_COLOR_TRANSFORM(_colorTransformField:expression, _color:expression)

	(var name="_colorTransformField" type=dict value="{	redOffset:(((_color - 0xFF000000) & 0xFF0000) >> 16) - 255,
														greenOffset:(((_color - 0xFF000000) & 0x00FF00) >> 8) - 255,
														blueOffset:((_color - 0xFF000000) & 0x0000FF) - 255
														}")
)

(def macro SCOPE_IS_BATTLE_IN_PROGRESS (scopeFieldName:expression='isBattleInProgress')
	(var battleDataEntity:gfx = "$datahub.getSingleEntity(CC.battleData)")
	(var battleState:number = "battleDataEntity.battleState.battleState" (event "battleDataEntity.battleState.evBattleStateChanged"))
	(var name="scopeFieldName" type=bool value="battleState == SC.Common.CLIENT_BATTLE_STATE.STARTED || battleState == SC.Common.CLIENT_BATTLE_STATE.END_BATTLE_IDLING")
)

(def macro ADAPTIVE_WIDTH (min:expression, stageMin:expression, max:expression, stageMax:expression, stageWidth:expression)
	(bind width "	stageWidth < stageMin ? min :
					stageWidth > stageMax ? max :
					min + (max - min) * ((stageWidth - stageMin) / (stageMax - stageMin))")
)

(def macro ADAPTIVE_HEIGHT (min:expression, stageMin:expression, max:expression, stageMax:expression, stageHeight:expression)
	(bind height "	stageHeight < stageMin ? min :
					stageHeight > stageMax ? max :
					min + (max - min) * ((stageHeight - stageMin) / (stageMax - stageMin))")
)

(def macro SIMPLE_MOUSE_OVER_DOWN_SELECTED_COLORTRANSFORM_SCOPE ()
	(event evMouseOvered)
	(event evMouseDowned)
	(var isMouseOvered:bool = "false")
	(var isMouseDowned:bool = "false")
	(bind isMouseOvered "$event.isMouseOvered" init=false watch=false (event "evMouseOvered"))
	(bind isMouseDowned "$event.isMouseDowned" init=false watch=false (event "evMouseDowned"))
)

(def macro SIMPLE_MOUSE_OVER_DOWN_SELECTED_COLORTRANSFORM (_isActive:expression)
	(dispatch evMouseOvered args={isMouseOvered: true} on='mouseOver')
	(dispatch evMouseOvered args={isMouseOvered: false} on='mouseOut')

	(dispatch evMouseDowned args={isMouseDowned: true} on='mouseDown')
	(dispatch evMouseDowned args={isMouseDowned: false} on='mouseUp')
	(dispatch evMouseDowned args={isMouseDowned: false} on='mouseUp')
	(dispatch evMouseDowned args={isMouseDowned: false} on='mouseOut')

	(bind colorTransform "	_isActive && isMouseDowned	? {redMultiplier: 0.85, greenMultiplier: 0.85, blueMultiplier: 0.85} :
							_isActive && isMouseOvered	? {redOffset: 40, greenOffset: 40, blueOffset: 40}
														: CT_NONE")
)

(def macro SEND_QUICK_COMMAND (targetId:expression=-1, commandID:expression=-1)
	(bindcall externalCall 'direct.action' "['battle.quickCommandUI', [commandID, targetId]]" init=false watch=false on='click')
)

(def macro USER_PREF_DATA ()
	(var userPrefsCollection:gfx =	"$datahub.getCollection(CC.userPrefs)")
	(var userPrefsEntity:gfx =		"userPrefsCollection.items[0]")
	(var userPrefsComponent:gfx =	"userPrefsEntity ? userPrefsEntity.userPrefs : null")
	(var userPrefs:gfx =			"userPrefsComponent.userPrefs" (event "userPrefsComponent.evUserPrefsChanged"))
)

(def macro FEATURES (_state:expression)
	(var name="'featureEntity_' + _state" type=gfx value="$datahub.getPrimaryEntity(CC.accountFeature, pow(2, _state)).accountFeature")
	(var name="'feature_' + _state" type=str value="$scope['featureEntity_' + _state].state" (event "$scope['featureEntity_' + _state].evStateChanged"))
)

(def macro NULL_SAFE_FEATURES (_state:expression)
	(var name="'featureDHEntity'" type=gfx value="$datahub.getPrimaryEntity(CC.accountFeature, pow(2, _state))")
	(var name="'featureEntity_' + _state" type=gfx value="$scope['featureDHEntity'] ? $scope['featureDHEntity'].accountFeature : null")
	(var name="'feature_' + _state" type=str value="$scope['featureEntity_' + _state] ? $scope['featureEntity_' + _state].state : null" (event "$scope['featureEntity_' + _state].evStateChanged"))
)

(def macro PULL_SHIP_ID()
	(var dockEntity:gfx = "$datahub.getSingleEntity(CC.dockDataMarker)")
	(var shipSelectionComponent:gfx = "dockEntity ? dockEntity.shipSelection : null")
	(var shipId:number = "shipSelectionComponent.currentShipId" (event "shipSelectionComponent.evShipUpdate"))
	(var shipIdForModuleInset:number = "shipSelectionComponent.currentShipIdForModuleInset" (event "shipSelectionComponent.evShipViewUpdate"))
	(var shipIdForResearch:number = "shipSelectionComponent.currentShipIdForResearch" (event "shipSelectionComponent.evShipUpdate"))
)

(def macro PULL_OWN_SHIP (_shipId:expression, _entityField:expression, _scopeFieldShip:expression)
	(var name="_entityField" type=gfx value="$datahub.getPrimaryEntity(CC.ownShip, _shipId)")
	(var name="_scopeFieldShip" type=gfx value="$scope[_entityField].ship" (event "$scope[_entityField].ship.evUpdate") (event "$scope[_entityField].ship.evCurrentSkinChanged"))
)

(def macro PULL_PRICE (_entityId:expression, _actionId:expression, _elementName:expression, _priceIndex:number)
	(var name="_elementName + 'PricesEntity'"	type=gfx value="_entityId && _actionId ? $datahub.getPrimaryEntity(CC.prices, toString(_entityId) + '_' + toString(_actionId)) : null")
	(var name="_elementName + 'PricesIds'"		type=array value="$scope[_elementName + 'PricesEntity'] ? $scope[_elementName + 'PricesEntity'].prices.pricesInCurrencies : null" (event "$scope[_elementName + 'PricesEntity'].prices.evChanged"))
	(var name="_elementName + 'PriceDeficit'"	type=gfx value="$scope[_elementName + 'PricesEntity'] ? $scope[_elementName + 'PricesEntity'].priceDeficit : null" (event "$scope[_elementName + 'PricesEntity'].priceDeficit.evUpdated"))
	(var name="_elementName + 'PriceEntity'"	type=gfx value="$scope[_elementName + 'PricesIds'] ? $datahub.getEntity(toString($scope[_elementName + 'PricesIds'][_priceIndex])) : null")
	(var name="_elementName + 'PriceInfo'"		type=gfx value="$scope[_elementName + 'PriceEntity'] ? $scope[_elementName + 'PriceEntity'].itemPrice : null" (event "$scope[_elementName + 'PriceEntity'].itemPrice.evChanged"))
)

(def macro PULL_PRICES_IDS (_entityId:expression, _actionId:expression, _elementName:expression)
	(var name="_elementName + 'PricesEntity'"	type=gfx value="_entityId && _actionId ? $datahub.getPrimaryEntity(CC.prices, toString(_entityId) + '_' + toString(_actionId)) : null")
	(var name="_elementName + 'PricesIds'"		type=array value="$scope[_elementName + 'PricesEntity'] ? $scope[_elementName + 'PricesEntity'].prices.pricesInCurrencies : null" (event "$scope[_elementName + 'PricesEntity'].prices.evChanged"))
)

(def macro PULL_CREW_DATA(_scopeName:expression)
	(var dockEntity:gfx = "$datahub.getSingleEntity(CC.dockDataMarker)")
	(var name="_scopeName" type=gfx value="dockEntity.crewData" (event "dockEntity.crewData.evUpdate"))
)

(def macro DESATURATION_DEFAULT(_isNotDesaturated:expression)
	(filters
		(colorMatrix
			(bind matrix "_isNotDesaturated ? [0, 0, 0, 0] : [ 0, -100, 0, -15 ]")
		)
	)
)

(def macro PULL_CAMPAIGN_DATA_SCOPE(_curCampaignId:expression)
	(var campaign:gfx = "$datahub.getPrimaryEntity(CC.campaignParams, _curCampaignId)")
	(var campaignPlayer:gfx = "campaign ? campaign.campaignPlayer : null")
	(var campaignParams:gfx = "campaign ? campaign.campaignParams : null")

	
	(var campaignState:number = "campaignPlayer.state" (event "campaignPlayer.evChanged"))
	(var campaignMissionsStates:array = "campaignPlayer.missionsStates" (event "campaignPlayer.evChanged"))
	(var campaignCountLootedTasks:number = "campaignPlayer.countLootedTasks" (event "campaignPlayer.evChanged"))
	(var campaignCountCompletedTasks:number = "campaignPlayer.countCompletedTasks" (event "campaignPlayer.evChanged"))
	
	(var campaignName:str = "campaignParams.name")
	(var campaignIsActivated:bool = "campaignParams.isActivated" (event "campaignParams.evChanged"))
	(var campaignAllMissions:array = "campaignParams.allMissions")
	(var campaignMainTask:number = "campaignParams.mainTask")
	(var campaignMapPositions:array = "campaignParams.mapPositions")
	(var campaignCountTasks:number = "campaignParams.countTasks")
	(var campaignStartTime:number = "campaignParams.startTime" (event "campaignParams.evChanged"))
	(var campaignEndTime:number = "campaignParams.endTime" (event "campaignParams.evChanged"))
	(var campaignIsNarrative:bool = "campaignParams.isNarrative")
	(var campaignToken:str = "campaignParams.token")
	(var campaignIsViewed:bool = "campaignParams.isViewed" (event "campaignParams.evChanged"))
	(var campaignNeedToken:bool = "campaignState == 0 && campaignToken != ''")
)

(def macro SERVER_TIME_SCOPE ()
	(var serverTime:number = "currentServerSeconds()" (event "evInfrequent"))
)

(def macro COUNTDOWN_SCOPE (_scopeName:expression, _time:expression, _format:expression, _declination:expression='', _isLocalTime:expression=false)
	
	(var name="_scopeName" type=str value="formatTime(_time - serverTime, _format, _declination, _isLocalTime)")
)

(def macro INPUT (_btnName:expression)
	(bindcall externalCall 'inputMapping.onButtonClick' "[_btnName]" init=false watch=false on=click)
)

(def macro CAROUSEL_HEIGHT_SCOPE () 
	(var carouselRows:number = "userPrefs.curRowCountIndex == null ? 0 : userPrefs.curRowCountIndex")
	(var isSmallCarouselView:bool = "userPrefs.isSmallCarouselView == null ? false : userPrefs.isSmallCarouselView")
	(var carouselHeight:number = "isSmallCarouselView	?	carouselRows == 1	? 263 :
															carouselRows == 2	? 326
																				: 200
														: 200")
)

(def macro PULL_SELF_PLAYER_SCOPE ()
	(var selfPlayerEntity:gfx = "$datahub.getSingleEntity(CC.accountSelf)")
	(var selfPlayerDbId:number = "selfPlayerEntity.accountSimple.dbId")
	(var selfPlayerName:str = "selfPlayerEntity.accountName.name" (event "selfPlayerEntity.accountName.evChanged"))
	(var selfPlayerNickName:str = "selfPlayerEntity.accountName.nickName" (event "selfPlayerEntity.accountName.evChanged"))
)

(def macro HIDE_UI_ON_SHIPOVERVIEW ()
	(scope
		(var dockDataEntity:gfx = "$datahub.getSingleEntity(CC.dockData)")
		(var dockData:gfx = "dockDataEntity ? dockDataEntity.dockData : null")
		(var isShipOverviewEnabled:bool = "dockData ? dockData.isShipOverviewEnabled : false" (event "dockData.evIsShipOverviewEnabledChanged"))
	)
	(style (bind hitTest "!isShipOverviewEnabled"))

	(controller $Animation
		(controller $Animation
			(bindcall play
				from =		"{alpha: 1}"
				to =		"{alpha: 0}"
				easing =	"Easing.quad_in"
				delay =		"!isShipOverviewEnabled ? 0.15 : 0.5"
				duration =	"isShipOverviewEnabled ? 0.4 : 0.25"
				reverse =	"!isShipOverviewEnabled"
				action =	"killAll"
				(bind trigger "isShipOverviewEnabled")
			)
		)
	)
)

(def macro PULL_PRICE_SCOPE (_entityId:expression, _actionId:expression, _entityField:expression, _componentField:expression)
	(var name="'prices' + _entityField" type=gfx value="_entityId && _actionId ? $datahub.getPrimaryEntity(CC.prices, toString(_entityId) + '_' + toString(_actionId)) : null")
	(var name="'pricesIds' + _componentField" type=gfx value="$scope['prices' + _entityField] ? $scope['prices' + _entityField].prices.pricesInCurrencies : null" (event "$scope['prices' + _entityField].prices.evChanged"))
	(var name="_entityField" type=gfx value="_componentField ? $datahub.getEntity(toString('pricesIds' + _componentField[0])) : null")
	(var name="_componentField" type=gfx value="$scope[_entityField] ? $scope[_entityField].itemPrice : null" (event "$scope[_entityField].itemPrice.evChanged"))
)

(def macro PULL_SHIP_SCOPE (_shipId:expression, _entityField:expression, _componentField:expression)
	(var name="_entityField" type=gfx value="$datahub.getPrimaryEntity(CC.ship, _shipId)")
	(var name="_componentField" type=gfx value="$scope[_entityField].ship" (event "$scope[_entityField].ship.evUpdate") (event "$scope[_entityField].ship.evCurrentSkinChanged"))
)

(def macro PULL_OWN_SHIP_SCOPE (_shipId:expression, _entityField:expression, _componentField:expression)
	(var name="_entityField" type=gfx value="$datahub.getPrimaryEntity(CC.ownShip, _shipId)")
	(var name="_componentField" type=gfx value="$scope[_entityField].ship" (event "$scope[_entityField].ship.evUpdate") (event "$scope[_entityField].ship.evCurrentSkinChanged"))
)

(def macro GET_UNREAD_NEW_COUNTER_AND_GIFT_STATUS_SCOPE ()
	(var portalEntity:gfx = "$datahub.getSingleEntity(CC.ingamePortal)")
	(var ingamePortal:gfx = "portalEntity ? portalEntity.ingamePortal : null")

	(var isRewardAvailable:bool = "ingamePortal ? ingamePortal.isGiftAwaiting : false" (event "ingamePortal.evUpdate"))
	(var unreadRecomendedNewsCount:number = "ingamePortal ? ingamePortal.unreadNewsCount : 0" (event "ingamePortal.evUpdate"))
	(var isUnreadRecomendedNews:bool = "unreadRecomendedNewsCount > 0")
)

(def macro GET_PREF (_name:str, _option:expression)
	(var name="_name + 'Entity'" type=gfx value="$datahub.getPrimaryEntity(CC.preference, _option)")
	(var name="_name" type=gfx value="$scope[_name + 'Entity'].preference.value" (event "$scope[_name + 'Entity'].preference.evValueChanged"))
)

(def macro PULL_FULL_ROUTE (_nodeId:expression, _fieldIsActive:expression, _fieldActiveChild:expression, _fieldPrevActiveChild:expression, _fieldChildren:expression)
	(var routeEntity:gfx = "$datahub.getPrimaryEntity(CC.route, _nodeId)")
	(var componentRoute:gfx = "routeEntity ? routeEntity.route : null")
	(var name="_fieldIsActive"			type=bool	value="componentRoute.isActive"			(event "componentRoute.evIsActiveChanged"))
	(var name="_fieldActiveChild"		type=str	value="componentRoute.activeChild"		(event "componentRoute.evActiveChildChanged"))
	(var name="_fieldPrevActiveChild"	type=str	value="componentRoute.prevActiveChild"	(event "componentRoute.evActiveChildChanged"))
	(var name="_fieldChildren"			type=array	value="componentRoute.children" 		(event "componentRoute.evChildrenChanged"))
)

(def macro PULL_ACTIVE_CHILD_ROUTE (_nodeId:expression, _fieldActiveChild:expression)
	(var routeEntity:gfx = "$datahub.getPrimaryEntity(CC.route, _nodeId)")
	(var componentRoute:gfx = "routeEntity ? routeEntity.route : null")
	(var name="_fieldActiveChild"	type=str	value="componentRoute.activeChild"		(event "componentRoute.evActiveChildChanged"))
)

(def macro PULL_NEW_CONTENT (_entity:expression, _component:expression, _counter:expression, _type:expression)
	(var name="_entity" type=gfx value="$datahub.getPrimaryEntity(CC.newContent, _type)")
	(var name="_component" type=gfx value="$scope[_entity] ? $scope[_entity].newContent : null")
	(var name="_counter" type=number value="$scope[_component] ? $scope[_component].count : 0" (event "$scope[_component].evCountChanged"))
)

(def macro HIGH_CONTRAST_DATA_SCOPE ()
	(macro GET_PREF 'isBlurOptionEnabled' "'graphics.GUI.blur'")
	(macro GET_PREF 'isUIContrastOptionEnabled' "'graphics.GUI.contrast'")
	(var isHighContrast:bool="isUIContrastOptionEnabled || !isBlurOptionEnabled")
)

(def macro RANK_SEASON_STAGES_FLAGS_SCOPE (_rankSeasonStage:expression)
	(var isRankSeasonActive:gfx = "_rankSeasonStage == SC.Common.SEASON_BATTLES_STAGES.ACTIVE")
	(var isRankSeasonInactive:gfx = "_rankSeasonStage == SC.Common.SEASON_BATTLES_STAGES.INACTIVE")
	(var isRankSeasonFinished:gfx = "_rankSeasonStage == SC.Common.SEASON_BATTLES_STAGES.FINISHED || _rankSeasonStage == SC.Common.SEASON_BATTLES_STAGES.CLOSED")
	(var isRankSeasonWaiting:gfx = "_rankSeasonStage == SC.Common.SEASON_BATTLES_STAGES.WAITING")
)

(def macro PULL_TOOLTIP_UB2_STATE ()
	(scope
		(var isShowUB2Tooltip:bool = "false")
		(bind isShowUB2Tooltip "_isShowUB2Tooltip" init=false watch=false (bind trigger "_isShowUB2Tooltip"))
	)
	(dispatch "'evStartShow'" dir="EventDirection.DOWN" delay=0.2	init=false watch=false (bind enabled "isShowUB2Tooltip")	(bind trigger "isShowUB2Tooltip"))
	(dispatch "'evStartHide'" dir="EventDirection.DOWN"				init=false watch=false (bind enabled "!isShowUB2Tooltip")	(bind trigger "isShowUB2Tooltip"))
)

(def macro STATS_LOG_TOOLTIP_DURATION (_statName:expression)
	(bindcall externalCall 'direct.action' "[SC.Common.STATISTICS_EVENTS.LOG_START, [_statName]]" init=false watch=false on='evStartShow')
	(bindcall externalCall 'direct.action' "[SC.Common.STATISTICS_EVENTS.LOG_END, [_statName]]" init=false watch=false on='evStartHide')
)

(def macro PULL_WINDOWS_QUEUE_SCOPE ()
	(var windowManagerComponent:gfx = "$datahub.getSingleComponent(CC.windowManager)")
	(var windowsQueue:array = "windowManagerComponent.windowQueue" (event "windowManagerComponent.evChanged"))
	(var currentTopWindowName:str = "windowManagerComponent.topWindowNodeName" (event "windowManagerComponent.evChanged"))
)