<?xml version="1.0"?>
<components>
	<!--
		entities					componentsGroupOfElements

		Chat		 				- 	Chat
										SearchResult

		ContactsGroup		 		- 	ContactsGroup
										GroupViewElements
										GroupOfElements
											elements->Account

		Account						- 	Account
										Contact
										ElementInGroup
											group->ContactsGroup
										AccountLevel
										AccountLevelView
										SearchResultItem

		ChannelsGroup		 		- 	ChannelsGroup
										GroupViewElements
										GroupOfElements
											elements->Channel

		Channel						- 	Channel
										ElementInGroup
											group->ChannelsGroup

	-->

	<component name="CommandForUI">
		<property name="ids" type="String"/>
	</component>

	<component name="CommandMappingCommand">
		<property name="id" type="Integer" pk="true"/>
		<property name="isDown" type="Boolean"/>

		<event name="evIsDownChanged"/>
		<event name="evCall"/>
	</component>

	<component name="CommandMappingCommandName">
		<property name="commandName" type="String" pk="true"/>
	</component>

	<component name="CommandChildren" sync="false">
		<property name="list" type="Array"/> <!--list of command key Entity Id -->
	</component>

	<component name="CommandKeyList">
		<property name="list" type="Array"/> <!--list of command key Entity Id -->
		<event name="evChanged"/>
	</component>

	<component name="CurrentlyEditingCommand">
		<property name="index" type="Integer"/>

		<event name="evWarnUnableToSet"/>
	</component>
	<!-- END entity command -->

	<component name="CommandMappingMod">
		<property name="index" type="Integer" pk="true"/>
		<property name="active" type="Boolean" sync="false"/>
	</component>

	<component name="CommandMappingModKey">
		<property name="keyCode" type="Integer" pk="true"/>
	</component>

	<!-- START entity key -->
	<component name="CommandMappingKeyIndex">
		<property name="index" type="Integer" pk="true"/>
		<property name="commandId" type="Integer" pk="true"/>

		<event name="evChanged"/>
	</component>

	<component name="CommandMappingKey">
		<property	name="keyId"		type="Integer" pk="true"/>
		<property	name="mods"			type="Integer" pk="true"/>
		<property	name="keyType"		type="Integer" pk="true"/>
		<property	name="context"		type="String" pk="true"/>
	</component>

	<component name="InputKey">
		<property name="keyCode" type="Integer" pk="true"/>
		<property name="name" type="String"/>
		<property name="pureName" type="String"/>

		<property name="state" type="Integer" default="0" sync="false"/>

		<event name="evKeyDown"/>
		<event name="evKeyUp"/>
		<event name="evStateChanged"/>
	</component>

	<!-- END entity key -->

	<component name="AxisHandedOrientation" sync="false">
		<property name="sticksOrientation" type="Integer"/>
		<property name="triggersOrientation" type="Integer"/>
	</component>

	<component name="Preference">
		<property	name="key"				type="String" pk="true"/>
		<!-- Dictionary equals to * type of value-->
		<property	name="value"			type="Dictionary"/>
		<event		name="evValueChanged"	/>
	</component>

	<component name="PreferenceChoices">
		<property	name="choices"			type="Array"/>
	</component>

	<component name="PreferenceRange">
		<property	name="min"			type="Number" default="0"/>
		<property	name="max"			type="Number" default="1"/>
	</component>

	<component name="PreferenceDelta">
		<property	name="key"				type="String" pk="true"/>
		<property	name="level"			type="Integer" pk="true"/>
		<property	name="initial"			type="Dictionary"/>
		<property	name="current"			type="Dictionary"/>
		<event		name="evCurrentChanged"	/>
	</component>

	<component name="UserPrefs">
		<property	name="userPrefs"			type="Dictionary"/>
		<event		name="evUserPrefsChanged"	/>
	</component>

	<!-- UserDataGate components-->

	<component name="AccountSelf">
		<property	name="shouldRedirectOnCompletion"		type="Boolean"/>
		<property	name="replaysAvailable"					type="Boolean"/>
		<!-- UNKNOWN = 0, YES = 1, NO = 2, declarated at wows/game/res/gui/data/constants/common.xml -->
		<property	name="hasRecruitsStatus"				type="Integer"	default="0"/>
		<!-- NONE = 0, REGULAR = 1, PREMIUM = 2, declarated at wows/game/res/gui/data/constants/common.xml -->
		<property	name="bipSessionType"					type="Integer"	default="0"/>
		<property 	name="karma"							type="Integer"/>
		<property	name="hasParentalControlRestriction"	type="Boolean"/>

		<event		name="evHasRecruitsStatusChanged"/>
		<event		name="evBipSessionTypeChanged"/>
		<event		name="evKarmaChanged"/>
		<event		name="evHasParentalControlRestrictionChanged"/>
	</component>

	<component name="AccountRealm">
		<property	name="realm"					type="String"/>
		<event		name="evRealmChanged"	/>
	</component>

	<component name="AccountClanSquad">
		<property	name="id"						type="Integer"/>
		<event		name="evClanDivisionChanged"	/>
	</component>

	<component name="AccountSimple">
		<property	name="dbId"					type="Number"		pk="true"/>
		<property	name="isSelfPlayer"			type="Boolean"/>
		<property	name="autoUpdate"			type="Integer"		default="0" sync="false"/>
		<property	name="suspended"			type="Boolean"		default="false"/>
		<property	name="reported"				type="Boolean"		default="false"/>
		<event		name="evSuspendedChanged"	/>
		<event		name="evReportedChanged"	/>
	</component>

	<component name="IncompleteAccount">
		<property	name="codeSent"				type="Boolean"		/>
		<property	name="error"				type="String"/>
		<property	name="errorIDS"				type="String"/>

		<property	name="isLoginInvalid"		type="Boolean"/>
		<property	name="isLoginValidationRunning"		type="Boolean"/>
		<property	name="isPasswordInvalid"	type="Boolean"/>
		<property	name="isPasswordValidationRunning"	type="Boolean"/>

		<event		name="evCodeSent"	/>
		<event		name="evErrorCodeChanged"	/>
		<event		name="evValidationUpdate"/>
	</component>

	<component name="AccountName">
		<property	name="name" type="String"/>
		<property	name="nickName" type="String"/> <!-- name with clan tag -->

		<event		name="evChanged"/>
	</component>

	<component name="AccountRank">
		<property	name="league"				type="Integer"/>
		<property	name="rank"					type="Integer"/>
		<property	name="seasonId"				type="Integer"/>

		<event		name="evRankChanged"/>
	</component>

	<component	name="AccountLevel">
		<property	name="level"				type="Integer"/>
		<event		name="evLevelChanged"	/>
	</component>

	<component	name="AccountLevelPoints">
		<property	name="currentLevelPoints"			type="Integer"/>
		<property	name="deltaProgress"				type="Integer" sync="false"/>
		<property	name="maxLevelEnabled"				type="Integer"/>
		<property	name="lastSeenAccountLevelPoints"	type="Integer"/>

		<event		name="evCurrentLevelPointsChanged"	/>
		<event		name="evDeltaProgressChanged"	/>
		<event		name="evMaxLevelEnabledChanged"	/>
		<event		name="evLastSeenAccountLevelPointsChanged"	/>
	</component>

	<component	name="AccountLevelingStep">
		<property	name="level" 					type="Integer" pk="true"/>
		<property	name="isCompleted"				type="Boolean" sync="false"/>
		<property	name="thisStepPoints"			type="Integer"/>
		<property	name="hasFeatures"				type="Boolean" sync="false"/>
		<property	name="hasRewards"				type="Boolean" sync="false"/>
		<property	name="rewardId"					type="Integer"/>

		<property	name="features"					type="Number"/> <!-- bit mask of AccountFeature.featureId -->


		<event		name="evIsCompletedChanged"	/>
		<event		name="evStepTypeChanged"	/>
		<event		name="evThisStepPointsChanged"	/>
		<event		name="evHasFeaturesChanged"	/>
		<event		name="evHasRewardChanged"	/>
		<event		name="evFeaturesChanged"	/>
	</component>

	<component	name="AccountLevelCarouselPosition">
		<property	name="points"			type="Integer"/>
		<property	name="nextStepPoints"	type="Integer"/>
		<property	name="isLastStep"		type="Boolean"/>

		<event		name="evChanged"/>
		<event		name="evNextStepPointsChanged"	/>
		<event		name="evIsLastStepChanged"	/>
	</component>

	<component	name="AccountPromoRewardBanner">
		<property	name="battles" 			type="Integer"/>
		<property	name="rewardId"			type="Number"/> <!-- Entity ID -->
		<property	name="level"			type="Integer"/>
		<property	name="title"			type="String"/>
		<property	name="shortDescription"	type="String"/>
		<property	name="fullDescription"	type="String"/>
		<property	name="imageSmall"		type="String"/>
		<property	name="imageBig"			type="String"/>
		<property	name="expirationTime"	type="Number"/>
		<property	name="seen"				type="Boolean" sync="false"/>

		<event		name="evChanged"	/>
	</component>

	<component name="AccountInfo">
		<property	name="dbId"						type="Integer"	pk="true"/> <!-- AccountSimple.dbId -->

		<property	name="abuseStatus"				type="Integer"/>
		<property	name="abuseComponents"			type="Dictionary" sync="false"/> <!-- abuseComponents #{ abuseReason: abuseStatus, ...} -->
		<property	name="battlesForStatusClean"	type="Integer"/>

		<event		name="evAbuseStatusChanged"	/>
		<event		name="evAbuseComponentsChanged"	/>
		<event		name="evBattlesForStatusCleanChanged"	/>
	</component>

	<component name="AccountLevelInfo">
		<property	name="level"				type="Integer" pk="true"/>
		<property	name="isLastAvailableLevel"	type="Boolean" sync="false"/>
		<property	name="thisLevelPoints"		type="Integer" sync="false"/>
		<property	name="features"				type="Number" sync="false"/> <!-- bit mask of AccountFeature.featureId -->
		<property	name="hasFeatures"			type="Boolean" sync="false"/>
	</component>

	<component name="AccountFeature">
		<property	name="featureId"			type="Number" pk="true"/>
		<property	name="featureIndex"			type="Integer"/>
		<property	name="title"				type="String"/>
		<property	name="text"					type="String"/>
		<property	name="levelUpText"			type="String"/>
		<property	name="iconPath"				type="String"/>
		<property	name="location"				type="String"/>  <!-- a hint to where the unlocked feature is located in the UI-->
		<property	name="descriptions"			type="Array"/> <!-- array of description strings -->
		<property	name="state"				type="String"/> <!-- AccountLevelingProxyClient.FEATURE_STATE_* -->

		<event		name="evStateChanged"	/>
	</component>

	<component name="AccountStatus">
		<property	name="inBattle"				type="Boolean"		default="false"/>
		<property	name="online"				type="Boolean"		default="false"/>

		<!--event		name="evChanged"/-->
		<event		name="evOnlineChanged"/>
		<event		name="evInBattleChanged"/>
	</component>

	<component name="TeamKiller" sync="false">
		<property name="status"					type="Boolean"		default="false"/>
	</component>

	<!-- only static config that is not changed in runtime-->
	<component name="ClientBuildInfo">
		<property	name="appType"				type="String" sync="false"/>
		<property	name="isFullClient"			type="Boolean"		default="true" sync="false"/>
		<property	name="isDevModeEnabled"			type="Boolean"		default="false"/>
		<property	name="clientType"			type="Integer" sync="false"/>
		<property	name="realmName"				type="String"/>
		<property	name="version"				type="String" sync="false"/>
		<property	name="revision"				type="String" sync="false"/>
		<property	name="buildConfig"				type="String"/>
		<property	name="isEnableClientReplayUi"	type="Boolean"/>
	</component>

	<component name="PreBattleSeeker" sync="false">
		<property name="comment" type="String"/>
		<property name="type" type="Integer"/>
	</component>

	<component	name="PlayerInvitedToPrebattleInfo">
		<property	name="expirationTime"		type="Number"/>
	</component>

	<component	name="PreBattlePlayerSimple">
		<property	name="id"					type="Number"		pk="true"/>
		<property	name="shipId"				type="Number"/>
		<property	name="teamId"				type="Integer"/>
		<property	name="isInBattle"			type="Boolean"/>
		<property	name="preBattleId"			type="Integer"/>
		<property	name="isReady"				type="Boolean"/>
		<property	name="isCommander"			type="Boolean"/>
		<property	name="isMercenary"			type="Boolean"/>
		<property	name="isIgnored"			type="Boolean"/>
		<property	name="abilities"			type="Array"/>  <!-- Array of ints [abilId, abilId, ...] -->
		<property	name="refusedQueueTypes"	type="Integer" sync="false"/>
		<property	name="rankDenyReason"		type="Integer" sync="false"/>
		<property	name="isBot"				type="Boolean" sync="false"/>
		<property	name="state"				type="Integer" sync="false"/>

		<event		name="evPreBattleIdChanged"/>
		<event		name="evShipIdChanged"/>
		<event		name="evTeamIdChanged"/>
		<event		name="evIsReadyChanged"/>
		<event		name="evIsInBattleChanged"/>
		<event		name="evIsIgnoredChanged"/>
		<event		name="evIsCommanderChanged"/>
		<event		name="evIsMercenaryChanged"/>
		<event		name="evChanged"/>
	</component>

	<!-- prebattles -->

	<component	name="ContactsGroup">
		<property	name="id"					type="String"		pk="true"/>
		<property	name="countTotal"			type="Integer"/>
		<property	name="countOffline"			type="Integer" sync="false"/>
		<property	name="countOnline"			type="Integer"/>

		<event		name="evCountOnlineChanged"/>
		<event		name="evCountTotalChanged"/>
	</component>

	<component name="GroupViewElements">
		<property	name="expanded"				type="Boolean"		default="true"/>

		<event		name="evStateChanged"	/>
	</component>

	<component	name="GroupOfElements"	>
		<property	name="groupType"			type="String"		/> <!-- 'contacts'| 'channels' -->
		<property	name="groupId"				type="String"		/>
		<property	name="name"					type="String"		/>
		<property	name="nameIds"				type="String"		/>
		<property	name="isLocal"				type="Boolean"		/>
		<property	name="isIgnorList"			type="Boolean"		/>
		<property	name="isReferralsList"		type="Boolean"		/>

		<event		name="evNameChanged"/>
		<event		name="evRenameErrorNameExist"/>
	</component>

	<component	name="ElementInGroups"	>
		<property	name="groupType"			type="String"	 sync="false"	/> <!-- 'contacts'| 'channels' -->
		<property	name="groupIds"				type="Array"		/>
		<property	name="canAddGroupEntitiesId"	type="Array"		/>
		<event		name="evGroupsChanged"	/>
		<event		name="evCanAddGroupEntitiesChanged"	/>
	</component>

	<component	name="Contact"	>
		<property	name="isIgnored"			type="Boolean"/>
		<event		name="evIsIgnoredChanged"/>
	</component>

	<component	name="ChannelParticipant">
		<property	name="affiliation"						type="Integer"	 sync="false"	/>
		<property	name="channelsIds"						type="Array"	 sync="false"	/>
	</component>

	<component	name="Channel"	>
		<property	name="channelId"						type="String"		pk="true"/>
		<property	name="name"								type="String"		/>
		<property	name="ownerNickName"					type="String"		/>
		<property	name="nameIds"							type="String"		/>
		<property	name="password"							type="String"	 sync="false"	/>
		<property	name="type"								type="Integer"		/>
		<property	name="typeIdent"						type="String"		/>
		<property	name="opened"							type="Boolean"		/>
		<property	name="isRestoredJoin"					type="Boolean"	 sync="false"	/>
		<property	name="isFavorite"						type="Boolean"		/>
		<property	name="isSecured"						type="Boolean"		/>
		<property	name="isInvitation"						type="Boolean"		/>
		<property	name="invitationFromNickName"			type="String"		/>
		<property	name="invitationFromEntityId"			type="Integer"		default="-1"/>
		<property	name="refuseInvitationTimeExpiration"	type="Integer" 		/>
		<property	name="isWaitingPassword"				type="Boolean"		/>
		<property	name="user"								type="Entity"		/>
		<property	name="iconTypeFrame"					type="Integer"	sync="false"/>
		<property	name="savedMessages"					type="Array"	sync="false"	/> <!-- массив entity.id сообщений канала @see ChannelMessage -->
		<property	name="countNewMessages"					type="Integer"		/>
		<property	name="hasNewMessages"					type="Boolean"	sync="false"	/>
		<property	name="isDisplayMessages"				type="Boolean"	sync="false"	default="false"/>
		<property	name="isChatBoxOpened"					type="Boolean"		default="false"/>
		<property	name="timerLifeTimeIds"					type="Array"	sync="false"	/>

		<event		name="evIsFavoriteChanged"	/>
		<event		name="evInvitationRefused"	/>
		<event		name="evTypeChanged"	/>
		<event		name="evNameChanged"	/>
		<event		name="evOpenChanged"	/>
		<event		name="evChatBoxOpenChanged"	/>
		<event		name="evMessageReceived"	/>
		<event		name="evCountNewMessagesChanged"	/>
		<event		name="evHasNewMessagesChanged"	/>
		<event		name="evUpChannelWindow"	/>
		<event		name="evWrongPassword"	/>
		<event		name="evRenameChannelErrorNameExist"	/>
		<event		name="evAddedToGroups"	/>
	</component>

	<component	name="ChannelMessage"	>
		<property	name="id"						type="Integer"		pk="true"/>
		<property	name="targetChannelId"			type="Integer"	sync="false"	/>
		<property	name="senderDBId"				type="String"		/>
		<property	name="time"						type="String"		/>
		<property	name="message"					type="String"		/>
		<property	name="extraData"				type="Dictionary"	/> <!-- { @see ClanProxy.__onBattleResultsSent - data } -->
	</component>

	<component	name="ChannelsGroup"	>
		<property	name="id"					type="Integer"		pk="true"/>
	</component>

	<component	name="Chat"	>
		<property	name="isConnected"			type="Boolean"		/>
		<property	name="canAddGroupEntitiesId" type="Array"		/>

		<event		name="evInit"	/>
		<event		name="evConnected"	/>
		<event		name="evDisConnected"	/>
		<event		name="evRosterChanged"	/>
		<event		name="evChannelsListChanged"	/>
		<event		name="evCreateChannelErrorNameExist"	/>
		<event		name="evCreateContactsGroupErrorNameExist"/>
	</component>

	<component	name="BattleChatAndLog"	>
		<property	name="currentChannelId"						type="Integer"		/>
		<property	name="isInputFocused"						type="Boolean"		/>
		<property	name="substitutions"						type="Dictionary"	/>
		<property	name="isChatDisabled"						type="Boolean"		/>
		<property	name="isTabDisabled"						type="Boolean"		/>

		<event		name="evChannelChanged"	/>
		<event		name="evMessageReceived"	/>
		<event		name="evIsInputFocusedChanged"	/>
	</component>

	<component	name="BattleChatAndLogMessage"	>
		<property	name="id"								type="Integer"		pk="true"/>
		<property	name="playerId"							type="Integer"		/>
		<property	name="playerNickName"					type="String"	sync="false"	/>
		<property	name="htmlText"							type="String"		/>
		<property	name="message"							type="String"		/> <!-- WWSD-196745 use for battle chat mods -->
		<property	name="targetChannelId"					type="Integer"		/> <!-- WWSD-196745 use for battle chat mods -->
		<property	name="type"								type="Integer"		/> <!-- WWSD-196745 use for battle chat mods -->
	</component>

	<component	name="XmppChatSearchResultItem"	>
		<property	name="group"				type="String"		 sync="false"/>	<!-- myContacts | contacts | myCchannels | channels-->
	</component>

	<component	name="CrewData">
		<property	name="barracksCapacity"				type="Integer"	/>
		<property	name="barracksCapacityPrice"		type="Integer"	sync="false"/>
		<property	name="crewsInBarracks"				type="Integer"	/>
		<property	name="buisyCrews"					type="Integer"	sync="false"/>
		<property	name="canIncreaseCapacity"			type="Boolean"	sync="false"/>
		<property	name="canDisassignCrew"				type="Boolean"	/>
		<property	name="textCountIncreaseCapacity"	type="String"	/>
		<property	name="basketDescription"			type="String"	sync="false"/>
		<property	name="maxLevel"						type="Integer"	/>
		<property	name="crewExpPerLevel"				type="Array"	sync="false"/>
		<property	name="crewTotalExpPerLevel"			type="Array"	/>

		<event		name="evUpdate"/>
	</component>

	<component	name="Crew"	>
		<property	name="id"						type="Number"		pk="true"/> <!-- real unique crewId -->
		<property	name="crewId"					type="Number"		/> <!-- crew game parasm Id -->
		<property	name="name"						type="String"		sync="false"/>
		<property	name="nation"					type="String"		/><!-- taken from game params file name-->
		<property	name="subnation"				type="String"		sync="false"/><!-- taken from game params file name -->
		<property	name="peculiarity"				type="String"		sync="false"/>
		<property	name="level"					type="Integer"		/>
		<property	name="isInBarracks"				type="Boolean"		/>
		<property	name="isElite"					type="Boolean"		/>
		<property	name="maxSkillPoints"			type="Integer"		/>

		<property	name="isInBattle"				type="Boolean"		/>

		<property	name="canMove"					type="Boolean"		/>
		<property	name="canDismiss"				type="Boolean"		/>
		<property	name="canLearnSkills"			type="Boolean"		/>
		<property	name="canLevelUp"				type="Boolean"		/>

		<property	name="hasRank"				type="Boolean"		/>
		<property	name="experienceToRichNextLevel"	type="Integer"		/>
		<property	name="experience"			type="Integer"		/>
		<property	name="dismissDelay"			type="Integer"		/>
		<property	name="shipsToSeat"			type="Array"		/><!-- Array of Unique ships for unique commanders -->
		<property	name="nationsToSeat"		type="Array"		/><!-- Array of nations for unique commanders taken from CrewPersonality.ships-->
		<property	name="peculiaritiesToSeat"	type="Array"		/><!-- Array of pecularities for unique commanders taken from CrewPersonality.pecularities-->
		<property	name="shipGroups"			type="Array"		/><!-- Array of ship groups for unique commanders -->
		<property	name="classificationId"		type="Integer"		/>
		<property	name="isPenaltiesActive"	type="Boolean"		/>
		<property	name="isAnimated"			type="Boolean"		/>
		<property	name="flagName"				type="String"		/><!-- Flag name for commanders with custom background -->

		<!-- TODO: Replace with unique Lists of skills, not per each crew -->
		<property	name="uniqueSkillSet"		type="Array"		/><!-- Array of CrewUniqueSkill -->
		<property	name="vanitiesSet"			type="Array"		/><!-- Array of CrewVanity -->
		<property	name="allSkillPoints"		type="Integer"		/>
		<property	name="shipID"				type="Number"		/>
		<property	name="specializationID"		type="Number"		/>
		<property	name="baseUrl"				type="String"		/>
		<property	name="overlayUrl"			type="String"		/>
		<property	name="rank"					type="String"		/>
		<property	name="fullName"				type="String"		/> <!-- tr(fistName)+' '+tr(lastName) -->
		<property	name="rankIDS"				type="String"		/>
		<property	name="skillMatrixId"		type="Integer"		/> <!-- link to SkillMatrix component-->
		<property	name="isUnique"				type="Boolean"		/>
		<property	name="canResetSkillsForFree"	type="Boolean"		/>
		<property	name="timeRent"				type="Integer"		/>

		<event		name="evChanged"					/>
		<event		name="evLevelUp"					/>
		<event		name="evExpChanged"					/>
		<event		name="evShipChanged"				/>
		<event		name="evAdaptationUpdated"			/>
		<event		name="evDismissDelayChanged"		/>
		<event		name="evRetrainingUpdated"			/>
		<event		name="evRecentnessUpdated"			/>
		<event		name="evFlagNameChanged"			/>
		<event		name="evTimeRentChanged"			/>
		<event		name="evIsPenaltiesActiveChanged"	/>
		<event		name="evIsInBattleChanged"			/>
	</component>

	<!-- historical info for system Messages -->
	<component	name="CrewHistoryInfo"	>
		<property	name="id"							type="Number"	pk="true"/>
		<property	name="crewId"						type="Number"	sync="false"/>
		<property	name="name"							type="String"	sync="false"/>
		<property	name="nation"						type="String"	sync="false"/>
		<property	name="subnation"					type="String"	sync="false"/>
		<property	name="peculiarity"					type="String"	sync="false"/>
		<property	name="level"						type="Integer"	sync="false"/>
		<property	name="isInBarracks"					type="Boolean"	sync="false"/>
		<property	name="hasRank"						type="Boolean"/>
		<property	name="experienceToRichNextLevel"	type="Integer"	sync="false"/>
		<property	name="experience"					type="Integer"	sync="false"/>
		<property	name="dismissDelay"					type="Integer"	sync="false"/>
		<property	name="allSkillPoints"				type="Integer"/>
		<property	name="isAnimated"					type="Boolean"/>
		
		<property	name="rentDuration"					type="Number"/>
		<property	name="rentUntil"					type="Number"/>
		
		<property	name="specialization"				type="Integer"	sync="false"/>
		<property	name="specializationID"				type="Number"/>
		<property	name="classificationId"				type="Integer"/>

		<property	name="baseUrl"						type="String"/>
		<property	name="overlayUrl"					type="String"/>
		<property	name="rank"							type="String"	sync="false"/>
		<property	name="fullName"						type="String"/>
		<property	name="rankIDS"						type="String"/>

		<property	name="recentIndex"					type="Integer"		sync="false"/>

		<!-- <property	name="shipID"				type="Number"		/>-->
		<!--<property	name="shipsToSeat"			type="Array"		/>-->
		<!--<property	name="nationsToSeat"		type="Array"		/>-->
		<!--<property	name="peculiaritiesToSeat"	type="Array"		/>-->
		<!--<property	name="shipGroups"			type="Array"		/>-->

		<!--<property	name="learnedSkillIDs"		type="Array"		/>-->
		<!--<property	name="skillSet"				type="Array"		/>-->
		<!--<property	name="uniqueSkillSet"		type="Array"		/>-->
		<!--<property	name="vanitiesSet"			type="Array"		/>-->
	</component>

	<component	name="Skill">
		<property	name="name"					type="String"/>
		<property	name="skillType"			type="Integer"		pk="true"/>
		<property	name="isEpic"				type="Boolean"		/>
		<property	name="tier"					type="Integer"		/>
		<property	name="isSelected"			type="Boolean"		/>
		<property	name="isRecommended"		type="Boolean"		/>
		<property	name="shipType"				type="String"		pk="true"/>
		<property	name="crewParamsId"			type="Number"		pk="true"/>
		<property	name="skillGroup"			type="Integer"		/>
		<property	name="sortIndex"			type="Integer"		 sync="false"/>

		<!-- Puts in tooltip line 'Активируемый эффект' for skills w/o real GL trigger -->
		<property	name="isTreatAsTrigger"		type="Boolean"		/>

		<event	name="evIsSelectedChanged"/>
		<event	name="evIsRecommendedChanged"/>
	</component>

	<component	name="CrewSkill">
		<property	name="crewId"				type="Integer"	pk="true"/>
		<property	name="skillId"				type="Integer"	pk="true"/>
		<property	name="shipType"				type="String"	/>

		<event	name="evLearnedChanged"/>
	</component>

	<component	name="CrewUniqueSkill">
		<property	name="id"					type="String"	pk="true"/>
		<property	name="crewParamsID"			type="String"	 sync="false"/>
		<property	name="triggerType"			type="String"	 sync="false"/>
		<property	name="maxTriggerNum"		type="Integer"	/>
	</component>

	<component	name="CrewUniqueSkillTypes" sync="false">
		<property	name="uniqueTypes"			type="Array"	/>
	</component>

	<component name="SkillTree">
		<property	name="crewId"					type="Integer"		pk="true"/>
		<property	name="shipType"					type="String"		pk="true"/>
		<property	name="freeSkillPoints"			type="Integer"		/>
		<property	name="maxLearnedSkillTier"		type="Integer"		/>
		<property	name="learnedSkillsPrice"		type="Integer"		/>
		<property	name="columnCount"				type="Integer"		/>
		<property	name="usedSkillPoints"			type="Integer"		/>

		<event	name="evFreeSkillPointsChanged"		/>
		<event	name="evSkillsChanged"				/>
		<event	name="evResetCostChanged"			/>
	</component>

	<component name="CrewSkillPicker">
		<property	name="maxSelectedSkillTier"		type="Integer"		/>
		<property	name="selectedSkillsLearnPrice"	type="Integer"		/>

		<event	name="evMaxSelectedSkillTierChanged"		/>
		<event	name="evSelectedSkillsLearnPriceChanged"	/>
	</component>

	<component name="CrewSkillTrigger">
		<property	name="id"				type="Integer"		pk="true"	/>
		<property	name="type"				type="String"		/>
		<property	name="descriptionIds"	type="String"		/>
		<property	name="shipType"			type="String"		 sync="false"/>
	</component>

	<component name="SkillMatrix">
		<property	name="shipType"		type="String"	pk="true"	/>
		<property	name="id"			type="Integer"	pk="true"	/>
		<property	name="epicSkills"	type="Array"	 sync="false"/>
		<property	name="matrix"		type="Dictionary"	/>
	</component>

	<component	name="Attributes">
		<property	name="positive"			type="Array"	/> <!-- [ModifierDescription]  -->
		<property	name="neutral"			type="Array"	/> <!-- [ModifierDescription]  -->
		<property	name="negative"			type="Array"	/> <!-- [ModifierDescription]  -->
		<property	name="hidden"			type="Array"	 sync="false"/> <!-- [ModifierDescription]  -->

		<property	name="modifiers"		type="Dictionary"	/> <!-- {modifierName : ModifierDescription.numericValue]  -->
		<property	name="useful"			type="Boolean"	default="true"/>

		<event	name="evUsefulChanged"/>
		<event	name="evChanged"/>
	</component>

	<component name="CamouflageAttributes"/>

	<component name="ShipEconomicAttributes" />

	<component	name="CrewVanity">
		<property	name="id"					type="String"	pk="true"/>
		<property	name="crewId"				type="Integer"		 sync="false"/>
		<property	name="vanityType"			type="Integer"		/>
		<property	name="vanityName"			type="String"		/>

		<property	name="state"				type="Boolean"		/>

		<event	name="evUpdate"/>
	</component>

	<component	name="Retraining"	>
		<property	name="retrainingType"		type="Integer"	 sync="false"/>
		<property	name="isInAdaptation"		type="Boolean"/>
		<property	name="allTypesBlocked"		type="Boolean"/>

		<property	name="adaptationExperiencePenalty"	type="Integer"/>
		<property	name="adaptationExperienceEarned"	type="Integer"/>

		<event name="evRetrainingUpdated" />
	</component>

	<component	name="RetrainingHistoryInfo"	>
		<property	name="retrainingType"		type="Integer"	sync="false"/>
		<property	name="isInAdaptation"		type="Boolean"/>

		<property	name="adaptationExperiencePenalty"	type="Integer"/>
		<property	name="adaptationExperienceEarned"	type="Integer"/>
	</component>

	<component name="RetrainingOption">
		<property	name="type"			type="Integer"	pk="true"/>
		<property	name="blockReason"	type="Integer"	/>
		<property	name="needExpForRetraining"	type="Integer"		/>

		<event name="evUpdate" />
	</component>

	<component	name="Building"	>
		<property	name="id"					type="Number"		pk="true"/>

		<property	name="type"					type="String"		/>
		<property	name="name"					type="String"		/>
		<property	name="typeIDS"				type="String"		/>
		<property	name="isSuppressed"			type="Boolean"		/>
		<property	name="hidden"				type="Boolean"		 sync="false"/>

		<event		name="evSuppressionChanged"	/>
	</component>

	<component	name="Port"	>
		<property	name="id"					type="String"		pk="true"/>
		<property	name="peculiarities"		type="Array"		 sync="false"/>
		<property	name="nameIds"				type="String"		/>
		<property	name="imagePath"			type="String"		 sync="false"/>
		<property	name="current"				type="Boolean"		/>
		<property	name="isVisible"			type="Boolean"		 sync="false"/>
		<property	name="isDefault"			type="Boolean"		 sync="false"/>
		<property	name="unavailableReason"	type="Integer"		/>

		<event		name="evChanged" />
	</component>

	<component	name="ForcedPort" sync="false">
		<property	name="isPermanent"			type="Boolean"		/>
		<property	name="startTime"			type="Integer"		/>
		<property	name="finishTime"			type="Integer"		/>
	</component>

	<component name="MapInfo">
		<property	name="id"					type="Integer"		pk="true"/>
		<property	name="name"					type="String"		/>
		<property	name="gpName"				type="String"		/>
		<property	name="nameIds"				type="String"		/>
		<property	name="minimapPath"			type="String"		/>
		<property	name="minimapWaterPath"		type="String"		/>
		<property	name="smallPreviewPath"		type="String"		 sync="false"/>
		<property	name="mapBGPath"			type="String"		 />
		<property	name="scenarios"			type="Array"		/>
		<property	name="durations"			type="Array"		/>
		<property	name="teamSizes"			type="Dictionary"	/> <!-- { scenario: [teamSizes] } -->
		<property	name="weathersMap"			type="Dictionary"	/> <!-- { scenario: hasCyclone(true/false) } -->
		<property	name="disabledShipClasses" type="Array"/> <!-- array of shipTypes -->
	</component>

	<component	name="ShipArmorConfig">
		<property	name="shipId"				type="Number"		pk="true"/>
		<property	name="armorRanges"			type="Array"/>
		<property	name="thicknessMin"			type="Integer" sync="false"/>
		<property	name="thicknessMax"			type="Integer" sync="false"/>
		<event		name="evUpdate"		/>
	</component>

	<component name="ShipStructuralParts">
		<property	name="shipId"				type="Number"	pk="true"/>
		<property	name="parts"				type="Array"/>
		<event		name="evUpdate"		/>
	</component>

	<component	name="ShipArmorPick">
		<property	name="shipId"				type="Number"		pk="true"/>
		<property	name="matId"				type="Integer"/>
		<property	name="rangeId"				type="Integer" sync="false"/>
		<property	name="thickness"			type="Integer"/>
		<property	name="armorType"			type="String"/>
		<property	name="pickMode"				type="Integer" sync="false"/>
		<property	name="armorName"			type="String"/>
		<property	name="x"					type="Integer"/>
		<property	name="y"					type="Integer"/>
		<property	name="thicknessMin"			type="Integer"/>
		<property	name="thicknessMax"			type="Integer"/>
		<property	name="selectedPartsMask"	type="Integer"/>
		<property	name="availableRangeIds"	type="Array" sync="false"/>
		<event		name="evUpdate"		/>
	</component>

	<!-- sys messages-->


	<!-- Ranked seasons historical data-->
	<component name="RankedSeasonHistory">
		<property name="id" 					type="Integer" sync="false"/>
		<property name="gameType" 				type="String" sync="false"/> <!-- ClientCommonUtils.GameTypes -->
		<property name="seasonId" 				type="Integer" sync="false"/>
		<property name="leagueId" 				type="Integer" sync="false"/>
		<property name="isCurrent" 				type="Boolean" sync="false"/>
		<property name="hasGamesPlayed" 		type="Boolean"/>
		<property name="iconPath"				type="String" sync="false"/>
		<event name="evRankedSeasonHistoryDataUpdate"/>
	</component>

	<component name="DataComponent">
		<property name="data" type="Dictionary"/>
		<event name="evDataChanged"/>
	</component>

	<component name="Prices">
		<property name="id" 					type="String" pk="true"/>
		<property name="actionId" 				type="Integer" pk="true"/>
		<property name="pricesInCurrencies" 	type="Array"/>

		<event name="evChanged"/>

	</component>

	<component name="ItemPrice">
		<property name="id" 					type="String"/>
		<property name="currencyID" 			type="Integer" sync="false"/>
		<property name="currency" 				type="String"/>
		<property name="basePrice" 				type="Number"/>
		<property name="finalPrice" 			type="Number"/>
		<property name="discountPercent" 		type="Integer"/>
		<property name="discountId" 			type="Integer" sync="false"/>
		<property name="type" 					type="Integer"/>
		<property name="till" 					type="Number"/>
		<property name="isPrivate" 				type="Boolean"/>

		<event name="evChanged"/>
	</component>

	<component name="priceDeficit">
		<property	name="deficits"					type="Dictionary" />
		<property	name="isAnyCurrencyAvailable"	type="Boolean" />

		<event name="evUpdated"/>
	</component>

	<component name="PRMPComponent">
		<property name="id" 					type="String" pk="true"/>
		<property name="type" 					type="String" sync="false"/>
		<property name="prmpType" 				type="String"/>
		<property name="rewards" 				type="Array"/>
		<property name="timeLeft" 				type="Number"/>
		<property name="data" 					type="Dictionary"/>
	</component>

	<component name="LootboxConfigComponent">
		<property name="prices" 				type="Array"/>
		<property name="maxBought" 				type="Integer"/>
		<event name="evUpdate"/>
	</component>

	<component name="LootboxTypeInfoComponent">
		<property name="containerType"		type="Number" pk="true"/>
		<property name="subtype" 			type="String"/>
		<property name="lastAddedDt" 		type="Number"/> <!-- время последнего добавления лутбокса данного типа -->
		<property name="amount" 			type="Integer"/>
		<property name="isLinkAvailable" 	type="Boolean"/>

		<event name="evAmountChanged"/>
	</component>

	<component name="LootboxStorageComponent">
		<property name ="lootExp" 					type="Integer"/>
		<property name ="boughtToday" 				type="Integer"/>
		<property name ="dropAt" 					type="Number"/>
		<property name ="inStorage" 				type="Integer"/>
		<property name ="oldBargeSelectedBoxType" 	type="Number" sync="false" /> <!-- lootbox GameParams id -->
		<property name ="isCurBoxEpic" 				type="Boolean"/>
		<property name ="chosenBoxType" 			type="Integer"/> <!-- userChoice lootbox type from COMMON_LOOTBOX_TYPES -->
		<event name="evUpdate" />
		<event name="evLootboxGot" />
	</component>

	<component name="LootboxComponent">
		<property name="rewards" 					type="Array"/>
		<property name="boxType" 					type="Integer" sync="false"/>
		<property name="isEpic" 					type="Boolean" sync="false"/>
		<event name="evUpdate"/>
	</component>

	<component name="LootboxAnimationState">
		<property name="active" 					type="Boolean"/>
		<property name="open" 						type="Boolean"/>
		<event name="evUpdate"/>
	</component>


	<!-- PVE Operations -->
	<component	name="PveState"	>
		<property	name="enterMatchmaker"		type="Boolean"		default="true"/> <!-- also changed with choosing Operation and/or difficulty -->
		<event		name="evEnterMatchmakerChanged"		/>
	</component>

	<component	name="Operation"	>
		<property	name="id"					type="Number"		pk="true"/>
		<property	name="gpName"				type="String"		/>
		<property	name="hasMultipleMaps"		type="Boolean"		/>

		<property	name="status"				type="Integer"		/>
		<property	name="difficulty"			type="Integer"		/>
		<property	name="customIconName"		type="String"		/>
		<property	name="customMatchmakerBG"	type="String"		/>

		<event		name="evStatusChanged"		/>
	</component>


	<!-- Clan Battles -->

	<component	name="ClanBattleSeason"	>
		<property	name="id"						type="Number"		pk="true"/>
		<property	name="mapId"					type="Integer"		/> <!-- mapId at which show clan winner -->
		<property	name="active"					type="Boolean"		/>
		<property	name="isCurrent"				type="Boolean"		 sync="false"/>
		<property	name="seasonType"				type="String"		 sync="false"/>
		<property	name="isBrawl"					type="Boolean"		 sync="false"/> <!-- false if regular and true if brawl -->
		<property	name="stage"					type="Integer"		 sync="false"/>
		<property	name="shipLevelMin"				type="Integer"		/>
		<property	name="shipLevelMax"				type="Integer"		/>
		<property	name="promoTime"				type="Number"		 sync="false"/>
		<property	name="closeTime"				type="Number"		 sync="false"/>
		<property	name="resetPrimeTimes" 			type="Number"		/>
		<property	name="currentServerDay" 		type="Number"		/>
		<property	name="maxAllowedMercenaries"	type="Number"		/> <!-- maximum number of allowed mercenaries-->
		<event		name="evChanged"/>
	</component>

	<component	name="ClanBattlePrimeTime"	>
		<property	name="id"					type="String"		pk="true"/> <!-- date as dd-mm-yyyy + prime time id -->
		<property	name="dateId"				type="String"		/><!-- date as dd-mm-yyyy -->
		<property	name="primeTimeId"			type="Integer"		/>
		<property	name="seasonId"				type="Number"		 sync="false"/>
		<property	name="realm"				type="String"		/>
		<property	name="day"					type="Integer"		/>
		<property	name="isChosen"				type="Boolean"		/> <!-- chosen on the client by 'fix' button -->
		<property	name="isFixed"				type="Boolean"		/> <!-- fixed after first battle -->
		<property	name="currentRealmDayType"	type="String"		/>
		<event		name="evChanged"/>
	</component>

	<component	name="ClanTeam">
		<property	name="id"					type="Integer"		pk="true"/> <!-- BigWorld PreBattle id -->
		<property	name="squadId"				type="Integer"		/> <!-- id of the selected clan squad (that is, selected clan comp with separate rating, league, etc.) -->
		<property	name="teamIndex"			type="Integer"		/>
		<property	name="playersCount"			type="Integer"		/>
		<property	name="playersLimit"			type="Integer"		/>
		<property	name="battleType"			type="String"		/>
		<property	name="isClanBattleType"		type="Boolean"		/>
		<property	name="isInBattle"			type="Boolean"		/>
		<property	name="isLocked"				type="Boolean"		/>
		<property	name="ownerName"			type="String"		/>
		<property	name="hasNonClanMembers"	type="Boolean"		/>
		<property	name="nonClanMembersCount"	type="Integer"		/>
		<event		name="evPlayersCountChanged"/>
		<event		name="evPlayersLimitChanged"/>
		<event		name="evBattleTypeChanged"/>
		<event		name="evIsClanBattleTypeChanged"/>
		<event		name="evIsInBattleChanged"/>
		<event		name="evIsLockedChanged"/>
		<event		name="evOwnerNameChanged"/>
		<event		name="evSquadIdChanged"/>
		<event		name="evHasNonClanMembersChanged"/>
		<event		name="evNonClanMembersCountChanged"/>
		<event		name="evTeamIndexChanged"/>
	</component>

	<component	name="ClanSquadLadderInfo">
		<property	name="squadId"					type="Integer"	pk="true"/>
		<property	name="rating"				type="Integer"	/>
		<property	name="divisionMinRating"	type="Integer"	 sync="false"/>
		<property	name="divisionMaxRating"	type="Integer"	 sync="false"/>
		<property	name="divisionId"			type="Integer"	/>
		<property	name="leagueId"				type="Integer"	/>
		<property	name="stage"				type="String"	/> <!-- 'promotion', 'demotion', 'league', 'qualification' -->
		<property	name="targetLeagueId"		type="Integer"	/>
		<property	name="targetDivisionId"		type="Integer"	/>
		<property	name="battleProgress"		type="Array"	/> <!-- [x,x,x,x,x] - 'victory', 'defeat', 'draw', 'unknown' -->


		<event		name="evRatingChanged"/>
		<event		name="evRatingMinChanged"/>
		<event		name="evRatingMaxChanged"/>
		<event		name="evDivisionIdChanged"/>
		<event		name="evLeagueIdChanged"/>
		<event		name="evStageChanged"/>
		<event		name="evTargetLeagueIdChanged"/>
		<event		name="evTargetDivisionIdChanged"/>
		<event		name="evBattleProgressChanged"/>
	</component>

	<component	name="ClanLadderInfo">
		<property	name="clanId"				type="Integer"	pk="true"/>
		<property	name="isBanned"				type="Boolean"	 sync="false"/>
		<property	name="leadingSquadId"		type="Integer"	/>
		<property	name="fixedPrimeTimeID"		type="Integer"	 sync="false"/>
		<property	name="chosenPrimeTimeID"	type="Integer"	 sync="false"/>

		<event		name="evIsBannedChanged"/>
	</component>

	<component	name="ClanWarsInfo">
		<property	name="playerId"				      type="Number" pk="true"/>
		<property	name="clanParticipate"		      type="Boolean" />
		<property   name="clanPreparationProgress"    type="Number"  />
		<property   name="clanMaxPreparationProgress" type="Number"  />
		<property   name="nextStageTimestamp"         type="Number"  />  <!-- Timestamp -->
		<property   name="playerMissPreparation"      type="Boolean" />
		<property	name="playerParticipate"          type="Boolean" />
		<property   name="roundEndTimestamp"          type="Number"  />  <!-- Timestamp -->
		<property	name="warEnabled"                 type="Boolean" />
		<property	name="attemptsLeft"	              type="Integer" />
		<property   name="attemptsMax"                type="Integer" />
		<property	name="stage"                      type="String"  />
		<property	name="revision"                   type="Number"   sync="false"/>

		<event		name="evChanged"/>
	</component>

	<component	name="ClanBattleResult">
		<property	name="arenaUniqueID"						type="String"		pk="true"/>
		<property	name="squadId"								type="Integer"/>
		<property	name="battleResult"							type="String"	/>  <!-- see clans_constants.CLAN_BATTLE_PROGRESS -->

		<property	name="fromRating"							type="Integer"	/> <!-- нормализованный рейтинг клана внутри дивизии -->
		<property	name="fromPublicRating"						type="Integer"	/> <!-- абсолютный рейтинг клана внутри дивизии -->

		<property	name="toRating"								type="Integer"	/> <!-- нормализованный рейтинг клана внутри дивизии -->
		<property	name="toPublicRating"						type="Integer"	/> <!-- абсолютный рейтинг клана внутри дивизии -->
		<property	name="divisionRatingMax"					type="Integer"	 sync="false"/>

		<property	name="fromDivisionId"						type="Integer"	/>
		<property	name="fromLeagueId"							type="Integer"	/>
		<property	name="stage"								type="String"	/> <!-- 'promotion', 'demotion', 'league', 'qualification' -->
		<property	name="toLeagueId"							type="Integer"	/>
		<property	name="toDivisionId"							type="Integer"	/>

		<event		name="evChanged"/>
	</component>

	<component	name="ClanBattleStageResult">
		<property	name="arenaUniqueID"			type="String"		pk="true"/>
		<property	name="fromRating"				type="Integer"	 sync="false"/> <!-- нормализованный рейтинг клана внутри дивизии -->
		<property	name="fromDivisionId"			type="Integer"	/>
		<property	name="fromLeagueId"				type="Integer"	/>
		<property	name="fromBattleProgress"		type="Array"	/>  <!-- [x,x,x,x,x] - 'victory', 'defeat', 'draw', 'unknown' -->

		<property	name="stage"					type="String"	/> <!-- 'promotion', 'demotion', 'league', 'qualification' -->
		<property	name="victoriesRequired"		type="Integer"	 sync="false"/> <!-- 'to exit stage' -->

		<property	name="toRating"					type="Integer"	 sync="false"/> <!-- нормализованный рейтинг клана внутри дивизии -->
		<property	name="toDivisionId"				type="Integer"	/>
		<property	name="toLeagueId"				type="Integer"	/>
		<property	name="toBattleProgress"			type="Array"	/>  <!-- [x,x,x,x,x] - 'victory', 'defeat', 'draw', 'unknown' -->

		<property	name="isProgressFinished"		type="Boolean"	/>

		<event		name="evChanged"/>
	</component>

	<component name="LastClanSeasonWinner">
		<property	name="seasonId"		type="Number"		/>
		<event		name="evChanged"/>
	</component>



	<!-- === B A T T L E === -->

	<!-- Squadrons -->
	<component	name="Squadron"	>
		<property	name="id"					type="Number"		pk="true"/>
		<property	name="owner"				type="Entity"		/>
		<property	name="maxHP"				type="Integer"		/>
		<property	name="currentHP"			type="Integer"		/>
		<property	name="isFighter"			type="Boolean"		/>	 <!-- Summoned fighters, ask Game Logic -->
		<property	name="state"				type="Integer"		 sync="false"/>	 <!-- SquadronStateEnum -->

		<event		name="evKilled"	/>
		<event		name="evMaxHPChanged"	/>
		<event		name="evCurrentHPChanged"	/>
		<event		name="evStateChanged"	/>
	</component>

	<component	name="Plane"	>
		<property	name="isConsumable"			type="Boolean"		/>
		<property	name="isAirSupport"			type="Boolean"		/>
		<property	name="planeType"			type="Integer"		/>
		<property	name="ammoType"				type="Integer"		/>
		<property	name="ammoTypeIDS"			type="String"		/>
		<property	name="planeNameIDS"			type="String"		/>
		<property 	name="levelRome"			type="String"		/>
		<property 	name="isModified"			type="Boolean"		/>
		<property 	name="hasSubType"			type="Boolean"		/>
		<property 	name="subTypePostfix"		type="String"		/>
	</component>

	<component	name="Aircarrier"	>
		<property 	name="canLaunchTimestamp"		type="Number"	default="0"  sync="false"/> <!-- delay before launch squadron after battle started -->
		<property 	name="canLaunchSquadrons"		type="Boolean"	default="true" /> <!-- delay before launch squadron after battle started -->
		<property 	name="activeSquadron"			type="Integer"	default="-1"	/> <!-- ownSquadron ID(index from 0) -->
		<property 	name="selectedSquadron"			type="Integer"	default="-1"	/> <!-- ownSquadron ID(index from 0) -->
		<property 	name="lastSelectedSquadron"		type="Integer"	default="-1"	/> <!-- ownSquadron ID(index from 0) -->
		<property 	name="squadronCameraMode"		type="String"	default="'default'" /> <!-- class SquadronCameraMode -->

		<event  	name="evCanLaunchTimestampChanged"	    />
		<event  	name="evCanLaunchSquadronsChanged"	    />
		<event		name="evSelectedSquadronChanged"	/>
		<event		name="evSelectedSquadronIdChanged"	/>
		<event		name="evLastSelectedSquadronChanged"	/>
		<event		name="evSquadronCameraModeChanged"	/>
		<event		name="evStateChanged"	/>
	</component>

	 <component	name="CarrierState"	>
		<property 	name="state"					type="Integer"/>
		<event		name="evStateChanged"	/>
		 <event		name="evStateAdded"	/>
	</component>

	<component	name="ForsageElement"	>
		<property	name="ownSquadronId"		type="Integer" pk="true" />
		<property	name="min"					type="Number"		 sync="false"/>
		<property	name="current"				type="Number"		/>
		<property	name="max"					type="Number"		/>
		<property	name="isUsing"				type="Boolean" default="false" />
		<property	name="isDepleted"			type="Boolean" default="false" />
		<property	name="isFinite"				type="Boolean" />
		<property	name="healState"			type="Integer" />
		<event		name="evMaxChanged"/>
		<event		name="evForsageStateChanged"	/>
		<event		name="evForsageFinished"	/>
		<event		name="evIsDepletedChanged"	/>
		<event		name="evCurrentChanged"	/>
		<event		name="evHealStateChanged"	/>
	</component>

	<component	name="TakeoffBooster"	>
		<property	name="ownSquadronId"		type="Integer" pk="true" />
		<property	name="isUsing"				type="Boolean" default="false" />
		<event		name="evUsingChanged"	/>
	</component>

	<component	name="OwnSquadron"	>
		<property	name="id"					type="Integer"		pk="true"/>
		<property	name="planeTypeIndex"		type="Integer"		 sync="false"/> <!-- index for element with current planeType-->
		<property	name="commandId"			type="Integer"		/>

		<property	name="attackerSize"			type="Integer"		/> <!-- num of attackers -->

		<property	name="state"				type="Integer"		/>
		<property	name="attackState"			type="Integer"		/>

		<property	name="sortingWeight"		type="Integer"		 sync="false"/>

		<event		name="evStateChanged"	/>
		<event		name="evAttackStateChanged"	/>
		<event		name="evCommandIdChanged"	/>

	</component>

	<component name="Aircraft" >
		<property	name="id"					type="Integer"		pk="true"/>
		<property	name="squadronId"			type="Integer"		 sync="false"/>
	</component>

	<component name="Hangar" >
		<property	name="ownSquadronId"		type="Integer"		pk="true"/>
		<property	name="maxPlaneCount"		type="Integer"		/>
		<property	name="planeCount"			type="Integer"		/>
		<property	name="planesInAirCount"		type="Integer"		 sync="false"/>
		<property	name="timeToRestore"		type="Integer"		/>
		<event		name="evChanged"	/>
	</component>

	<!-- Orders -->
	<component	name="Navpoint"	>
		<property	name="orderId"				type="Number"		 sync="false"/>
		<property	name="owner"				type="Entity"		/>
		<property	name="order"				type="String"		 sync="false"/>
		<property	name="type"					type="Integer"		 sync="false"/>
		<property	name="color"				type="Integer"		 sync="false"/>
		<property	name="dragging"				type="Boolean"		/>
		<property	name="draggable"			type="Boolean"		/>
		<property	name="prev"					type="Entity"		/>
		<property	name="next"					type="Entity"		/>
		<property	name="index"				type="Integer"		/>

		<property	name="goalClass"			type="Integer"		 sync="false"/>	<!-- Class ID -->
		<property	name="goalIndex"			type="Number"		 sync="false"/>	<!-- Entity index -->

		<event		name="evDrag"	/>
		<event		name="evDraggableChanged"	/>
		<event		name="evIndexChanged"	/>
		<event		name="evPrevChanged"	/>
		<event		name="evNextChanged"	/>
	</component>

	<component	name="MinimapPath"	>
		<property	name="color"			type="Integer"						/>
		<property	name="minimapPath"		type="Array"						/>
		<property	name="drawBowPoint"		type="Boolean"		default="true"	/>
		<event		name="evMinimapPathChanged"	/>
	</component>

	<component	name="MinimapBezierPath"	>
		<property	name="color"			type="Integer"						/>
		<property	name="path"				type="Array"						/>
		<event		name="evPathChanged"	/>
		<event		name="evBlink"			/>
	</component>

	<component	name="AttackRadius"	 sync="false">
		<property	name="angle"				type="Number"		/>
		<property	name="radius"				type="Number"		/>
		<property	name="dragYawDelta"			type="Number"		/>
	</component>

	<!-- Vehicles -->
	<component	name="Relation"	>
		<property	name="value"				type="Integer"		/>
		<event		name="evChanged"	/>
	</component>

	<component	name="Visibility"	>
		<property	name="visible"				type="Boolean"		/>
		<property	name="mapVisible"			type="Boolean"		/>
		<event		name="evChanged"	/>
	</component>

	<component	name="Dissolve"	>
		<property	name="appearing"			type="Boolean"		/>
		<property	name="timeLeft"				type="Number"		/>
		<event		name="evTransitionStarted"	/>
	</component>

	<component	name="DivisionMember"	>
		<property	name="division"					type="Integer"		/>
		<property	name="divisionId"				type="Integer"		/>
		<property	name="divisionSign"				type="Integer"		/>
		<property	name="divisionHidden"			type="Boolean"		/>
		<property	name="isInSameDivision"			type="Boolean"		/>
		<property	name="isDivisionCommander"		type="Boolean"		/>
		<property	name="isInSameDivisionOnStart"	type="Boolean"		/>
		<property	name="divisionOwnerId"			type="Integer"		/>

		<event		name="evDivisionChanged"	/>
		<event		name="evIsDivisionCommanderUpdated"	/>
		<event		name="evDivisionHiddenChanged"	/>
		<event		name="evDivisionOwnerIdChanged"	/>
	</component>

	<component	name="BattleInvite"	>
		<property	name="invitationsEnabled"		type="Boolean"		/>
		<property	name="inviteCooldown"			type="Number"		/>
		<property	name="inviteCooldownEnabled"	type="Boolean"		/>

		<event		name="evInvitationsEnabledChanged"	/>
		<event		name="evInviteCooldownChanged"	/>
		<event		name="evInviteCooldownEnabledChanged"	/>
	</component>

	<component	name="Avatar"	>
		<property	name="id"						type="Integer"		pk="true"/>
		<property	name="pureName"					type="String"		/>
		<property	name="tag"						type="String"		 sync="false"/>
		<property	name="name"						type="String"		/>
		<property	name="teamId"					type="Integer"		/>
		<property	name="mute"						type="Boolean"		/>
		<property	name="frags"					type="Integer"		/>
		<property	name="tkStatus"					type="Boolean"		/>
		<property	name="ttkStatus"				type="Boolean"		/>
		<property	name="isConnected"				type="Boolean"		 sync="false"/>
		<property	name="isLeaver"					type="Boolean"		/>
		<property	name="isBot"					type="Boolean"		/>
		<property	name="hidden"					type="Boolean"		/>
		<property	name="ship"						type="Entity"		/>
		<property	name="isLoadedInBattle"			type="Boolean"		/>

		<!-- always needed vehicle properties -->

		<property name="shipType" type="String"/>

		<event		name="evTeamkillStatusChanged"	/>
		<event		name="evTTKStatusChanged"	/>
		<event		name="evFragsChanged"	/>
		<event		name="evConnectionChanged"	/>
		<event		name="evIsLeaverChanged"	/>
		<event		name="evMuteChanged"	/>
		<event		name="evTeamIdChanged"	/>
		<event		name="evShipTypeChanged"	/>
		<event		name="evShipRefChanged"	/>
		<event		name="evIsLoadedInBattleChanged"	/>
	</component>

	<component	name="AvatarAnimation"	>
		<property	name="fromIndex"			type="Integer"		/>
		<property	name="toIndex"				type="Integer"		/>
		<event		name="evPlayDeathAnimation"	/> <!-- only for old unbound1 -->
		<event		name="evPlayStartDeathAnimation"	/> <!-- only for unbound2, see WWSD-115259 -->
		<event		name="evPlayEndDeathAnimation"	/> <!-- only for unbound2, see WWSD-115259 -->
		<event		name="evPlayMoveAnimation"	/>
	</component>

	<component	name="Vehicle"	>
		<property	name="id"					type="Number"		pk="true"/>
		<property	name="isObserved"			type="Boolean"		 sync="false"/>
		<property	name="appearing"			type="Boolean"		 sync="false"/>
		<property	name="visibilityFlags"		type="Integer"		/>

		<event		name="evObserveChange"	/>
		<event		name="evHit"	/>
		<event		name="evTransitionStarted"	/>
		<event		name="evVisibilityFlagsChanged"	/>
	</component>

	<component name="VehicleInfo">
		<property name="id" type="Number" pk="true"/> <!-- Vehicle.id -->
		<property name="shipInfoEntityId" type="Integer"/>

		<event		name="evShipInfoEntityIdChanged"	/>
	</component>

	<component name="Minimap">
		<property name="rotationAngleDeg"	type="Number"/>
		<property name="rotationStartDeg"	type="Number"/>
		<property name="followVehicle"		type="Boolean"	default="false"/>
		<property name="centerPoint"		type="Point"/>
		<property name="displayRadius"		type="Number"/>

		<event name="evRotationAngleDegChanged"/>
		<event name="evRectAttention"/>
		<event name="evRectAttentionOld"/>
		<event name="evPointAttention"/>
		<event name="evFollowVehicleChanged"/>
		<event name="evDispayCoordsChanged"/>
	</component>

	<component name="MinimapOption"	>
		<property	name="key"			type="String"	pk="true"/>
		<property	name="category"		type="Integer" sync="false"/>
		<property	name="value"		type="Integer"/>

		<event name="evValueChanged"/>
	</component>

	<component name="MinimapRange">
		<property name="parameterKey" 	type="String"/>
		<property name="type" 			type="Integer"	default="-1" sync="false"/>
		<property name="isConsumable" 	type="Boolean"/>
		<property name="isActive" 		type="Boolean"	default="true"/>

		<event name="evIsActiveChanged"/>
	</component>

	<component name="MapBorder">
		<property	name="ratio"				type="Number"		/>
		<property	name="relativeMargin"		type="Point"		/>
	</component>

	<component name="MinimapAttentionPoint">
		<property	name="avatarId"				type="Integer"/>
	</component>

	<component	name="Health"	>
		<property	name="value"				type="Integer"		/>
		<property	name="delta"				type="Integer"		/> <!-- currentValue - oldValue after change  -->
		<property	name="max"					type="Integer"		/>
		<property	name="damage"				type="Integer"		 sync="false"/>
		<property	name="selfDamage"			type="Integer"		 sync="false"/>
		<property	name="mirrorDamage"			type="Integer"		 sync="false"/>
		<property	name="isAlive"				type="Boolean"		default="true"/>
		<property	name="killerId"				type="Number"		/>

		<event		name="evValueChanged"		/>
		<event		name="evMaxChanged"			/>
		<event		name="evDeltaChanged"		/>
		<event		name="evIsAliveChanged"		/>
		<event		name="evKillerIdChanged"	/>
		<event		name="evChanged"	/>
	</component>

	<component name="ShortLifeObject">
		<property name="lastUpdate" type="Number" sync="false"/>

		<property name="needUpdate" type="Boolean" sync="false"/>
		<property name="updatePeriod" type="Number" sync="false"/>

		<property name="deathPeriod" type="Number" sync="false"/>
		<property name="beforeRemovePeriod" type="Number" sync="false"/>

		<property name="isRemoving" type="Boolean"/>

		<event name="evBeforeRemove"/>
		<event name="evRemove"/>
		<event name="evUpdate"/>
	</component>


	<component	name="FogHorn"	>
		<property	name="min"					type="Number"		 sync="false"/>
		<property	name="value"				type="Number"		/>
		<property	name="max"					type="Number"		/>
		<property	name="maxRegenTime"			type="Number"		/>
		<property	name="isHorning"			type="Boolean" default="false" />
		<property	name="isRegenerating"		type="Boolean" default="false" />
		<event		name="evFoghornStateChanged"	/>
	</component>

	<component name="PopupDamageGroup">
		<property name="id" type="String"	pk="true"/>
		<property name="isSelfDamage" type="Boolean" sync="false"/>

		<event name="evShowPopup"/>
	</component>

	<component name="DamagedModule">
		<property name="moduleId" type="Integer" pk="true"/>
		<property name="state" type="Integer" sync="false"/>
		<property name="damageFlag" type="Integer"/>
		<property name="damagedModulesCount" type="Integer" />
		<property name="damageFromNodes"	type="Number" sync="false"/>
		<property name="nodesCount" type="Integer"/>
		<property name="distanceBetweenNodes"	type="Number"/>
		<property name="hitsCount" type="Integer" sync="false"/>

		<event name="evStateChanged"/>
		<event name="evTimeLeftChanged"/>
		<event name="evTimeFullChanged"/>
		<event name="evDamageFlagChanged"/>
		<event name="evDamagedModulesCountChanged"/>
		<event name="evDamageFromNodesChanged"/>
		<event name="evHitsCountChanged"/>
		<event name="evNodesCountChanged"/>
		<event name="evDistanceBetweenNodesChanged"/>
	</component>

	<component name="WildFireState">
		<property name="damage" type="Number"/>
		<property name="visibilityFactor" type="Number"/>
		<property name="visibilityFactorByPlane" type="Number"/>
		<property name="visionDistance" type="Number"/>
		<property name="maxVisibilityDistance" type="Number"/>
	</component>

	<component name="Regeneration">
		<property name="maxValue" type="Integer"/>
		<property name="value" type="Integer"/>
		<event name="evChanged"/>
	</component>

	<component	name="SelfVehicle"	>
		<property	name="subtype"				type="String"	 sync="false"/>
		<property	name="levelRome"			type="String"	 sync="false"/>
		<property	name="name"					type="String"	 sync="false"/>
		<property   name="selectedWeapon"  		type="Integer"	 sync="false"/>
		<property   name="selectedAmmo"  		type="Integer"	 sync="false"/>
		<property   name="selectedNextAmmo"		type="Integer"	 sync="false"/>

		<property	name="shipTTX"				type="ShipTTX"		/>

		<event name="evSelectedWeaponChanged" />
		<event name="evSelectedAmmoChanged" />
		<event name="evSelectedNextAmmoChanged" />
	</component>

	<component	name="PlayerAvatar"	>
		<property	name="isAlive"							type="Boolean"		/>

		<property	name="willBeAliveAt"					type="Number"		/>
		<property	name="timeToRespawn"					type="Number"		/>

		<property	name="willBeDeadAt"						type="Number"		/>
		<property	name="timeToLive"						type="Number"		/>
		<property	name="enterToDynamicDivisionCooldown"	type="Number"/>

		<event		name="evTimeToRespawnChanged"	/>
		<event		name="evWillDieSoon"	/>
		<event		name="evIsAliveChanged"	/>
		<event		name="evEnterToDynamicDivisionCooldownChanged"/>
	</component>

	<component	name="Parameter"	>
		<property 	name="ownerID"						type="Number" pk="true"/>
		<property 	name="id" 							type="String" pk="true"/>
		<property	name="baseValue"					type="Number"		/>
		<property	name="currentValue"					type="Number"		/>

		<event		name="evChanged"	/>
	</component>

	<component name="ParameterView"	>
		<property name="currentValue"					type="String"/>

		<event	name="evCurrentValueChanged"/>
	</component>

	<component name="Consumable">
		<property 	name="type" 	type="Integer" pk="true"/>
		<property 	name="state" 	type="Integer" sync="false"/>

		<event		name="evStateChanged"/>
	</component>

	<component name="BattleHints">
		<property 	name="hints" 	type="Array"/>
		<property 	name="currentImageIdx" 	type="Integer"/>
		<event		name="refreshData"	/>
	</component>

	<component name="Drop">
		<property name="id" 					type="Number" pk="true"/>
		<property name="zoneName" 				type="String" sync="false"/>
		<property name="startTime" 				type="Number" sync="false"/>
		<property name="isActive" 				type="Boolean"/>
		<property name="isContested" 			type="Boolean"/>
		<property name="markerNameActive" 		type="String"/>
		<property name="markerNameInactive" 	type="String"/>

		<event name="evIsActiveChanged"/>
		<event name="evIsContestedChanged"/>
	</component>

	<component name="ShipModifier">
		<property name="id" 			type="String" pk="true"/> <!-- GPindex_ownerId -->
		<property name="name" 			type="String"/>
		<property name="ownerId" 		type="Number" sync="false"/>
		<property name="level" 			type="Number"/>
		<property name="maxLevel" 		type="Number"/>
		<property name="isPermanent" 	type="Boolean" sync="false"/>
		<property name="isNegative" 	type="Boolean"/>
		<property name="hidden" 		type="Boolean" sync="false"/> <!-- for now hidden from modifier panel and total modifier counter, but visible in ship params tooltop -->

		<event name="evLevelChanged"/>
		<event name="evMaxLevelChanged"/>
	</component>

	<component name="PortBuff">
		<property name="id" 			type="String" pk="true"/> <!-- GPindex_ownerId -->
		<property name="name" 			type="String"/>
		<property name="negative" 		type="Boolean"  default="false"/>
	</component>

	<component name = "DiplomacyTicket">
		<property name="avatarId"	type="Integer" pk="true"/>
		<property name="type"		type="Integer"/>
	</component>

	<component name = "DiplomacyTarget"/>

	<component	name="DiplomacyRelation"	>
		<property	name="value"				type="Integer"	default="-1"/>
		<event		name="evChanged"	/>
	</component>

	<component name="ShipModifiersCount">
		<property name="ownerId" 	type="Number" pk="true"/>
		<property name="count" 		type="Number" sync="false"/>

		<event name="evCountChanged"/>
	</component>

	<!-- HUD start-->

	<component name="Danger" sync="false">
		<property name="type" type="Integer"/>
	</component>

	<component name="VisibleDanger">
		<property name="type" 					type="Integer"/>
		<property name="yaw" 					type="Number"/>
		<property name="animationAngleDelta" 	type="Number" sync="false"/>
		<property name="yawRelativeDegrees" 	type="Number" sync="false"/>
		<property name="count" 					type="Number" sync="false"/>

		<event name="evRemoved"/>
		<event name="evYawUpdated"/>
		<event name="evChanged"/>
	</component>

	<component name="SimpleDanger">
		<property name="dist" type="String"/>
		<event name="evNearToFar"/>
		<event name="evFarToNear"/>
		<event name="evChanged"/>
	</component>

	<component name="CollisionDanger">
		<property name="state" type="Integer"/>

		<event name="evChanged"/>
	</component>

	<component name="DamageDanger">
		<event name="evDamage"/>
	</component>

	<component name="WaveHitDanger">
		<event name="evHit"/>
	</component>

	<component name="Cruise">
		<property name="type" 					type="Integer" pk="true"/>
		<property name="states" 				type="Array"/>
		<property name="statesPositiveNum" 		type="Integer"/>
		<property name="statesNegativeNum" 		type="Integer"/>
		<property name="state" 					type="Integer"/>

		<property name="min" 					type="Number"/>
		<property name="max" 					type="Number"/>
		<property name="value" 					type="Number"/>

		<property name="softCriticalEnabled" 	type="Boolean"/>
		<property name="jammed" 				type="Boolean"/>

		<event name="evValueChanged"/>
		<event name="evStateChanged"/>
		<event name="evStatesChanged"/>
		<event name="evJammedChanged"/>
		<event name="evSetStateFailed"/>
	</component>

	<component name="CruiseLimit">
		<property name="limitValue" 			type="Number"/>
		<property name="limitWarning" 			type="Boolean"/>
		<property name="limitWarningEnabled" 	type="Boolean"/>

		<event name="evLimitValueChanged"/>
		<event name="evLimitWarningChanged"/>
		<event name="evLimitWarningEnabledChanged"/>
	</component>

	<component name="FlightSpeed">
		<property name="value" type="Number"/>
		<property name="minValue" type="Number" sync="false"/>

		<event name="evValueChanged"/>
	</component>


	<!-- Crosshairs -->

	<component name="CrosshairsList">
		<property name="type" type="Integer" pk="true"/> <!-- static:0, dynamic:1 -->
		<property name="names" type="Array"/> <!-- CrosshairBinocularView.name -->
		<property name="crosshairIds" type="Array"/> <!-- CrosshairBinocularView.id -->
	</component>

	<component name="CrosshairBinocularView">
		<property name="id" type="Integer" pk="true"/>
		<property name="name" type="String" sync="false"/>
		<property name="renderer" type="String"/>
		<property name="textureIds" type="Array"/>  <!-- CrosshairTexture.id -->
	</component>

	<component name="CrosshairTexture">
		<property name="id" type="Integer" pk="true"/>
		<property name="x" type="Integer" default="0"/>
		<property name="y" type="Integer" default="0"/>
		<property name="path" type="String"/>
	</component>


	<component name="Crosshair">
		<property name="posY" type="Number" default="0"/>
		<property name="posX" type="Number" default="0"/>
		<!--<property name="isInCenterX" type="Boolean" default="true"/>-->
		<!--<property name="isInCenterY" type="Boolean" default="true"/>-->

		<property name="isVisible" type="Boolean" default="false" sync="false"/>

		<event name="evWeaponTypeChanged"/>
		<event name="evIsVisibleChanged"/>
	</component>

	<component name="ShootRange" sync="false">
		<property name="listStageRadius" type="Array" />
		<property name="horLineLength" type="Integer"/>
		<property name="vertLineLength" type="Integer"/>
		<property name="vertLineY" type="Integer"/>
	</component>

	<component name="AimAssist">
		<property name="distance" type="Number"/>
		<property name="collisionTime" type="Number"/>
		<property name="shootVisibilityDistance" type="Number"/>

		<event name="evShootVisibilityDistanceChanged"/>
	</component>

	<component name="AimLock">
		<property name="cameraDiffYaw" type="Number" default="0" sync="false"/>
		<property name="lockRelativeShipYaw" type="Number" default="0"/>
		<property name="angleLock" type="Boolean" default="false"/>
		<property name="sectorLock" type="Boolean" default="false"/>
		<property name="observeLock" type="Boolean" default="false"/>
		<event name="evAngleLockChanged"/>
		<event name="evObserveLockChanged"/>
		<event name="evSectorLockChanged"/>
		<event name="evLockRelativeShipYawChanged"/>
		<event name="evCameraDiffYawChanged"/>
	</component>

	<component name="TerrainAim">
		<property name="value" type="Boolean" default="false"/>
		<event name="evChanged"/>
	</component>


	<!-- ==================================================================================== -->
	<!-- WEAPONS -->
	<component name="Weapon">
		<property name="type" type="Integer" pk="true" />
		<property name="state" 			type="Integer"/> <!-- GunState -->
		<property name="groupsCount"	type="Integer" />

		<property name="canForceReload" type="Boolean" default="false" />

		<event name="evStateChanged" />
		<event name="evCanForceReloadChanged" />
		<event name="evShoot" />
	</component>

	<!-- GUNS -->
	<component name="Gun">
		<property name="id" type="Integer" pk="true" /> <!-- Composed by 8 bits of weapon type, other - gun id -->
		<property name="index" type="Integer"  sync="false"/>
		<property name="state" type="Integer"/> <!-- GunState -->
		<property name="type" type="Integer" />
		<property name="gunAdapterType" type="Integer"  sync="false"/> <!-- GUN_ADAPTER_TYPE -->

		<!-- Physical status -->
		<property name="position" type="Integer" />
		<property name="x" type="Number" />
		<property name="y" type="Number" />
		<property name="yaw" type="Number" />

		<property name="location" type="Integer"  sync="false"/> <!-- HitLocation ID -->
		<property name="status" type="Integer" />

		<event name="evStateChanged" />
		<event name="evYawChanged" />
		<event name="evStatusChanged" />
		<event name="evCharged" />
	</component>

	<component name="GunBarrel" />

	<component name="GunTarget">
		<property name="azimuth" type="Number" />
		<property name="offset" type="Number" />
		<property name="invalid" type="Boolean" default="true" />
		<property name="unreachable" type="Boolean" default="true"  sync="false"/>
		<property name="rotated" type="Boolean" default="true" />

		<event name="evAzimuthChanged" />
		<event name="evOffsetChanged" />
		<event name="evInvalidChanged" />
		<event name="evUnreachableChanged" />
		<event name="evRotatedChanged" />
	</component>

	<component name="GunMarker">
		<property name="index" type="Integer" />
		<property name="type" type="Integer"  sync="false"/><!-- WeaponType -->
		<property name="markerType" type="Integer" /> <!-- GUN_MARKER_TYPE -->
		<property name="position" type="Number" default="0"/>
		<property name="state" type="Integer" />
		<property name="active" type="Boolean" default="false" />
		<property name="visible" type="Boolean" default="false"/>

		<event name="evIndexChanged" />
		<event name="evStateChanged" />
		<event name="evPositionChanged" />
		<event name="evVisibleChanged" />
		<event name="evActiveChanged" />
	</component>

	<component name="GunsGroup">
		<property name="type" type="Integer" pk="true"/> <!-- WeaponType -->
		<property name="groupID" type="Integer" pk="true" />
		<property name="mostReadyGunId" type="Integer" /> <!-- most ready Gun entity id -->
		<property name="lookForward" type="Boolean"  sync="false"/> <!-- is group guns looks forward -->

		<event name="evMostReadyGunIdChanged" />
	</component>

	<!-- GUN BEHAVIORS -->
	<component name="SimpleGun" />
	<component name="ContinuousGun"  sync="false">
		<property name="enabled" type="Boolean"/>
	</component>
	<component name="ComponentGun" />

	<!-- GUN MODIFIERS -->
	<component name="ReloadModifier" sync="false">
		<property name="duration" type="Integer" />

		<event name="evDurationChanged" />
	</component>

	<component name="BarrelsModifier">
		<property name="barrels" type="Array" />
		<property name="mode" type="Integer" />

		<event name="evModeChanged" />
	</component>

	<component name="ChargeModifier" sync="false">
		<property name="duration" type="Integer" />

		<event name="evDurationChanged" />
	</component>

	<component name="HeatableModifier" />

	<component name="SerialLoaderModifier">
		<property name="serialLoads" type="Array" />
	</component>

	<component name="GroupModifier">
		<property name="groupID" type="Integer" />
	</component>

	<component name="ReloadBar">
		<property name="rowsCount" type="Integer" default="1"/>
		<property name="order" type="Number" default="-1"/>
		<property name="prevOrder" type="Number" default="-1"/>

		<property name="isOutOfBounds" type="Boolean"/>

		<event name="evOrderChanged"/>
	</component>

	<!-- SLOTS -->
	<component name="WeaponController">
		<property name="selectedWeapon" type="Integer" />
		<property name="activeIdWeapon" type="String" />

		<event name="evSelectedWeaponChanged" />
	</component>

	<component name="WeaponSlot">
		<property name="id" type="String" pk="true" />
		<property name="type" type="Integer" /> <!-- WeaponType -->
		<property name="ident" type="String" sync="false"/> <!-- SlotData.slotIdent -->
		<property name="ammoParamsId" type="Integer" sync="false"/> <!-- SlotData.ammoParamsId -->
		<property name="command" type="Integer" />
		<property name="state" type="Integer" /> <!-- GunState -->

		<property name="head" type="Boolean"  sync="false"/> <!-- Is first in slot group -->
		<property name="tail" type="Boolean" /> <!-- Is last in slot group -->

		<property name="active" type="Boolean" />
		<property name="selected" type="Boolean" />

		<event name="evStateChanged" />
		<event name="evActiveChanged" />
		<event name="evSelectedChanged" />
		<event name="evReloaded" />
		<event name="evCharged" />
	</component>

	<component name="SlotOptions">
		<property name="type" type="Integer" />
		<property name="selected" type="Integer" />
		<property name="items" type="Array" />
		<property name="showItemsSelector" type="Boolean"/>
		<property name="paramsDescriptor" type="String"	/>

		<property name="commandId" type="Integer" default="-1"/> <!-- default = CMD_NONE -->

		<event name="evSelectedChanged" />
	</component>

	<component name="ShipATBA">
		<property name="enabled" type="Boolean" />

		<event name="evEnabledChanged" />
	</component>

	<!-- ==================================================================================== -->

	<component name="GunsCount" sync="false">
		<property name="countGuns" type="Integer"/>
		<property name="countAliveGuns" type="Integer"/>
		<property name="countReloadedGuns" type="Integer"/>
		<property name="countActiveGuns" type="Integer"/>
		<event name="evChanged"/>
	</component>

	<component name="WeaponControl" sync="false">
		<property name="ammoTypes" type="Array"/>

		<property name="selectedIndex" type="Integer"/>
		<property name="nextSelectionIndex" type="Integer"/>

		<event name="evSelectedIndexChanged"/>
		<event name="evNextSelectionIndexChanged"/>
	</component>

	<component name="CarrierControl"/>

	<component name="AtbaControl"/>

	<component name="PlaneControl"  sync="false">
		<property name="planes" type="Array"/>
	</component>

	<component name="TorpedoControl" sync="false">
		<property name="isOneBarrel" 	type="Boolean"/>
		<property name="isSingleAngle" 	type="Boolean"/>
		<property name="isDeepWater" 	type="Boolean"/>
		<property name="showReloadPart" type="Boolean"/>

		<event name="evShowReloadPartChanged"/>
	</component>

	<component name="BattleConsumable">
		<property name="index"				type="Integer"/>
		<property name="cmd"				type="String"/>
		<property name="id"					type="Number"/>
		<property name="type"				type="Integer" pk="true"/>
		<property name="ident"				type="String"/>
		<property name="reloadTime"			type="Number"/> <!-- WWSD-196745 use for mods -->
		<property name="workTime"			type="Number"/> <!-- WWSD-196745 use for mods -->
		<property name="reloadTimeCoeff"	type="Number" default="1"/> <!-- WWSD-196745 use for mods -->
		<property name="workTimeCoeff"		type="Number" default="1"/> <!-- WWSD-196745 use for mods -->
		<property name="isSpecial"			type="Boolean" default="true"/>

		<property name="viewData"			type="ConsumableSlotData"/>

		<property name="state"				type="Integer"/>
		<property name="isLocked"			type="Boolean"/>
		<property name="consumeNum"			type="Integer"/>

		<property name="ownerSquadronId"	type="Integer" pk="true"/>		<!-- ownerSquadronId=-1 for ship -->
		<property name="modifierIndex"		type="String"/>

		<event name="evStateChanged"/>
		<event name="evConsumeNumChanged"/>
		<event name="evWorkStarted" />
		<event name="evWorkEnded" />
		<event name="evReloadStarted" />
		<event name="evReloadEnded" />
		<event name="evReloadTimeCoeffChanged" />
		<event name="evWorkTimeCoeffChanged" />
		<event name="evIsLockedChanged" />
	</component>

	<component name="Compass">
		<property	name="compassRotation"		type="Number"/>
		<property	name="shipDollRotation"		type="Number"/>
		<event name="evAimedGunEntityIdChanged" />
		<event name="evCompassRotationChanged" />
		<event name="evShipDollRotationChanged" />
	</component>

	<!-- Battle indicators -->
	<component	name="BattleIndication"	/>

	<!-- Alerts -->
	<component	name="AlertIndication">
		<property	name="spotType"						type="String"/>
		<property	name="focusedEnemies"				type="Integer"/>
		<property	name="intuitionActive"				type="Boolean"/>
		<property	name="isInRlsZone"					type="Boolean"/>
		<property	name="isSubmarineCollisionWarning"	type="Boolean"/>
		<property	name="squadronSpotType"				type="String"/>
		<property	name="squadronSpotFlags"			type="Integer"/>
		<property	name="squadronSpotted"				type="Boolean" sync="false"/>
		<property	name="underAntiAirAttack"			type="Boolean"/>
		<property	name="antiAirThreatCount"			type="Integer"/>
		<property	name="underFighterAttackStatus"		type="Integer"/> <!-- 0 - нет вардов, 1 - в зоне варда противника, 2 - вард противника атакует -->

		<event		name="evSpottedChanged"	/>
		<event		name="evArtilleryAlert"	/>
		<event		name="evFocusedEnemiesChanged"	/>
		<event		name="evIntuitionActiveChanged"	/>
		<event		name="evIsInRlsZoneChanged"	/>
		<event		name="evIsSubmarineCollisionWarningChanged"	/>
		<event		name="evSquadronSpottedChanged"	/>
		<event		name="evUnderAntiAirAttackChanged"	/>
		<event		name="evAntiAirThreatCountChanged"	/>
		<event		name="evUnderFighterAttackStatusChanged"	/>
	</component>

	<!-- Nearest enemy -->
	<component	name="NearestEnemyIndication">
		<property	name="yawToNearestEnemy"	type="Number"/>
		<property	name="showNearestEnemy"		type="Boolean"/>

		<event		name="evYawToNearestEnemyChanged"	/>
		<event		name="evShowNearestEnemyChanged"	/>
	</component>

	<!-- Acoustic detection -->
	<component	name="WaveHit">
		<property	name="targetID"			type="Integer" pk="true"/>   <!--	Waved vehicle ID -->
		<property	name="lifeTime"			type="Number"/>
		<property	name="maxLifeTime"		type="Number" sync="false"/>
		<property	name="alertTime"		type="Number"/>
		<property	name="hitCount"			type="Integer"/>
		<property	name="isActive"			type="Boolean"/>

		<event 		name="evLifeTimeChanged"/>
		<event 		name="evMaxLifeTimeChanged"/>
		<event 		name="evAlertTimeChanged"/>
		<event 		name="evHitCountChanged"/>
		<event 		name="evIsActiveChanged"/>
		<event 		name="evHit"/>
	</component>

	<!-- Weather -->
	<component	name="WeatherIndication" >
		<property	name="weatherState"			type="String"/>
		<property	name="weatherTimeLeft"		type="Number"/>

		<event name="evWeatherStateChanged"/>
		<event name="evWeatherTimeLeftChanged"/>
	</component>

	<!-- Smoke generator -->
	<component	name="SmokeIndication" >
		<property	name="showOwnSmoke"				type="Boolean"/>
		<property	name="smokeOwnLifeTime"			type="Number"/>
		<property	name="smokeInsideLifeTime"		type="Number"/>
		<property	name="smokePointDamaged"		type="Boolean"/>
		<property	name="visible"					type="Boolean"/>
		<event		name="evSmokeTimerChanged" />
		<event		name="evSmokeShoot"/>
	</component>

	<!-- Fighters ward -->
	<component	name="FightersWardIndication" >
		<property	name="wardInsideLifeTime"		type="Number"/>

		<event		name="evWardTimerChanged" />
	</component>

	<!-- Capture points -->
	<component	name="CapturePoint"	>
		<property	name="id"					type="Integer"		pk="true"/>
		<property	name="label"				type="String"		/>
		<property	name="type"					type="Integer"		/>
		<property	name="invaderRelation"		type="Integer"		/> <!-- Who is capturing neutral point -->
		<property	name="visible"				type="Boolean"		/>
		<property	name="active"				type="Boolean"		/>
		<property	name="bothInside"			type="Boolean"		/>
		<property	name="timeLeft"				type="Number"		/>
		<property	name="timerName"			type="String"		/>
		<!-- Id of parent epicenter point, if any -->
		<property	name="epicenterId"			type="Integer"		default="0"/>
		<!-- number of circle in epicenter -->
		<property	name="epicenterIndex"		type="Integer"		default="0"/>
		<property	name="selfInvader"			type="Boolean"		 sync="false"/>

		<event		name="evInvaderChanged"	/>
		<event		name="evTimeLeftChanged"	/>
		<event		name="evBothInsideChanged"	/>
		<event		name="evVisibleChanged"	/>
		<event		name="evActiveChanged"	/>
		<event		name="evSelfInvaderChanged"	/>
	</component>

	<component	name="Epicenter"	>
		<property	name="id"					type="Integer"		pk="true"/>

	</component>

	<component	name="BuffDisplay"	></component> <!--Pinata 2024-->

	<component	name="CapturePointWorldView"		sync="false">
		<property	name="id"					type="Integer"/>
		<property	name="showProgress"			type="Boolean"/>
	</component>

	<component	name="WorldMarkerScale">
		<property	name="value"				type="Number"/>
		<event		name="evValueChanged"	/>
	</component>

	<!-- Scenario objects -->
	<component	name="Payload"		>
		<property	name="targetId"					type="Number" pk="true"/>
		<property	name="isSelfInside"				type="Boolean" default="false"/>
		<property	name="movers"					type="Integer"/>
		<property	name="blockers"					type="Integer"/>
		<property	name="state"					type="Integer"/>
		<property	name="speed"					type="Number"/>
		<property	name="maxUIIndex" 				type="Integer"/>
		<property	name="uiIndex" 					type="Integer" />

		<event		name="evIsSelfInsideChanged"		/>
		<event		name="evPlayersChanged"				/>
		<event		name="evStateChanged"				/>
		<event		name="evSpeedChanged"				/>
		<event		name="evUiIndexChanged"/>
	</component>

	<component	name="KeyObject"		>
		<property	name="type"					type="Integer" sync="false"/>
		<property	name="value"				type="Number"/>
		<property	name="maxValue"				type="Number"/>
		<property	name="thresholds"			type="Array"/>
		<property	name="view"					type="Integer"/>

		<event		name="evValueChanged"	/>
		<event		name="evViewChanged"	/>
	</component>

	<component	name="ScenarioObject"		>
		<property	name="id"					type="String"		pk="true"/>
		<property	name="type"					type="String" sync="false"/>
		<property	name="taskEntityId"			type="Integer"/>
		<property	name="view"					type="Integer"/>

		<event		name="evHide"	/>
		<event		name="evShow"	/>
		<event		name="evViewChanged"	/>
	</component>

	<component	name="ScenarioTag"		>
		<property	name="id"					type="String"		pk="true"/>
		<property	name="type"					type="String"  sync="false"/>
		<property	name="appearance"			type="Integer"/>
		<property	name="taskEntityId"			type="Integer"/>
		<property	name="view"					type="Integer"/>

		<event		name="evViewChanged"	/>
	</component>

	<component	name="State"		>
		<property	name="id"					type="String"		pk="true"/>
		<property	name="ownerId"				type="Integer"		pk="true"/>
		<property	name="squadronOwnerId"		type="Integer"		default="-1" pk="true"/>
		<property	name="type"					type="Integer"		/> <!-- category -->
		<property	name="status"				type="Integer"		/>
		<property	name="view"					type="Integer"		/>

		<event		name="evStatusChanged"	/>
		<event		name="evViewChanged"	/>
	</component>

	<!-- Torpedos -->
	<component	name="Torpedo"	>
		<property	name="id"					type="String"		pk="true"/>
		<property	name="ownerID"				type="Integer"		 sync="false"/>
		<property	name="shotID"				type="Integer"		 sync="false"/>
		<property	name="depth"				type="Number"		 sync="false"/>

		<property	name="type"					type="String"		/>

		<event		name="evTypeChanged"		/>
	</component>

	<!-- Mines -->
	<component	name="Minefield"	>
		<property	name="id"					type="Integer"		pk="true"/>
		<property	name="isActive"				type="Boolean" 		default="false" />

		<event		name="evIsActiveChanged"		/>
	</component>

	<component	name="Mine"	>
		<property	name="id"					type="String"		pk="true"/>
		<property	name="minefieldId"			type="Integer" 		default="0"/>
		<property	name="isActive"				type="Boolean" 		default="false" />
		<property	name="dangerLevel"			type="Integer" 		default="0" />

		<event		name="evIsActiveChanged"/>
		<event		name="evDangerLevelChanged"	/>
	</component>

	<!-- Waves -->
	<component	name="Wave" sync="false"	>
		<property	name="id"					type="String"		pk="true"/>
		<property	name="ownerID"				type="Integer"		/>
		<property	name="shotID"				type="Integer"		/>
		<property	name="isDangerous"			type="Boolean"		/>
		<event		name="evIsDangerousChanged"	/>
	</component>

	<!-- General -->
	<component	name="WorldPosition"	sync="false">
		<property	name="source"				type="Entity"		/>
 		<property	name="getPosition"			type="Entity"		/>
 		<property	name="getYaw"				type="Entity"		/>
		<property	name="getPitch"				type="Entity"		/>
 	</component>

	<component	name="Distance"	>
		<property	name="distanceToShip"		type="Number"		/>
		<property	name="distanceToShipBW"		type="Number"		 sync="false"/>	<!-- BigWorld meters -->
		<property	name="distanceToCamera"		type="Number"		 sync="false"/>
		<property	name="distanceIndex"		type="Integer"		/>

		<event		name="evDistanceIndexChanged"		/>
	</component>

	<component	name="ScreenOffset"	sync="false">
		<property	name="distanceDependant"	type="Boolean"		default="true"/>
		<property	name="dx"					type="Number"		/>
		<property	name="dy"					type="Number"		/>
	</component>

	<component	name="HeightOffset"	sync="false">
		<property	name="value"				type="Number"		/>
	</component>

	<component	name="MapPosition"	>
		<property	name="position"				type="Point"		/>
		<property	name="yaw"					type="Number"		/>

		<event		name="evPositionChanged"		/>
	</component>

	<component name="MinimapMarker">
		<property name="layer"		type="Integer" default="-1" sync="false"/> <!-- MINIMAP_MARKERS_LAYER -->
		<property name="zindex"		type="Integer"		/> <!-- for sorting items in layers -->

		<event name="evZindexChanged"/>
	</component>

	<component	name="MapProjection"	sync="false">
		<property	name="offset"				type="Number"		/>
	</component>

	<component	name="ScreenPosition"	>
		<property	name="position"				type="Point"		/>
		<property	name="behindCamera"			type="Boolean"		/>

		<!-- Which function to use to calculate the position:
			Lesta.getScreenPositionByWorldPosition or
			UIMath.getScreenPositionByWorldPositionExtended
			uses the first one by default -->
		<property	name="extended"				type="Boolean"		 sync="false"/>
		<property	name="heightOffset"			type="Number"		 sync="false"/>
		<property	name="useRealPosition"		type="Boolean"		 sync="false"/>
	</component>

	<!-- Same as Screen Position but have Y=0 when Camera is upper water -->
	<component	name="SubmarineScreenPosition"	>
		<property	name="position"				type="Point"		/>
		<property	name="heightOffset"			type="Number"		 sync="false"/>
	</component>

	<component name="WorldMarker">
		<property name="layer"		type="Integer" default="-1" sync="false"/> <!-- WORLD_MARKERS_LAYER -->
		<property name="zindex"		type="Integer"		/> <!-- for sorting items in layers -->

		<event name="evZindexChanged"/>
	</component>

	<component name="EntityType">
		<property name="value" type="Integer" default="-1"/>
	</component>

	<component name="VehicleRelativePosition" sync="false" >
		<property	name="vehicle"				type="Entity"		/>
		<property	name="arg1"					type="Integer"		/>
		<property	name="arg2"					type="Integer"		/>
		<property	name="offset"				type="Integer"		/>
	</component>

	<component	name="BigWorldEntity"	>
		<property	name="id"					type="Integer"		pk="true"/>
	</component>

	<component	name="QuickCommand"	>
		<event		name="evPlay"	/>
	</component>

	<component	name="Selection"	>
		<property	name="value"				type="Boolean"		/>
		<event		name="evChanged"	/>
	</component>
	<component	name="Target"	>
		<property	name="flags"				type="Integer"		/>

		<event		name="evFlagsChanged"	/>
		<event		name="evChanged"	/>
	</component>

	<component	name="AimPosition"	>
		<property name="offset"			type="Number" 	/>
		<property name="visible"		type="Boolean" 	/>

		<event name="evChanged"/>
	</component>

	<component	name="CanHit">
		<property	name="flags"		type="Integer"		default="65535" /> <!-- Default value is correct, don't edit it! -->
		<property	name="reasons"		type="Array" /> <!-- array of CANT_HIT_REASON per weaponType -->

		<event		name="evChanged"	/>
	</component>

	<component	name="Camera"	>
		<property	name="yaw"					type="Number"		/>
		<property	name="frustumAngle"			type="Number"		/>
		<property	name="heightPercent"		type="Number"		 sync="false"/>
		<property	name="directionLineAngle"	type="Number"		 sync="false"/>
		<property	name="frustrumPoints"		type="Array"		 sync="false"/>
		<property	name="visibilityRange"		type="Number"		/>
		<property	name="visibilityRangePerc"	type="Number"		/>
		<property	name="trackingTargetType"	type="Integer"		default="-1" sync="false"/>
		<property	name="trackingMask"			type="Integer"		 sync="false"/>

		<property	name="mode"					type="Integer"		/> <!-- Camera\__init__.py CameraMode -->
		<property	name="altVision"			type="Boolean"		/>
		<property	name="isTactical"			type="Boolean"		/>
		<property	name="isBinocular"			type="Boolean"		/>
		<property	name="isMaskedBinocular"	type="Boolean"		/>
		<property	name="observing"			type="Boolean"		/>
		<property	name="isAnimating"			type="Boolean"		/>
		<property	name="observedPlayerId"		type="Integer"		/>
		<property	name="observedShipId"		type="Integer"		/>

		<event		name="evModeChanged"	/>
		<event		name="evFrustumAngleChanged"/>
		<event		name="evAltVisionChanged"	/>
		<event		name="evTacticalStateChanged"	/>
		<event		name="evIsBinocularChanged"	/>
		<event		name="evIsMaskedBinocularChanged"	/>
		<event		name="evObservingChanged"	/>
		<event		name="evIsAnimatingChanged"	/>
		<event		name="evObservedPlayerIdChanged"	/>
		<event		name="evObservedShipChanged"	/>
		<event		name="evVisibilityRangeChanged"	/>
		<event		name="evTrackingTargetChanged"	/>
		<event		name="evTrackingAvailabilityChanged"	/>
	</component>

	<component	name="Mouse"	>
		<property	name="x"					type="Number"		/>
		<property	name="y"					type="Number"		/>
		<property	name="active"				type="Boolean"		/>
		<property	name="overGUI"				type="Boolean"		 sync="false"/>

		<event		name="evActiveChanged"	/>
		<event		name="evOverGUI"		/>
	</component>

	<component	name="MouseHandler"	>
		<property	name="markerSize"				type="Integer" default="45"/>
		<property	name="tacticalSize"				type="Integer" default="18"/>
		<property	name="miniMapSize"				type="Integer" default="1" sync="false"/>
		<property	name="isCentered"				type="Boolean" default="true"/>

		<property	name="type"						type="Integer" sync="false"/>
		<event name="evOver"/>
	</component>

	<component name="ClosestMouseHandler"/>
	<component name="LookMouseHandler"/>
	<component name="SelectedMouseHandler"/>

	<component name="NearMouseHandler"  sync="false">
		<property name="distance" type="Number"/>
	</component>

	<component	name="Timer"	>
		<property name="currentTime"			type="Number"/>
		<property name="currentServerTime"		type="Number"/>
		<event		name="evDrawer"		/> <!-- TODO: WWSD-76249 REMOVE THIS EVENT and replace with Event.ENTER_FRAME -->
		<event		name="evFrequent"		/>
		<event		name="evInfrequent"	/>
	</component>

	<component	name="Progress"	>
		<property	name="value"				type="Number"		/>
		<property	name="min"					type="Number"		/>
		<property	name="max"					type="Number"		/>
		<event		name="evChanged"		/>
		<event		name="evMaxChanged"		/>
	</component>

	<component name="CountDown">
		<property name="endTime" type="Number"/>
		<property name="duration" type="Number"/>
		<property name="remain" type="Number"/>
		<property name="reloadPercent" type="Number"/>
		<event	name="evDurationChanged"/>
		<event	name="evEndTimeChanged"/>
		<event	name="evRemainChanged"/>
		<event	name="evChanged"/>
	</component>

	<component	name="Stage"	>
		<property	name="width"				type="Integer"		/> <!-- scaled down width for UI to apply with saleX -->
		<property	name="height"				type="Integer"		/> <!-- scaled down height for UI to apply with saleY -->
		<property	name="widthNotScaled"		type="Integer"		/> <!-- real window canvas width -->
		<property	name="heightNotScaled"		type="Integer"		/> <!-- real window canvas height -->
		<property	name="scale"				type="Number"		/>

		<event		name="evStageSizeChanged"		/>
	</component>

	<component name="LocalWeather">
		<property 	name="id" 					type="Integer"		pk="true"/>
		<property 	name="gpName" 				type="String"		/> <!-- LocalWeather GameParam.name -->

		<event		name="evChanged"		/>
	</component>

	<!-- Battle Tasks & Tutorial -->
	<component	name="Task"	>
		<property 	name="id"					type="String"		pk="true"/>
		<property	name="category"				type="Integer"		 sync="false"/>
		<property	name="status"				type="Integer"		/>
		<property	name="text"					type="String"		/>
		<property	name="progressType"			type="Integer"		/>
		<property	name="showOnHUD"			type="Integer"		 sync="false"/>


		<property	name="currentValue"			type="Number"		/>
		<property	name="targetValue"			type="Number"		 sync="false"/>
		<property	name="startTime"			type="Number"		/>

		<event		name="evStatusChanged"		/>
	</component>

	<component name="TaskAnimation"  sync="false">
		<property	name="id"					type="String"		/>
		<property	name="category"				type="Integer"		/>
		<property	name="type"					type="Integer"		/>
	</component>

	<component	name="TaskView"	>
		<property	name="id"					type="String"		pk="true"/>
		<property	name="key"					type="String"		 sync="false"/>
		<property	name="header"				type="Boolean"		/>

		<event		name="evUpdated"		/>
		<event		name="evDone"			/>
		<event		name="evFailed"			/>
		<event		name="evStartHide"		/>
	</component>

	<component	name="Timeout"	>
		<property	name="time"					type="Number"		/>
		<property	name="total"				type="Number"		/>
		<property	name="running"				type="Boolean"		/>
		<event		name="evTimeChanged"		/>
		<event		name="evTotalChanged"		/>
		<event		name="evRunningChanged"		/>
	</component>

	<!-- Geometry -->
	<component	name="Circle">
		<property	name="radius"				type="Number"/>
		<property	name="innerRadius"			type="Number"		default="0"/>

		<event		name="evRadiusChanged"		/>
		<event		name="evInnerRadiusChanged"		/>
	</component>



	<component name="PreBattle">
		<property	name="id"					type="Integer"		pk="true"/>
		<property	name="ownerId"				type="Integer"		/>
		<property	name="preBattleType"		type="Integer"		/>
		<property	name="isInBattle"			type="Boolean"		/>
		<property	name="availableShipClasses"	type="Array"		sync="false"/>
		<property	name="shipClassesCount"		type="Dictionary"	sync="false"/> <!-- {'teamId': {'shipClass': 0}} -->
		<property	name="shipLevelsCount"		type="Dictionary"	sync="false"/> <!-- {'teamId': {'shipLevel': 0}} -->
		<property	name="shipIdsCount"			type="Dictionary"	/> <!-- {'teamId': {'shipId1': n, 'shipId2': m, etc}} -->
		<property	name="abilityIdsCount"		type="Dictionary"	/> <!-- {'abilityId1': n, 'abilityId2': m, etc}} -->

		<event		name="evOwnerIdChanged"							/>
		<event		name="evShipClassesCountChanged"				/>
		<event		name="evShipLevelsCountChanged"					/>
		<event		name="evStatusChanged"							/>
	</component>

	<!-- Clans -->
	<component name="Clan">
		<property name="id"						type="Integer"		pk="true"/>
		<property name="tag"					type="String"/>
		<event name="evTagChanged" />
	</component>

	<component name="ClanExtended">
		<property name="id"								type="Integer"		pk="true"/>
		<property name="name"							type="String"/>
		<property name="messageOfTheDay"				type="String"/>
		<property name="messageOfTheDayState"			type="Integer" default="0"/> <!-- shared_constants.clan.CLAN_MESSAGE_OF_THE_DAY_STATE -->
		<property name="activeClanBattlePlayers"		type="Integer" sync="false"/>
		<property name="color"							type="String"/>
		<property name="league"							type="Integer"/>
		<property name="membersCount"					type="Integer" sync="false"/>
		<property name="maxMembersCount"				type="Integer" sync="false"/>
		<property name="isFull"							type="Boolean"/>
		<event name="evNameChanged" />
		<event name="evMessageOfTheDayChanged" />
		<event name="evMessageOfTheDayStateChanged" />
		<event name="evActiveClanBattlePlayersChanged" />
		<event name="evIsFullChanged" />
		<event name="evColorChanged" />
		<event name="evLeagueChanged" />
	</component>

	<component name="Clanman">
		<property	name="clanId"				type="Integer"	/>
		<property	name="role"					type="String"	/> <!-- @see  clans_constants.CLAN_ROLE-->
		<event		name="evClanIdChanged"						/>
		<event		name="evRoleChanged"					/>
	</component>

	<component name="ClanmanSupplyInfo">
		<property	name="hasClanSquadModifier"	type="Boolean"/>
		<event		name="evHasClanSquadModifierChanged" />
	</component>

	<component name="ClanInvitee"	 sync="false">
		<property	name="inviteId"				type="Integer"/>
		<property	name="clanId"				type="Integer"/>
		<property	name="senderId"				type="Integer"/>
	</component>

	<!-- System Messages -->
	<component	name="Data"	>
		<property	name="data"			type="Dictionary"			/>
		<event		name="evChanged"								/>
	</component>

	<component	name="Show"	>
		<property	name="waiting"		type="Boolean"				/>
		<property	name="showTime"		type="Integer"				 sync="false"/>
		<property	name="show"			type="Boolean"				 sync="false"/>
		<event 		name="evShowChanged"							/>
		<event		name="evWaitingChanged"							/>
		<event		name="evHide"									/>
	</component>

	<component name="InteractiveMessageWindow">
	</component>

	<!-- Coach Screens -->
	<component name="Coach">
		<property	name="hint"			type="Integer"		pk="true"/>
		<property	name="show"			type="Boolean"				/>
		<event		name="evShow"									/>
	</component>

	<component name="UserTask">
		<property	name="flags"			type="Array"			/>
		<event		name="evFlagChanged"							/>
	</component>

	<!-- Additional content "eyes" -->
	<component name="PeculiarityEye">
		<property	name="name"			type="String"		pk="true"/>
		<property	name="category"		type="String"				/>
		<property	name="ids"			type="String"				/>
		<property	name="value"		type="Integer"				/>
		<property	name="enabled"		type="Boolean"				/>
		<event		name="evEnabledChanged"							/>
	</component>

	<!-- Voice Chat -->
	<component name="VoiceChat">
		<property	name="tag"			type="Integer"		pk="true"/>
		<property	name="active"		type="Boolean"				/>
		<property	name="outgoing"		type="Boolean"				/>

		<event		name="evActiveChanged"							/>
		<event		name="evOutgoingChanged"						/>
	</component>

	<component name="PlayerVoiceState">
		<property	name="tag"			type="String"	pk="true"/>
		<property	name="playerURI"	type="String"	sync="false"/>
		<property	name="isMuted"		type="Boolean"	/>
		<property	name="isSpeaking"	type="Boolean"	/>

		<event		name="evIsMutedChanged"				/>
		<event		name="evIsSpeakingChanged"			/>
	</component>

	<!-- Battle Results -->
	<component name="BattleResultsComponent" sync="false">
		<property	name="arenaUniqueID"			type="String"		pk="true"/>
		<!--		raw data from server-->
		<property	name="serverData"						type="Dictionary"/>
		<!--		data for gui-->
		<property	name="me"								type="Dictionary"/>
		<property	name="common"							type="Dictionary"/>
		<property	name="players"							type="Dictionary"/>
		<property	name="privateData"						type="Dictionary"/>
		<property	name="buildings"						type="Dictionary"/>
		<property	name="buildingInteractionsList"			type="Array"/>
		<property	name="interactions"						type="Dictionary"/>
		<property	name="interactionsList"					type="Array"/>
		<property	name="accountDBID"						type="Integer"/>
		<event 		name="evChanged"/>
	</component>

	<!--	battle results new style in BattleResultsSystemGUI-->
	<component name="BattleResultsStructured">
		<property	name="causedDamage"				type="Array"/>
		<property	name="generalInfo"				type="Array"/>
		<property	name="takenDamage"				type="Array"/>
		<property	name="interactions"				type="Array"/>
		<property	name="buildingInteractions"		type="Array"/>
		<property	name="base_economics"			type="Array"/>
		<property	name="prem_economics"			type="Array"/>
		<property	name="isPremium"				type="Boolean"/>
		<property	name="shipId"					type="Number"/>
		<property	name="takenArtilleryTooltip"	type="Array"/>
		<property	name="takenTorpedoesTooltip"	type="Array"/>
		<property	name="takenBombsTooltip"		type="Array"/>
		<property	name="takenSkipBombsTooltip"	type="Array"/>
		<property	name="takenRocketsTooltip"		type="Array"/>
		<property	name="takenAirsupportTooltip"	type="Array"/>
		<property	name="takenNavalMinesTooltip"	type="Array"/>
		<property	name="takenDepthChargesTooltip"	type="Array"/>
		<property	name="takenOtherTooltip"		type="Array"/>
		<property	name="scoutingDamageTooltip"	type="Array"/>
		<property	name="deficitList"				type="String"/>
	</component>

	<component name="BattleResultsEntry">
		<property	name="type"				type="String"/>
		<property	name="title"			type="String"/>
		<property	name="values"			type="Array"/>
		<property	name="children"			type="Array"/>
		<property	name="color"			type="String"/>
		<property	name="bgColor"			type="String"/>
		<property	name="expandGroupName"	type="String"/>
		<property	name="blockName"		type="String"/>
		<property	name="subtitle"			type="String"/>
		<property	name="tooltipType"		type="String"/>
		<property	name="hint"				type="String"/>
	</component>

	<component	name="CountComponent">
		<property	name="value"			type="Integer"/>
		<event		name="evUpdate"/>
		<event name="evChanged"/>
	</component>

	<!-- CONFIG START-->
	<component	name="ExteriorConfig">
		<property	name="id"				type="Number"	pk="true"/>
		<property	name="canBuy"			type="Boolean"			/>
		<property	name="name"				type="String"			/>
		<property	name="type"				type="Integer"			/>

		<property 	name="peculiarity" 		type="String"/>
	</component>

	<!-- CONFIG END-->

	<!-- UI Filters START-->

	<component	name="ShipFilterItem">
		<property	name="id"				type="String"	pk="true"/>
		<property	name="type"				type="Integer"			/>
		<property	name="field"			type="String"			/>
		<property	name="countInOwnShips"	type="Integer"	default="0" sync="false"/>
		<event		name="evUpdate"/>
	</component>

	<component	name="FilteringGroup">
		<property	name="id"				type="String"	pk="true"/>
		<property	name="selectedFilters"	type="Array"			/> <!-- ShipFilterItems entity id's split by type into sub arrays -->
		<property	name="levelString"		type="String"			/>
		<property	name="isEmpty"			type="Boolean"	default="true"/>
		<event		name="evUpdate"/>
	</component>

	<component	name="SpecificShipsList">
		<property	name="id"				type="String"	pk="true"/>
		<property	name="excludedShips"	type="Array"			/>
		<property	name="includedShips"	type="Array"			/>
		<event		name="evUpdate"/>
	</component>

	<component	name="FilterPanel">
		<property	name="sortFieldIndex"				type="Integer"			/>
		<property	name="reverse"						type="Boolean"	default="false"/>
		<property	name="sortFields"					type="Array"			/>
		<property	name="enabledFilters"				type="Array"			/>
		<property	name="hasBattleTypeRestrictions"	type="Boolean"	default="false"/>
		<property	name="searchString"					type="String"			/>

		<event		name="evUpdate"/>
		<event		name="evSearchStringChanged"/>
		<event		name="evSortOrderChanged"/>
		<event		name="evBattleTypeRestrictionsChanged"/>
	</component>


	<component	name="ShipFilterData" sync="false">
		<property	name="id"						type="String"	pk="true"/>
		<property	name="suitableFilters"			type="Array"/> <!-- ShipFilterItems entity id's split by type into sub arrays -->
		<event		name="evUpdate"/>
	</component>

	<component name="CarouselFilter">
		<property	name="isFiltered"		type="Boolean"	default="true"/>
		<event		name="evUpdate"/>
	</component>

	<component name="ShipTechRestrictions" sync="false">
		<property	name="id"						type="String"	pk="true"/>
		<property	name="restrictions"				type="Array"/>
	</component>


	<component	name="DivisionRestrictions">
		<property	name="id"						type="String"	pk="true"	/>
		<property	name="typesCount"				type="Dictionary"			/><!--shipTypeFilterId:( minNum, maxNum) etc-->
		<property	name="levelsCount"				type="Dictionary"			/><!--shipLevel:( minNum, maxNum) etc-->
		<property	name="shipsCount"				type="Array"				/><!--( minShips, maxShips) etc-->
		<property	name="hasForbiddenShipType"		type="Boolean"				/>
		<property	name="dependedTypesCount"		type="Dictionary"	 sync="false"		/><!--shipTypes: [shipType1, shipType2, etc], min: minValue, max: maxValue-->
		<property	name="abilitiesCount"			type="Dictionary"	 sync="false"		/><!--{abilID: maxNumber, ...} -->
		<property	name="excludedShipsIds"			type="Array"		 sync="false"		/><!--( ids of excluded ships) etc used for filtering-->
		<property	name="limitedShipsIds"			type="Array"				/><!--{ [[[shipid1, shipid2, ..], limit1], [[shipid1, shipid2, ..], limit2],...} etc used for filtering-->
		<property	name="maxRepeatingShips"		type="Integer"		 sync="false"		/><!-- num of max num of the same ships etc-->
		<event		name="evUpdate"/>
	</component>

	<!-- UI Filters END-->

	<!-- UI divisions restrictions and ship types START -->
	<component	name="DivisionShipCountRestriction">
		<property	name="preBattleId"		type="Integer"		 sync="false"/>
		<property	name="teamId"			type="Integer" 		 sync="false"/>
		<property	name="shipClasses"		type="Array"		/>
		<property	name="shipLevel"		type="Integer"		/>
		<property	name="shipLevelRoman"	type="String"		/>
		<property	name="curCount"			type="Integer"		/>
		<property	name="maxCount"			type="Integer"		/>
		<event		name="evCurCountChanged"/>
		<event		name="evUpdate"/>
	</component>

	<!-- UI divisions restrictions and ship types END -->

	<component name="InvitationToDivision">
		<property 	name="preBattleId" 		type="Number" pk="true"/>
		<property 	name="creationTime" 	type="Number" sync="false"/>
		<property 	name="expirationTime" 	type="Number"/>
		<property 	name="currentTime" 		type="Number" sync="false"/>
		<property 	name="progress" 		type="Number" sync="false"/>
		<property 	name="timeLeft" 		type="Number"/>
		<property 	name="senderLevel" 		type="Integer"/>
		<property 	name="senderRank" 		type="Integer"/>
		<property 	name="senderName" 		type="String"/>
		<property 	name="tkStatus" 		type="Boolean"/>
		<event 		name="evUpdate"/>
	</component>

	<component	name="DockDataMarker"/>

	<component	name="Comparison">
		<property 	name="tooltipTTX" 			type="ShipTTX"/>
		<property 	name="panelTTX" 			type="ShipTTX"/>
		<property 	name="modalTTX" 			type="ShipTTX"/>
		<property 	name="compareTTX" 			type="ShipTTX"/>
		<property 	name="compareReversedTTX" 	type="ShipTTX"/>

		<!-- selectedConfig is a ShipConfig used to calculate selected TTX -->
		<property 	name="selectedConfig" 	type="Dictionary" default="null" sync="false"/>
		<!-- selectedTTX holds pure value without comparison -->
		<property 	name="selectedTTX" 		type="ShipTTX" default="null" sync="false"/>

		<property 	name="hasTooltipIntegralDiff" 	type="Boolean"/>
		<property 	name="hasModalIntegralDiff" 	type="Boolean"/>

		<event 		name="evTooltipTTXChanged"/>
		<event 		name="evPanelTTXChanged"/>
		<event 		name="evModalTTXChanged"/>
		<event 		name="evCompareTTXChanged"/>
		<event 		name="evSelectedTTXChanged"/>
	</component>

	<component	name="ShipBattleInfo">
		<property	name="playerId"				type="Number"	pk="true"/>
		<property	name="shipId"				type="Number"/>
		<property	name="cloneShipId"			type="Number"	default="-1"/>
		<property	name="isRealParams"			type="Boolean"	default="false"/>
		<property	name="shipTTX"				type="ShipTTX"/>
		<property	name="condensedTTX"			type="CondensedTTX"/>
		<property	name="altFireMode"			type="ConsumableSlotData"/>
		<property	name="rageFireMode"			type="RageModeSlotData"/>
		<property	name="armaments"			type="Array"	contains="ConsumableSlotData"/>
		<property	name="mainConsumables"		type="Array"	contains="ConsumableSlotData"/>
		<property	name="altConsumables"		type="Array"	contains="ConsumableSlotData"/>
		<property	name="tacticalConsumables"	type="Array"	contains="ConsumableSlotData"/>
		<property	name="squadronConsumables"	type="Array"	contains="ConsumableSlotData"/>

		<event		name="evChanged"/>
	</component>

	<component	name="DockData">
		<property 	name="isModernizationSeen"		type="Boolean"	default="false" sync="false"/>
		<property 	name="excursionVisible"			type="Boolean"	default="false"/>
		<property 	name="excursionTarget"			type="ExcursionTarget"/>
		<property 	name="unseenModernizationType"	type="Integer" sync="false"/>
		<property 	name="playersOnCurrentRealm"	type="Integer"/>
		<property 	name="playersOnlineWorldwide"	type="Integer"/>
		<property 	name="serverName"				type="String"/>
		<property 	name="isArmorVisible"			type="Boolean"/>
		<property 	name="isShipOverviewEnabled"	type="Boolean"/>
		<property 	name="isDockInputLockedByEH"	type="Boolean"/>
		<property 	name="isDockInputLocked"		type="Boolean"/>

		<event		name="evUpdate"/>
		<event		name="evBattleChooserChanged"/>
		<event		name="evOperationChooserChanged"/>
		<event		name="evPlayersOnCurrentRealmChanged"/>
		<event		name="evPlayersOnlineWorldwideChanged"/>
		<event		name="evExcursionVisibleChanged"/>
		<event		name="evExcursionTargetChanged"/>
		<event		name="evIsArmorVisibleChanged"/>
		<event		name="evTTXCollapsed"/>
		<event		name="evIsShipOverviewEnabledChanged"	/>
		<event		name="evIsDockInputLockedByEHChanged"	/>
		<event		name="evIsDockInputLockedChanged"	/>
	</component>

	<component	name="ShipSelection">
		<property	name="currentShipId"		type="Number"		/>
		<property	name="isFitForBattleType"	type="Boolean"		/>
		<property	name="currentShipIdForModuleInset"	type="Number"/>
		<property	name="currentShipIdForResearch"			type="Number"		/>

		<event		name="evShipUpdate"/>
		<event		name="evShipExteriorsFilled"/>
		<event		name="evShipViewUpdate"/>
	</component>

	<!-- SHIP LIST START-->

	<!-- Ships, upgrades and modules -->
	<component	name="Ship">
		<property	name="id"					type="Number"	pk="true"/>
		<property	name="shortName"			type="String"		/>
		<property	name="fullName"				type="String"		/>
		<property	name="nameIDS"				type="String"		/>
		<property	name="fullNameRoman"		type="String"		 sync="false"/> <!-- lowercase unicode with some chars translated by Constants.SHIP_NAMES_TRANS_TABLE -->
		<property	name="nameUpper"			type="String"		/>
		<property	name="country"				type="String"		/>
		<property	name="nation"				type="String"		/>
		<property	name="level"				type="Integer"		/>
		<property	name="levelRome"			type="String"		/>
		<property	name="subtype"				type="String"		/>
		<property	name="shipTypeIDS"			type="String"		 sync="false"/>
		<property	name="sortKey"				type="String"		 sync="false"/>
		<property	name="flagName"				type="String"		/>
		<property	name="group"				type="String"		/>
		<property	name="isPremium"			type="Boolean"		/>
		<property	name="peculiarity"			type="String"		/>
		<property	name="unpeculiarShipId"		type="Number"		 sync="false"/>
		<property	name="isPaperShip"			type="Boolean"		/>
		<property	name="needShowProjectYear"	type="Boolean"		/>
		<property	name="uiSpecial"			type="Boolean"		/>
		<property	name="canBuy"				type="Boolean"		/>
		<property	name="canSell"				type="Boolean"		 sync="false"/>
		<property	name="isEventLike"			type="Boolean"		/>
		<property	name="isGoalless"			type="Boolean"		 sync="false"/>
		<property	name="isWithoutStats"		type="Boolean"		 sync="false"/>
		<property	name="isTrainingDisabled"	type="Boolean"		 sync="false"/>
		<property	name="onlyPVPPVE"			type="Boolean"		/>
		<property	name="isWithoutCrewPenalty"	type="Boolean"		/>
		<property	name="isFarming"			type="Boolean"		/>
		<property	name="isManagementAvailable"	type="Boolean"		/>
		<property	name="availableNavalFlags" 	type="Array"		/>
		<property	name="currentNavalFlag"		type="String"		/>
		<property	name="subnation"			type="String"		 sync="false"/><!-- taken from game params file name -->
		<property	name="branchId"				type="Integer"		/><!-- TechTreeBranch ID -->
		<property	name="firstOfBranch"		type="Boolean"		/><!-- is first ship of the bransh -->
		<property 	name="tagsMask"    			type="Integer"		/> <!-- bitmask of SC.Ships.SHIP_TAG -->
		<property	name="hasControlledSquadrons" type="Boolean" 	/>
		<property	name="lastBoardedCrewId"	type="Number"	    />

		<event		name="evGroupChanged"/>
		<event		name="evPremiumChanged"/>
		<event		name="evAvailableFlagsChanged"/>
		<event		name="evCurrentFlagChanged"/>
		<event      name="evLastBoardedCrewIdChanged" />

		<event		name="evUpdate"/>

		<property	name="costCR"				type="Integer"		/>
		<property	name="costGold"				type="Integer"		/>
		<property	name="costXP"				type="Integer"		/>
		<event		name="evPriceChanged"/>

		<property	name="bonusTags"			type="Array"		/> <!-- массив entity.id сущностей с компонентом ComponentClass.bonusTag -->
		<event		name="evBonusTagsChanged"/>

		<property	name="pathPreview"			type="String"		/>
		<property	name="pathPreviewDS"		type="String"		/>
		<property	name="pathBigPreview"		type="String"		 sync="false"/>
		<property	name="pathOwnTinyIcon"		type="String"		/>
		<property	name="pathTinyIcon"			type="String"		/>
		<property	name="pathTinyDeadIcon"		type="String"		/>
		<property	name="pathBigIcon"			type="String"		 sync="false"/>
		<property	name="pathBigIconBg"		type="String"		 sync="false"/>
		<property	name="levelIcon"			type="String"		/>
		<event	name="evCurrentSkinChanged"/>

		<property	name="previousShipId"		type="Number"		/>
		<property	name="maxModuleDepth"		type="Integer" default="0"	/>
		<property	name="hasShipsToExplore" 	type="Boolean"		/>

		<property	name="hasCustomConsOrder" 		type="Boolean"		/>
		<event		name="consOrderChanged"/>
	</component>

	<component	name="OwnShip">
		<property	name="id"					type="Number"	pk="true"/>
		<property	name="name"					type="String"		 sync="false"/>
		<property	name="isReady"				type="Boolean"		/>
		<property	name="isLocked"				type="Boolean"		/>
		<property	name="isFrozen"				type="Boolean"		 sync="false"/>
		<property	name="lock"					type="Integer"		 sync="false"/>
		<property	name="isInFormation"		type="Boolean"		/>
		<property	name="isNeedRepair"			type="Boolean"		/>
		<property	name="isNeedShell"			type="Boolean"		/>
		<property	name="exp"					type="Integer"		/>
		<property	name="costRepair"			type="Integer"		/>
		<property	name="costShell"			type="Integer"		/>
		<property	name="costTotal"			type="Integer"		/>
		<property	name="expMultiply"			type="Number"		/>
		<property	name="freeExpMultiply"			type="Number"	/>
		<property	name="crewExpMultiply"			type="Number"	/>
		<property	name="remainingExpBonusWins"	type="Integer"	/>
		<property	name="creditsDeficit"		type="Number"		/>
		<property	name="lastBattleTime"		type="Number"		 sync="false"/>
		<property	name="isPrimary"			type="Boolean"		/>
		<property	name="timeRent"				type="Number"		/>

		<property	name="sigLimit"				type="Integer"		/>
		<property	name="ensignLimit"			type="Integer"		/>
		<property	name="ensignAvailables"		type="Dictionary"	/>	<!-- nation: entityId -->
		<property	name="camouflgeAvailables"	type="Dictionary"	 sync="false"/>	<!-- nation: entityId -->
		<property	name="canEquipCamouflage"	type="Boolean"		/>
		<property	name="autopurchaseCamouflage"	type="Boolean"	/>
		<property	name="autoequipBestCamoboosts"	type="Boolean"	/>
		<property	name="autopurchaseCamoboosts"	type="Boolean"	/>
		<property	name="autopurchaseSignals"		type="Boolean"	/>
		<property	name="autorechargeExteriorSummPrice"		type="Dictionary"/>
		<property	name="autorechargeExteriorEstimatePrice"	type="Dictionary"/>
		<property	name="autorechargeExteriorEstimatePriceConsumed"	type="Integer" sync="false"/>
		<property	name="autorechargeExteriorSummPriceConsumed"	type="Integer" sync="false"/>

		<property	name="autorechargeEcoBoostsSummPrice"		type="Dictionary"/>
		<property	name="autorechargeEcoBoostsEstimatePrice"	type="Dictionary"/>
		<property	name="autorechargeEcoBoostsEstimatePriceConsumed"	type="Integer"/>
		<property	name="autorechargeEcoBoostsSummPriceConsumed"	type="Integer"/>
		<property	name="permoflageFirstBuyGoldDiscount"			type="Integer"/>

		<property	name="crewId"				type="Number"	default="-1"/>
		<property	name="sellable"				type="Boolean"		/>

		<event		name="evCrewChanged"/>
		<event		name="evShipParamsUpdate"/>
		<event		name="evUpdateAutorecharge"/>
		<event		name="evIsPrimaryChanged"/>
		<event		name="evCreditsDeficitChanged"/>
		<event		name="evUpdateCamouflages"/>
		<event		name="evUpdateSignals"/>
		<event		name="evUpdateEnsigns"/>
		<event		name="evIsReadyChanged"/>
		<event		name="evUpdateDockState"/>
		<event		name="evUpdateLock"/>
		<event		name="evExpMultiplyChanged"/>
		<event		name="evIsFrozenChanged"/>
		<event		name="evExteriorsChanged"/>
		<event		name="evUpdateConfig"/>
		<event		name="evPermoflageFirstBuyGoldDiscountChanged"/>
	</component>

	<component name="OwnCamouflage">
		<property	name="id"						type="Number"	pk="true"/>
		<property	name="camoColorSchemes"			type="Array"/>
		<property	name="pickedCamoColorScheme"	type="Number"/>
		<property	name="previewCamoColorScheme"	type="Number"/>
		<property	name="hasColorSchemeConfig"		type="Boolean"/>
		<property	name="isLinkedToShip"			type="Boolean"/>
		<property	name="index"					type="String"/>
		<property	name="iconPatternIndex"			type="Integer"/>
		<property	name="camoGroup"				type="String"/>
		<property	name="isTileflage"				type="Boolean"/>

		<event name="evUpdated"/>
		<event name="evIconPatternIndexUpdated"/>
	</component>

	<component name="InstalledCamouflage"/>

	<component name="Signal">
		<property	name="id"				type="Number"	pk="true"/>
		<property	name="index"			type="String"			/>
		<property	name="canBuy"			type="Boolean"			/>
		<property	name="name"				type="String"			/>
		<property	name="isInstalled"		type="Boolean"			/>

		<event		name="evUpdated"/>
	</component>

	<component name="Ensign">
		<property	name="id"						type="Number"	pk="true"/>
		<property	name="index"					type="String"			/>
		<property	name="canBuy"					type="Boolean"			/>
		<property	name="name"						type="String"			/>
		<property	name="group"					type="Integer"			/>
		<property	name="canUse"					type="Boolean"			/>
		<property	name="isInstalled"				type="Boolean"			/>
		<property	name="needExtraDescription"		type="Boolean"			 />

		<event		name="evUpdated"/>
	</component>

	<component name="EcoBoost">
		<property	name="id"						type="Number"	pk="true"/>
		<property	name="type"						type="Number" />
		<property	name="subType"					type="String" />
		<property	name="description"				type="String" />
		<property	name="name"						type="String" />
		<property	name="gpName"					type="String" />
		<property	name="isLinkedToShip"			type="Boolean"/>
		<property	name="canBuy"					type="Boolean"/>
		<property	name="isInstalled"				type="Boolean"/>
		<property	name="rarity"					type="Number"/>
		<event name="evUpdated" />
	</component>

	<component name="GlobalboostPersistent">
		<property	name="arenaId"				type="Number"	pk="true"/>
	</component>

	<component name="ClanEcoBoost" >
	</component>

	<component name="BonusTagSeason">
		<property	name="type"			type="String" pk="true"/>
		<property	name="id"						type="String"/>
		<property	name="bannerState"				type="Integer" default="0"/>
		<property	name="minShipsCount"			type="Integer"/>
		<property	name="bonusSnowflakes"			type="Integer"/>
		<property	name="finishTime"	type="Integer"/>
		<event		name="evChanged"/>
		<event		name="evBannerStateChanged"/>
	</component>

	<component name="SnowflakeSelected">
	</component>

	<component name="BonusTag">
		<property	name="type"			type="String"/>
		<property	name="rewards"		type="Array"/> <!-- массив entity.id сущностей с компонентом ComponentClass.rewardSource -->
		<property	name="left"			type="Integer"/>
		<property	name="threshold"	type="Integer"/>	<!-- планка по количеству опыта, выполненная при сбитии снежинки -->
	</component>

	<component name="ColorScheme">
		<property name="name"			type="String"  pk="true" />
		<property name="index"			type="Integer"/>
		<property name="schemeIndex"	type="Integer"/>
		<property name="colorsNum"		type="Integer"/>
		<property name="colorUI" 		type="Array"/>
		<property name="color0" 		type="Array"/>
		<property name="color1" 		type="Array"/>
		<property name="color2" 		type="Array"/>
		<property name="color3" 		type="Array"/>
	</component>

	<component	name="UpgradableShipInfo">
		<property	name="id"					type="Number" pk="true"/>
		<property	name="isExplored"			type="Boolean"		/>
		<property	name="isElite"				type="Boolean"		/>

		<property	name="exp"					type="Integer"		/>

		<property	name="totalCostXP"			type="Integer"		 sync="false"/>
		<property	name="costFreeXP"			type="Integer"		/>

		<property	name="expDeficit"			type="Integer"		/>
		<property	name="creditsDeficit"		type="Integer"		/>

		<property	name="dependencyResearched"	type="Boolean"		/>
		<property	name="dependentModules"		type="Array"		 sync="false"/>
		<property	name="dependentModulesPriceInfo"	type="Dictionary" sync="false"/>
		<property	name="arrowDirection"		type="Integer"		/>

		<event		name="evUpdate"/>
	</component>

	<component name="ParagonSeason">
		<property	name="enabled"				type="Boolean"	default="false"/>
		<property	name="endDate"				type="Integer"/>
		<property	name="durationDays"			type="Integer" sync="false"/>
		<property	name="dropsSharedMade"		type="Integer"/>
		<property	name="bonusTagsForFirstDrop" type="Integer"/>
		<property	name="unlockRewards"		type="Array" sync="false"/>		<!-- entity ids with component RewardSource -->
		<event		name="evUpdateDropsMade" />
		<event		name="evUpdate" />
	</component>

	<component name="ParagonInfo">
		<property	name="shipsToReset"			type="Array"/>
		<property	name="shipsToSell"			type="Array"/>
		<property	name="shipsToBonus"			type="Array"/>
		<property	name="denyReasons"			type="Integer"/>
		<property	name="summa"				type="Dictionary"/>
		<property	name="dropNationAvailable"	type="Boolean" default="false"/>
		<event		name="evUpdate" />
	</component>

	<component name="ShipParagonInfo">
		<property	name="toReset"			type="Boolean" default="false"/>
		<property	name="toSell"			type="Boolean" default="false"/>
		<property	name="toBonus"			type="Boolean" default="false"/>
		<event		name="evUpdate" />
	</component>

	<component name="SuperShipFeature">
		<property 	name="isUnlocked"				type="Boolean" default="false"/>
		<property 	name="isSuperShipResearched"	type="Boolean" default="false" sync="false"/>
		<property 	name="topShipsExplored"			type="Integer"/>
		<event		name="evUpdate" />
	</component>

	<!-- SHIP LIST END-->

	<!-- CAMPAIGNS START-->
	<component name="CampaignParams">
		<property	name="id"				type="Number"	pk="true"/>
		<property	name="name"				type="String"/>
		<property	name="allMissions"		type="Array"/>
		<property	name="mapPositions"		type="Array"/>
		<property	name="countTasks"		type="Integer"/>
		<property	name="startMission"		type="Number" sync="false"/>
		<property	name="mainTask"			type="Number"/>
		<property	name="startTime"		type="Integer"/> <!-- Unix timestamp in UTC -->
		<property	name="endTime"			type="Integer"/> <!-- Unix timestamp in UTC -->
		<property	name="token"			type="String"/>
		<property	name="isActivated"		type="Boolean"/>
		<property	name="isClosed"			type="Boolean" sync="false"/>
		<property	name="isViewed"			type="Boolean"/>
		<property	name="visible"			type="Boolean" sync="false"/>
		<property	name="uiNumber"			type="Integer" sync="false"/>
		<property	name="isNarrative"		type="Boolean"/>
		<event		name="evVisibleChanged" />
		<event		name="evChanged" />
	</component>

	<component name="CampaignPlayer">
		<property	name="state"			type="Integer"/>
		<property	name="missionsStates"	type="Array"/>
		<property	name="countLootedTasks"	type="Integer"/>
		<property	name="countCompletedTasks"	type="Integer"/>
		<event		name="evUpdate" />
	</component>

	<component name="CampaignMissionParams">
		<property	name="id"				type="Number" pk="true"/>
		<property	name="name"				type="String"/>
		<property	name="campaignID"		type="Number"/>
		<property	name="usualTasks"		type="Array"/>
		<property	name="mainTask"			type="Number"/>
		<property	name="isStartMission"	type="Boolean" sync="false"/>
		<property	name="uiNumber"			type="String"/>
		<property	name="mapPosition"		type="Array"/>
		<property	name="startTime"		type="Integer"/> <!-- Unix timestamp in UTC -->
	</component>

	<component name="CampaignMissionPlayer">
		<property	name="state"			type="Integer"/>
		<property	name="stars"			type="Integer"/>
		<event		name="evUpdate"		/>
	</component>

	<component name="CampaignTaskParams">
		<property	name="id"				type="Number" pk="true"/>
		<property	name="campaignID"		type="Number"/>
		<property	name="missionID"		type="Number"/>
		<property	name="unlockMissions"	type="Array" sync="false"/>
		<property	name="goal"				type="Integer"/> <!-- entity id with component CampaignTaskGoal -->
		<property	name="rewards"			type="Array"/> <!-- entity ids with component RewardSource -->
		<property	name="lootStars"		type="Integer"/>
		<property	name="costUnlock"		type="Integer"/>
		<property	name="bgIconID"			type="Integer"/>
		<property	name="taskNumber"		type="Integer"/>
		<property	name="isMainTask"		type="Boolean"/>
	</component>

	<component name="CampaignTaskPlayer">
		<property	name="state"			type="Integer"/>
		<property	name="isLooted"			type="Boolean"/>
		<property	name="isActivated"		type="Boolean"/> <!-- True when task has state activated or done -->
		<property	name="isUseless"		type="Boolean"/> <!-- True when task activated and looted and parent mission in state OPENED_BOSS -->
		<event		name="evUpdate"		/>
	</component>

	<component name="CampaignTaskRestrictions">
		<property	name="shipIDs"			type="Array"/>
		<property	name="shipLevels"		type="Array"/>
		<property	name="shipClasses"		type="Array"/>
		<property	name="shipNations"		type="Array"/>
		<!-- <property	name="shipWeapons"		type="Array"/> -->
		<property	name="shipIsPremium"	type="Boolean"/>
		<property	name="shipIsElite"		type="Boolean"/>
		<!-- <property	name="shipModernizationIds"		type="Array"/> -->
		<!-- <property	name="shipModernizationCount"	type="Integer"/> -->
		<property	name="battleTypes"		type="Array"/>
		<property	name="onlyPlatoons"		type="Boolean" sync="false"/>
		<property	name="isShipSuitable"	type="Boolean" default="true"/>
		<property	name="isBattleSuitable"	type="Boolean" default="true"/>
		<property	name="pveModifier"		type="Number"/>
		<event		name="evUpdate"		/>

	</component>

	<component name="CampaignTaskGoal">
		<property	name="name"				type="String" sync="false"/>
		<property	name="l10nText"			type="String"/>
		<property	name="l10nRestriction"	type="String"/>
	</component>
	<!-- CAMPAIGNS END-->


	<!-- REWARDS START-->
	<component name="RewardSource" sync="false">
		<property name="source"  type="Array"/>
		<property name="reasons"	 type="Array"/>
		<property name="fromGP"  type="Boolean"/>
	</component>

	<component name="RewardComponent">
		<property name="id"  type="Number"/>
		<property name="category"  type="Integer" sync="false"/>
		<property name="type"  type="String"/>
		<property name="subtype"  type="String"/>
		<property name="name"  type="String"/>
		<property name="amount"  type="Number"/>
		<property name="params"  type="Dictionary"/>
		<property name="isPRMP"  type="Boolean" default="false"/>
		<event name="evUpdate"/>
	</component>

	<component name="RewardsContainer">
		<property name="rewardIds"  type="Array"/> <!-- entity.id RewardComponent -->
		<property name="subtype"  type="String"/> <!-- общий subtype наград, если они одинаковые; если награды разные, то пустая строка -->
	</component>
	<!-- REWARDS END-->


	<component name="EnterBattle">  <!-- deprecated, should NOT be used in markup, use CC.BattleType instead -->
		<property 	name="enabled"					type="Boolean" default="false" sync="false"/>
		<property 	name="battleTypes"				type="Array" sync="false"/>
		<property 	name="questBattleTypes"			type="Array" />
		<property 	name="selectedBattle"			type="String" />

		<event		name="evBattleTypesChanged"			/>
		<event		name="evQuestBattleTypesChanged"	/>
		<event		name="evUpdate"						/>
	</component>

	<component name="BattleType">
		<property 	name="type"					type="String"	pk="true"/>
		<property 	name="battleTypeGameParamId" type="Number"	pk="true"/> <!-- gameParamId конкретного ивента/операции для отличия от другого ивента/операции -->
		<property 	name="restrictionEntityId"	type="Integer"	/>
		<property 	name="featureId"			type="Integer"	/>
		<property 	name="status"				type="Integer"	/>
		<property 	name="minPlayersInDivision"	type="Integer"	/>
		<property 	name="battleTypeReasons"	type="Array"	/>
		<property 	name="fightButtonReasons"	type="Array"	/>
		<property 	name="readyButtonReasons"	type="Array"	/>
		<property 	name="selected"				type="Boolean"	/>

		<event		name="evRestrictionEntityIdChanged"		/>
		<event		name="evSelectionChanged"		/>
		<event		name="evDisableReasonChanged"	/>
		<event		name="evStatusChanged"			/>
	</component>

	<component name="BattleTypeCommonRestrictions">
		<property name="type"	type="String" pk="true"/>
	</component>

	<component name="TimeOfBattleEvent">
		<property name="finishTime"	type="Number"/>
		<property name="startTime"	type="Number"/>

		<event	name="evChanged"/>
	</component>

	<!-- CONSTANTS START-->
	<component name="ConstantsCampaignSlots">
		<property	name="common"			type="Integer"/>
		<property	name="premium"			type="Integer"/>
	</component>

	<component name="PlayerEvaluationInfo">
		<property	name="index"				type="Integer" sync="false"/>
		<property	name="relation"				type="Integer" sync="false"/> <!-- @see Constants.py - Relation -->
		<property	name="evaluationType"				type="Integer"/> <!-- @see evaluation_constants.py - EVALUATION_TYPES -->
		<property	name="evaluationTopic"		type="Integer"/> <!-- @see evaluation_constants.py - EVALUATION_TOPICS -->
		<property	name="messageIDS"		type="String"/>
	</component>

	<component name="EvaluationLimitsInfo">
		<property	name="complain"		type="Integer"/>
		<property	name="praise"		type="Integer"/>

		<event	name="evComplainChanged"/>
		<event	name="evPraiseChanged"/>
	</component>

	<!-- CONSTANTS END-->

	<component name="AccountResource">
		<property name="gold"					type="Number"/>
		<property name="goldLooted"				type="Number"	default="-1"/>
		<property name="goldPurchased"			type="Number"	default="-1"/>
		<property name="splitGold"				type="Boolean"/>
		<property name="credits"				type="Number"/>
		<property name="creditsLooted"			type="Number"	default="-1"/>
		<property name="creditsPurchased"		type="Number"	default="-1"/>
		<property name="splitCredits"			type="Boolean"/>
		<property name="freeXP"					type="Number"/>
		<property name="eliteXP"				type="Number"/>
		<property name="steel"					type="Number" />
		<property name="coal"					type="Number" />
		<property name="molybdenum"				type="Number" />
		<property name="brass"					type="Number" />
		<property name="saltpeter"				type="Number" />
		<property name="recruitment_points"		type="Number" />
		<property name="eventum_1"				type="Number" />
		<property name="eventum_2"				type="Number" />
		<property name="clientum_1"				type="Number" />
		<property name="clientum_2"				type="Number" />
		<property name="paragonXP"				type="Number" />
		<property name="useEliteXP"				type="Boolean"/>
		<property name="premBefore"				type="Number"/>
		<property name="wowsPremBefore"			type="Number"/>
		<property name="activePremiumType"		type="Integer"/>
		<property name="slotsNum"				type="Integer"/>
		<property name="walletStatus"			type="Boolean"/>
		<property name="isSyncedWithWallet"		type="Boolean"/>
		<property name="operationsLocked"		type="Boolean"/>
		<property name="operationsLockReasons"	type="Array" sync="false"/>
		<property name="hasReferralPoints"		type="Boolean"/>

		<event name="evChangedGold"/>
		<event name="evChangedCredit"/>
		<event name="evChangedFreeXP"/>
		<event name="evChangedEliteXP"/>
		<event name="evChangedSteel"/>
		<event name="evChangedCoal"/>
		<event name="evChangedMolybdenum"/>
		<event name="evChangedBrass"/>
		<event name="evChangedSaltpeter"/>
		<event name="evChangedRecruitmentPoints"/>
		<event name="evChangedEventum_1"/>
		<event name="evChangedEventum_2"/>
		<event name="evChangedClientum_1"/>
		<event name="evChangedClientum_2"/>
		<event name="evChangedPrem"/>
		<event name="evChangedSlotsNum"/>
		<event name="evChangedWalletStatus"/>
		<event name="evChangedIsSyncedWithWallet"/>
		<event name="evOperationsLockChanged"/>
		<event name="evUseEliteXPChanged"/>
		<event name="evUpdateSplitCurrency"/>
		<event name="evChangedSplitGold"/>
		<event name="evChangedSplitCredit"/>
		<event name="evChangedHasReferralPoints"/>
		<event name="evChangedParagonXP"/>
		<event name="evActivePremiumTypeChanged"/>
	</component>

	<component name="LoginData">
		<property name="hostsDataProvider"			type="Array"/>
		<property name="selectedHostIndex"			type="Integer"/>
		<property name="currentLoginType"			type="String"/>
		<property name="showDemoWindow"				type="Boolean" default="false"/>
		<property name="isExternalPlatformClient"	type="Boolean" default="false"/>
		<property name="isSteam"					type="Boolean" default="false"/>
		<property name="isWGC"						type="Boolean" default="false"/>
		<property name="isWinStore"					type="Boolean" default="false"/>
		<property name="isEGS"						type="Boolean" default="false"/>
		<property name="isGOG"						type="Boolean" default="false"/>
		<property name="isWaitingAnswer"			type="Boolean" default="false"/>
		<property name="isForceLoginLock"			type="Boolean" default="false"/>
		<property name="gameVersion"				type="String"/>
		<property name="backgroundVideo"			type="String" sync="false"/>
		<property name="staticScreen"			    type="String"/>
		<event name="evUpdate"/>
	</component>

	<component name="SteamLoginData">
		<property name="hasAccount"							type="Boolean" />
		<property name="hostsDataProvider"					type="Array"/>
		<property name="selectedHostIndex"					type="Integer"/>
		<property name="steamStatus"						type="String"/>
		<property name="nicknameSuggestions"				type="Array"/>
		<property name="isNicknameInUse"					type="Boolean"/>
		<property name="lastAttemptedNickname"				type="String"/>
		<property name="isNicknameInvalid"					type="Boolean"/>
		<property name="isNicknameValidationRunning"		type="Boolean"/>
		<property name="isGettingBoundAccountInfo"			type="Boolean"/>
		<property name="isDefaultRealm"						type="Boolean" />
		<property name="needToReconnect"					type="Boolean" />
		<property name="autoLogin"							type="Boolean" />
		<property name="emailBind"							type="Boolean" />
		<property name="loginDenied"						type="Boolean" />
		<property name="countryCode"						type="String" />
		<property name="isRegionValid"						type="Boolean" />
		<property name="isNeedParentalEmail"				type="Boolean" />
		<property name="isMinorRestriction"					type="Boolean" />
		<property name="adultAgeRestriction"				type="Integer" />
		<property name="isParentalEmailEntered"				type="Boolean" />
		<property name="isBirthdateEntered"					type="Boolean" />
		<property name="isParentalEmailInvalid"				type="Boolean"/>
		<property name="isParentalEmailValidationRunning"	type="Boolean"/>
		<property name="isBirthdateInvalid"					type="Boolean"/>
		<property name="isBirthdateValidationRunning"		type="Boolean"/>
		<property name="allowedCountries"					type="Array" /> <!-- String country codes ['RU', 'CK', 'MP', ...] -->
		<event name="evUpdate"/>
	</component>

	<component name="WgcLoginData">
		<property name="name" type="String" />
		<property name="switchedAccount" type="Boolean" /> <!-- пользователь захотел зайти под другим аккаунтом -->
		<event name="evSwitchedAccountChanged"/>
		<event name="evNameChanged"/>
		<event name="evChanged"/>
	</component>

	<component name="LoginCredentials">
		<property name="type" type="String" pk="true"/>
		<property name="dbId" type="Number" />
		<property name="name" type="String" />
		<property name="login" type="String" />
		<property name="password" type="String" />
		<property name="token" type="String" />
		<property name="rememberPwd" type="Boolean" />
		<property name="passLength" type="Integer"  sync="false"/>
		<property name="path" type="String"  sync="false"/>
		<property name="token2" type="String" />
		<property name="externalCredentialsSaved" type="Boolean" />
		<property name="birthdate" type="String" />
		<property name="parentalEmail" type="String" />
		<event name="evUpdate"/>
	</component>

	<component name="LoginMessageData">
		<property name="message" type="String"/>
		<property name="header" type="String"/>
		<property name="messageHighlight" type="Boolean" default="false"/>
		<event name="evUpdate"/>
	</component>

	<component name="LanguageChangeData" sync="false">
		<property name="country" type="String"/>
		<property name="abbreviatedCountry" type="String"/>
		<property name="language" type="String"/>
		<property name="abbreviatedLanguage" type="String"/>
		<event name="evUpdate"/>
	</component>

	<component name="SurveyData">
		<property name="id" type="Number" pk="true"/>
		<property name="question" type="String"/>
		<property name="answers" type="Array"/>
		<property name="layout" type="String"/>
		<property name="type" type="String"/>
		<property name="answered" type="Boolean"/>
		<property name="exclusiveIndices" type="Array" sync="false"/>
		<property name="prmpID" type="Integer" sync="false"/>
		<event name="evUpdate"/>
	</component>

	<component name="CollectionCard">
		<property name="id" type="Number"  pk="true"/>
		<property name="name" type="String"/>
		<property name="collectionId" type="Number"/>
		<property name="collectionName" type="String"/>
		<property name="description" type="String" sync="false"/>
		<property name="isOwned" type="Boolean"/>
		<property name="hasVideo" type="Boolean"/>
		<event name="evUpdate"/>
		<event name="evOwn"/>
	</component>

	<component name="CollectionAlbum">
		<property name="id" type="Number"  pk="true" />
		<property name="name" type="String"/>
		<property name="description" type="String"/>
		<property name="background" type="String"/>
		<property name="cards" type="Array"/>
		<property name="ownCards" type="Array"/>
		<property name="duplicates" type="Integer"/>
		<property name="unPastedCardIndex" type="Number"/>
		<property name="progress" type="Number" sync="false"/>
		<property name="cardCost" type="Integer"/>
		<property name="isFull" type="Boolean"/>
		<property name="isPuzzle" type="Boolean"/>
		<property name="inSubscription" type="Boolean"/>
		<property name="subscriptionEnable" type="Boolean"/>
		<property name="isInArmory" type="Boolean"/>
		<property name="linkToArmory" type="String" sync="false"/>
		<property name="containersID" type="Array" sync="false"/>
		<property name="rewards" type="Array"/>
		<property name="rewardCategory"	type="String"/>
		<property name="subAlbums" type="Array"/>
		<property name="compensations" type="Array" sync="false"/>
		<property name="comingSoon" type="Boolean"/>
		<property name="congratulationShown" type="Boolean"/>
		<property name="changeStateTimestamp" type="Integer" sync="false"/>
		<property name="isUnlocked" type="Boolean" sync="false"/>
		<event name="evUnPastedCardIndexChanged"/>
		<event name="evUpdate"/>
		<event name="evFull"/>
		<event name="evIsUnlocked"/>
	</component>


	<component name="CollectionSubAlbum">
		<property name="albumID" type="Number"/>
		<property name="name" type="String"/>
		<property name="subAlbumID" type="Number"/>
		<property name="description" type="String" sync="false"/>
		<property name="ownCards" type="Array"/>
		<property name="cards" type="Array"/>
		<property name="rewards" type="Array"/>
		<property name="rewardCategory"	type="String"/>
		<property name="isFull" type="Boolean" sync="false"/>
		<property name="unPastedCardIndex" type="Number"/>
		<event name="evUnPastedCardIndexChanged"/>
		<event name="evUpdate"/>
		<event name="evFull"/>
	</component>

	<component name="IngamePortal" >
		<property name="unreadNewsCount" type="Integer" default="0"/>
		<property name="isGiftAwaiting" type="Boolean" default="false"/>

		<property name="promoID" type="Integer"/>
		<property name="promoUrl" type="String"/>
		<event name="evUpdate"/>
	</component>

	<component name="WebEvent">
		<property name="name" type="String" pk="true"/>
		<property name="startTS" type="Integer"/>
		<property name="endTS" type="Integer"/>
		<event name="evUpdate"/>
	</component>

	<component name="BargeBanner">
		<property name="name" 				type="String" 	pk="true" 	/>
		<property name="startTime" 			type="Integer"				/>
		<property name="finishTime" 		type="Integer"				/>
		<property name="url" 				type="String"				/>
		<property name="mainText" 			type="String"				/>
		<property name="tooltipText" 		type="String"				/>
		<property name="backgroundImage" 	type="String"				/>
	</component>

	<component name="CurrentBargeBanner">
		<property name="name" type="String"/>

		<event name="evChanged"/>
	</component>

	<component name="InteractiveZone">
		<property name="id"						type="Integer" pk="true"/>
		<property name="name"					type="String"/>
		<property name="type"					type="Integer"/>
		<property name="tag"					type="String" sync="false"/>
		<property name="state"					type="String" sync="false"/>
		<property name="radius"					type="Number" sync="false"/>
		<property name="visualId"				type="Number"/>
		<property name="ownerId"				type="Number" sync="false"/>
		<property name="visualType"				type="Number"/>

		<!-- Relation component -->
		<!-- Circle component -->
		<!-- WorldPosition component ScreenPosition etc-->
		<event name="evVisualIdChanged"/>
		<event name="evChanged"/>
		<event name="evHide"/>
	</component>

	<component name="ResourceHolder">
		<property name="resourceType"			type="Integer"/>
		<property name="resourceName"			type="String"/>
		<property name="loading"				type="Boolean"/>
		<property name="gatherLocked"			type="Boolean"/>
		<property name="lockReason"				type="Integer"/>

		<event name="evGatherLockedChanged"/>
		<event name="evLockReasonChanged"/>
	</component>

	<component name="Resource">
		<property name="id"				type="String"	pk="true"/>
		<property name="type"			type="Integer"/>
		<property name="ownerId"		type="Integer" sync="false"/>
		<property name="isMain"			type="Boolean" sync="false"/>
	</component>

	<component name="QuickCommandsPanel">
		<property name="targetType" type="Integer"  sync="false"/>
		<property name="targetId" type="Number"  sync="false"/>
		<property name="targetData" type="Array"  sync="false"/>
		<property name="commandsData" type="Array" />
		<property name="active" type="Boolean"/>
		<property name="mouseActive" type="Boolean"/>

		<event name="evChanged"/>
		<event name="evActiveChanged"/>
	</component>

	<component name="AirDefenseSectorStrength"	sync="false">
		<property name="normal" type="Integer"/>
		<property name="activated" type="Integer"/>
		<property name="deactivated" type="Integer"/>
		<event name="evChanged"/>
	</component>

	<!-- used to animate sector strength -->
	<component name="AirDefenseSectorAnimation">
		<property name="valueFrom" type="Number" default="1"	/>
		<property name="valueTo" type="Number" default="1" 		/>
		<property name="percentFrom" type="Number" default="1"	/>
		<property name="percentTo" type="Number" default="1"	/>
		<property name="allPhasesEndTime" type="Number"/>
		<property name="isAnimationStarted" type="Boolean"/>
		<event name="evStartAnimation"/> <!-- sector phase means that we have added countdown -->
		<event name="evStartBlink"/> <!-- play sector blink animation -->
	</component>

	<component name="AirDefenseSector">
		<property name="sectorId" type="Integer" pk = "true"/>
		<property name="angle" type="Number"/>
		<property name="arc" type="Number"/>
		<property name="state" type="String" default="'default'"/>
		<property name="enabled" type="Boolean" sync="false"/>
		<property name="strength" type="Integer" sync="false"/>
		<property name="wasPrior" type="Boolean" default="false"/> <!-- then have cooldown state we can check if this sector was prior -->

		<event name="evWasPriorChanged"/>
		<event name="evStateChanged"/>
		<event name="evEnabledChanged"/>
	</component>

	<component name="AirDefensiveFireAura">
		<property name="near" type="Boolean"/>
		<property name="middle" type="Boolean"/>
		<property name="far" type="Boolean"/>
		<event name="evChanged"/>
	</component>

	<component name="AirDefenseAura">
		<property name="type" type="String" pk = "true"/>
		<property name="alive" type="Boolean" sync="false"/>

		<event name="evAliveChanged"/>
	</component>

	<component name="DogTagItem">
		<property name="id"					type="Number" pk = "true"/>
		<property name="categoryId"			type="Integer"/>
		<property name="gpName"				type="String"/>
		<property name="description"		type="Boolean" />
		<property name="zindex"				type="Integer"/>
		<property name="enabled"			type="Boolean" />
		<property name="selected"			type="Boolean" />

		<event name="evUpdate"/>
	</component>

	<component name="DogTagSymbol">
		<property name="quest"				type="String"/>
		<property name="clanTagVisible"		type="Boolean"/>
		<property name="clanTagOffsetX"		type="Integer"/>
		<property name="clanTagOffsetY"		type="Integer"/>
		<property name="clanTagFontColor"	type="String"/>
		<property name="symbolOffsetY"		type="Integer"/>
	</component>

	<component name="DogTagPatch">
	</component>

	<component name="DogTagEmblem">
		<property name="data"				type="DogTagRestrictionsStruct"/>
		<property name="restriction"		type="String"/>
		<property name="quest"				type="String"/>
		<property name="progress"			type="Array"/>
		<property name="hidden"				type="Boolean" />
		<property name="clanTagVisible"		type="Boolean"/>
		<property name="clanTagOffsetX"		type="Integer"/>
		<property name="clanTagOffsetY"		type="Integer"/>
		<property name="clanTagFontColor"	type="String"/>
		<property name="symbolOffsetY"		type="Integer"/>

		<event name="evUpdate"/>
	</component>

	<component name="DogTagBackgroundShape">
		<property name="quest"				type="String"/>
		<property name="isColorizable"		type="Boolean" default="false"/>
		<property name="clanTagVisible"		type="Boolean"/>
		<property name="clanTagOffsetX"		type="Integer"/>
		<property name="clanTagOffsetY"		type="Integer"/>
		<property name="clanTagFontColor"	type="String"/>
		<property name="symbolOffsetY"		type="Integer"/>
	</component>

	<component name="DollBackgroundColor">
		<property name="colorHEX"			type="String"  />
		<event name="evUpdate"/>
	</component>

	<component name="DollBorderColor">
		<property name="colorHEX"			type="String"  />
		<event name="evUpdate"/>
	</component>

	<component name="DollTexture">
		<property name="baseColorHEX"		type="String"  />
		<event name="evUpdate"/>
	</component>

	<component name="DogTagComponentSaved">
	</component>

	<component name="DogTagComponentPreview">
		<property name="symbol"				type="Number"/>
		<property name="bgShape"			type="Number"/>
		<property name="bgColor"			type="Number"/>
		<property name="bgBorderColor"		type="Number"/>
		<property name="bgMaterial"			type="Number"/>
		<property name="isUnique"			type="Boolean"/>
		<property name="isSaveVisible"		type="Boolean"/>
		<property name="isSaveEnabled"		type="Boolean"/>
		<event name="evUpdate"/>
	</component>

	<component name="DogTagActiveGroups">
		<property name="type"				type="String" pk = "true"/>
		<property name="activeGroups"		type="Array"/>
		<event name="evUpdate"/>
	</component>

	<component name="NewItem">
		<property	name="type"								type="Integer"		 sync="false"/>
		<property	name="count"							type="Integer"		/>
		<event name="evCountChanged"/>
	</component>

	<component name="NewContent">
		<property	name="id"								type="Integer"		pk="true"/>
		<property	name="count"							type="Integer"		/>
		<event name="evCountChanged"/>
	</component>

	<component name="DogTagView">
		<property name="components" type="Array" />
		<event name="evComponentsChanged"/>
	</component>

	<component name="WebBrowserGlobalState">
		<property name="communicationId"		type="Integer"	pk="true"/>
		<property name="browserHasControl"		type="Boolean"/>
		<property name="showHeader"				type="Boolean"/>
		<property name="isOverScrollArea"		type="Boolean" sync="false"/>
		<event name="evBrowserHasControlChanged"/>
		<event name="evShowHeaderChanged"/>
		<event name="evUpdate"/>
	</component>

	<component name="WebBrowserWindow">
		<property name="id"	type="Integer" 			pk="true"/>
		<property name="isTextureReady"				type="Boolean"/> <!-- браузерная текстура инициализируется асинхронно -->
		<property name="browserTextureName"			type="String"/>
		<event name="evIsTextureReadyChanged"/>
	</component>

	<component	name="WebBrowserIMEInputWidget"	>
		<property	name="id"								type="Integer"		pk="true"/>
		<property	name="position"							type="Point"		/>
		<property	name="width"							type="Integer"		/>
		<property	name="height"							type="Integer"		/>
		<property	name="enabled"							type="Boolean"		/>
		<property	name="maxTextLength"					type="Integer"		/>
		<property	name="isTextArea"						type="Boolean"		/>
		<property	name="externalText"						type="String"		/>
		<event name="evIsEnabledChanged"/>
		<event name="evIsEnabledEvent"/>
		<event name="evIsDisabledEvent"/>
		<event name="evBoundRectUpdate"/>
		<event name="evExternalTextUpdate"/>
		<event name="evMaxTextLengthUpdate"/>
		<event name="evTextAreaUpdate"/>
	</component>

	<component	name="TrainingRoom">
		<property	name="mapId"							type="Integer"		/>
		<property	name="scenario"							type="String"		/>
		<property	name="ownerName"						type="String"		/>
		<property	name="description"						type="String"		/>
		<property	name="duration"							type="Integer"		/>
		<property	name="teamSize"							type="Integer"		/>
		<property	name="observersTeamSize"				type="Integer"		/>
		<property	name="currPlayersCount"					type="Integer"		/>
		<property	name="commandersManagement"				type="Boolean"		/>
		<property	name="hideShips"						type="Boolean"		/>
		<property	name="isClosed"							type="Boolean"		/>
		<property	name="isBadWeather"						type="Boolean"		/>
		<property	name="distributedPlayersCount"			type="Integer"		 sync="false"/>
		<property	name="notDistributedPlayersCount"		type="Integer"		 sync="false"/>
		<property	name="hasFriends"						type="Boolean"		 sync="false"/>
		<property	name="isBotsEnabled"					type="Boolean"		/>
		<property	name="isBotsAIEnabled"					type="Boolean"		/>
		<property	name="observersAvailable"				type="Boolean"		/>

		<event name="evUpdate"/>
	</component>

	<component	name="Bot">
		<property	name="AILevel"							type="Integer"		/>
		<property	name="canShoot"							type="Integer"		/>
		<property	name="canMove"							type="Integer"		/>

		<event name="evUpdate"/>
	</component>

	<component name="TrainingRoomPlayer">
		<property	name="isCommander"						type="Boolean"		/>

		<event name="evUpdate"/>
	</component>

	<component name="TrainingRoomsListWindowState">
		<property	name="isProcessing"						type="Boolean" />

		<event		name="evUpdate"	/>
	</component>

	<component name="TrainingRoomWindowState">
		<property	name="state"							type="String" />
		<property	name="inset"							type="Integer" />
		<property	name="insetLabel"						type="String" />
		<property	name="notReadyWindowState"				type="Integer" />

		<event		name="evUpdate"	/>
	</component>

	<component name="PasswordedRoom">
		<property	name="password"							type="String" />

		<event		name="evWrongPassword" />
		<event		name="evUpdate" />
	</component>

	<component 		name="TrainingRoomsManager"	sync="false">
		<property   name="preBattleIdToJoin"				type="Integer"/>

		<event		name="evUpdate" />
	</component>


	<component name="TutorialContextHint">
		<property 	name="id" 			type="Integer" pk="true" />
		<property 	name="messageIDS" 	type="String" />
		<property 	name="keys" 		type="Array" />
		<property 	name="type" 		type="Integer" />

		<event 		name="evShow" />
	</component>

	<component name="DockEventBanner">
		<property 	name="sseId" 						type="String"/>  <!-- SSEEvent.sseId -->
		<property 	name="lastEventBannerSeen" 			type="String" sync="false"/> <!-- SSEEvent.sseId -->
		<event		name="evSseIdChanged" />
		<event		name="evLastEventBannerSeenChanged" />
	</component>



	<component name="Achievement">
		<property name="id" type="String" pk="true"/>

		<property name="amount" type="Integer"/>
		<property name="timestamp" type="Number"/>
		<property name="achieveShip" type="String"/>
		<property name="condition"	type = "AchievementConditionStruct"/>

		<event name="evChanged"/>
	</component>

	<component name="AchievementInfo">
		<property name="name" type="String"/>
		<property name="nameIDS" type="String"/>
		<property name="nameLocalized" 	type="String" sync="false"/>
		<property name="multipleIDS" type="String"/>
		<property name="enabled" 		type="Boolean" sync="false"/>
		<property name="alwaysShowIfAchieved" type="Boolean" sync="false"/>
		<property name="multiple" type="Boolean"/>
		<property name="onePerBattle" 	type="Boolean" sync="false"/>
		<property name="isHidden" 		type="Boolean" sync="false"/>
		<property name="showProgress" 	type="Boolean" sync="false"/>

		<property name="seriesName" 	type="String" sync="false"/>
		<property name="seriesIdx" 		type="Integer" sync="false"/>
		<property name="nameForSorting" type="String" sync="false"/>
		<property name="group" 			type="String" sync="false"/>
		<property name="subgroup" 		type="String" sync="false"/>
		<property name="uiOutOfDate" type="Boolean"/>
		<property name="uiHideMultiplicity" type="Boolean"/>
		<property name="uiType" type="String"/>
		<property name="uiRestrictionIDS" type="String"/>
	</component>


	<component name="Ribbon">
		<property name="id" type="Integer" pk="true"/>
	</component>

	<component name="SubRibbon">
		<property name="id" type="Integer" pk="true"/>
	</component>

	<component name="RibbonInfo">
		<property name="ids" type="String"/>
		<property name="iconName" type="String"/>
	</component>

	<component name="Children">
		<property name="list" type="Array"/>
	</component>

	<component name="Parent"  sync="false">
		<property name="entityId" type="Integer"/>
	</component>

	<!-- Battle data marker component-->
	<component name="BattleData"/>

	<component name="BattleState">
		<property name="battleState" type="Integer"/> <!-- ClientBattleState -->
		<property name="readyToBattle" type="Boolean"/>
		<property name="finishReasonId" type="Integer"/> <!-- range of FinishReason in BattleDefinitions.py  -->
		<property name="resultId" type="Integer"/> <!-- range of SharedConstants.BATTLE_RESULT -->
		<property name="winnerTeamId" type="Integer"/>

		<event name="evBattleStateChanged"/>
		<event name="evReadyToBattleChanged"/>
		<event name="evBattleResultsChanged"/>
		<event name="evBattleStartHideUI"/>
	</component>

	<component name="BattleTimer">
		<property name="battleTime" type="Number"/>

		<event name="evBattleTimeChanged"/>
	</component>

	<component name="BattleInfo">
		<property name="mapId" 				type="Integer"/>
		<property name="gameModeId" 		type="Integer"/>
		<property name="gameMode" 			type="String"/>
		<property name="gameModeDescription" 	type="String"/>
		<property name="battleType" 		type="String"/>
		<property name="battleTypeGameParamsId" 	type="Number"/>
		<property name="duration" 			type="Integer"/>
		<property name="maxDivisions" 		type="Integer"/>
		<property name="scenario" 			type="String"/>
		<property name="isReplayPlaying" 	type="Boolean"/>
		<property name="maxDiplomacyTeamSize"	type="Integer"/>
		<property name="mapPath" type="String"/>
		<property name="mapName" type="String"/>
		<property name="bitmapId" type="Integer"/>
		<property name="helpText" type="String"/>
		<property name="loadingProgress" type="Integer"/>
		<property name="strategicActionsTaskIndex"	type="Integer"/>
		<property name="strategicActionsTerritoryID"	type="String"/>
		<property name="teamWinScore"	type="Integer"/>

		<event	name="evBitmapIdChanged"	/>
		<event	name="evHelpTextChanged"	/>
		<event	name="evLoadingProgressChanged"	/>
		<event name="evGameModeIdChanged"/>
		<event name="evStrategicActionsTaskChanged"/>
	</component>

	<component name="BattleTeamScore">
		<property name="totalScore" type="Integer"/>

		<property name="allyScore" type="Integer"/>
		<property name="enemyScore" type="Integer"/>

		<event name="evAllyScoreChanged"/>
		<event name="evEnemyScoreChanged"/>
	</component>

	<component name="FeedbackComponent">
		<event name="evLowerLog"/>
		<event name="evDeathLog"/>
		<event name="evEventLog"/>
		<event name="evIndicators"/>
	</component>

	<component name="LowerLogMessage">
		<property name="indexFrom"			type="Integer"/>	<!-- For animating messages in Lower Log-->
		<property name="indexTo"			type="Integer"/>	<!-- For positioning and animating messages in Lower Log -->
		<property name="text"				type="String"/>
		<property name="color"				type="Integer"/>
		<property name="ids"				type="String" sync="false"/>
		<property name="itemRendererId"		type="Integer"/> 	<!-- List of possible values in shared_constants.common.LOWER_LOG_ITEM_RENDERERS-->
		<property name="substitutes"		type="Dictionary"/>
		<property name="subsOffset"			type="Integer" sync="false"/>
		<property name="info"				type="Dictionary" sync="false"/>
		<property name="icon"				type="String"/>
		<property name="extraText"			type="String"/>
		<event name="evShow"/>
		<event name="evHide"/>
		<event name="evMove"/>
	</component>

	<component name="BattleDamage">
		<property name="ally" type="Integer" sync="false"/>
		<property name="enemy" type="Integer"/>
		<property name="spot" type="Integer"/>
		<property name="aggro" type="Integer"/>
		<property name="avia" type="Integer"/>

		<event name="evChanged"/>
	</component>

	<component name="TopRibbon"/>

	<component name="TempRibbon">
		<property name="entityId" type="Integer"/>
		<property name="positionIndex" type="Integer"/>

		<event name="evPositionIndexChanged"/>
	</component>

	<component name="IncomeRibbon">
		<property name="count" type="Integer"/>
		<property name="tempCount" type="Integer"/>
		<property name="removingCount" type="Integer" sync="false"/>

		<event name="evCountChanged"/>
		<event name="evTempCountChanged"/>
	</component>

	<component name="ExternalImage">
		<property name="url"	type="String" pk="true"/>
	</component>

	<component name="ByteArrayData">
		<property name="id"	type="String" pk="true"/>
		<property name="data" type="ByteArray"/>
		<event name="evUpdate"/>
	</component>

	<component name="NavalFlag">
		<property name="id" type="String" pk="true"/>
		<property name="iconPath" type="String"/>
		<property name="descriptionIDS" type="String" sync="false"/>
		<property name="nameIDS" type="String"/>
	</component>
	<component	name="ReplayMetadata"	>
		<property	name="replayId"						type="String"		pk="true"/>
		<property	name="mapName"						type="String"		/>
		<property	name="gameType"						type="String"		/>
		<property	name="gameMode"						type="String"		/>
		<property	name="result"						type="Number"			sync="false"/>
		<property	name="shipId"						type="Number"			sync="false"/>
		<property	name="replayName"					type="String"		/>
		<property	name="stats"						type="Dictionary"		sync="false"/>	<!-- commented in replays_table_content -->
		<property	name="dateTime"						type="Dictionary"	/>
		<property	name="isFavourite"					type="Boolean"		/>
		<property	name="isCompatible"					type="Boolean"		/>
		<property	name="isLast"						type="Boolean"			sync="false"/>	<!-- only for filtering collection -->
		<property	name="isSaved"						type="Boolean"		/>
		<property	name="isDeleted"					type="Boolean"			sync="false"/>	<!-- commented in replays_table_content -->
		<event 		name="evUpdate"/>
	</component>

	<component name="ReplayPlaybackData">
		<property  name="timeTotal" type="Number"/>
		<property  name="timeTotalText" type="String"/>
		<property  name="time" type="Number"/>
		<property  name="timeText" type="String"/>
		<property  name="speedIndex" type="Integer"/>
		<property  name="cameraModeIndex" type="Integer"/>
		<property  name="battleTimeAtClientReady" type="Integer"/>

		<property  name="hasNextReplay" type="Boolean"/>
		<property  name="hasPrevReplay" type="Boolean"/>
		<property  name="isHidden"	type="Boolean"/>
		<property  name="isPaused" type="Boolean"/>

		<event	name="evUpdate"/>

		<event	name="evTimeChanged"/>
		<event	name="evSpeedIndexChanged"/>
		<event	name="evCameraModeIndexChanged"/>

		<event	name="evHiddenChanged"/>
		<event	name="evPausedChanged"/>
	</component>

	<component name="DownloadProgress">
		<property name="status"		type="Integer"/>
		<property name="unit"		type="String" sync="false"/>
		<property name="max"		type="Number" sync="false"/>
		<property name="value"		type="Number" sync="false"/>
		<event name="evUpdateStatus"/>
		<event name="evUpdateState"/>
	</component>

	<component name="Day">
		<property name="id"					type="String"	pk="true"/> <!-- dd_mm_yyyy -->
		<property name="day"				type="Integer"/>
		<property name="weekDay"			type="Integer"/>
		<property name="month"				type="Integer"/>
		<property name="year"				type="Integer"/>
		<property name="weekNum"			type="Integer"/>
		<property name="isToday"			type="Boolean"/>
		<property name="weekDayName"		type="String"/>

		<event name="evUpdate"/>
	</component>

	<component name="ArcEvent">
		<property name="state" type="Integer"/>
		<property name="startTime" type="Integer" sync="false"/>
		<property name="finishTime" type="Integer"/>
		<property name="deactivateTime" type="Integer" sync="false"/>
		<property name="daysBeforeEventFinished" type="Integer" sync="false"/>

		<property name="currentStageAt" type="Integer" sync="false"/>
		<property name="stageStopAt" type="Integer" sync="false"/>
		<property name="nextStageAt" type="Integer"/>

		<property name="startPrimeAt" type="Integer"/>
		<property name="finishPrimeAt" type="Integer"/>
		<property name="nextPrimeAt" type="Integer"/>
		<property name="currentTasks" type="Array" sync="false"/>
		<property name="isPrimeActive" type="Boolean" sync="false"/>
		<property name="lastPrimeLeader" type="Integer"/>

		<event name="evChanged"/>
		<event name="evEventStateChanged"/>

	</component>

	<component name="ArcEventConfig">
		<property name="sidesCount" type="Integer"/>
		<property name="taskShiftDuration" type="Integer" sync="false"/>
		<property name="taskDuration" type="Integer" sync="false"/>
		<property name="freezeDuration" type="Integer" sync="false"/>

		<property name="teamTop1ByPosPoints" type="Integer"/>
		<property name="teamTop2ByPosPoints" type="Integer"/>
		<property name="teamTop3ByPosPoints" type="Integer"/>
		<property name="teamTop4ByPosPoints" type="Integer"/>
		<property name="playerTopByPercentPoints" type="Dictionary" sync="false"/>
	</component>

	<component name="ArcPreviousWinners" sync="false" > <!-- не используется -->
		<property name="winnerSideId" type="Integer"/>
		<property name="dailyRewards" type="Array"/>
		<property name="leaderboardTopByPercent" type="Integer"/>
		<property name="leaderboardTopByPosition" type="Integer"/>
		<event name="evChanged"/>
	</component>

	<component name="ArcEventSide" sync="false" > <!-- не используется -->
		<property name="id" type="Integer" pk="true"/>
		<property name="sideDailyProgress" type="Integer"/>
		<property name="sideModifierPlayer" type="Integer"/>
		<property name="sideModifierTeam" type="Integer"/>
		<property name="complexity" type="Integer"/>
		<property name="sideModifierPerc" type="Integer"/> <!-- не используется -->
		<property name="sideVictoryDays" type="Integer"/>
		<property name="myLoyalty" type="Integer"/>
		<property name="myTotalProgress" type="Integer"/>
		<property name="myTotalBattles" type="Integer"/>
		<property name="myDailyProgress" type="Integer"/>
		<property name="myDailyBattles" type="Integer"/>
		<property name="myVictoryDays" type="Integer"/>
		<property name="myScreenProgress" type="Integer"/>

		<event name="evLoyaltyChanged"/>
		<event name="evProgressChanged"/>
		<event name="evModifierChanged"/>
		<event name="evComplexityChanged"/>
		<event name="evChanged"/>
	</component>

	<component name="PlayerArcEventInfo">
		<property name="sideId" type="Integer" default="-1"/>
		<property name="doneTaskCount" type="Integer"/>
		<property name="finalScreenShown" type="Boolean" sync="false"/>
		<property name="chosenSidesMap" type="Dictionary"/>  <!-- {teamId: [wasChosen, gotMainReward]} -->
		<property name="hasValuableFinalResults" type="Boolean" sync="false"/>
		<event name="evSideChanged"/>
		<event name="evHasLoyaltyChanged"/>
		<event name="evChosenSidesMapChanged"/>
	</component>

	<component name="ProgressWithRewardsPersistent">
		<property name="pointsArray" type="Array"/>
		<property name="pointsCurrent" type="Integer" sync="false"/>
		<property name="pointsToNext" type="Integer" sync="false"/>
		<property name="activeIndex" type="Integer"/>
		<property name="rewards" type="Array" sync="false"/>
		<property name="rewardsCategories" type="Array" sync="false"/>
		<event name="evPointsArrayChanged"/>
		<event name="evChanged"/>
	</component>

	<component name="ProgressWithRewards">
		<property name="id" type="String" pk="true"/>
		<property name="pointsArray" type="Array"/>
		<property name="pointsCurrent" type="Integer"/>
		<property name="pointsToNext" type="Integer" sync="false"/>
		<property name="watchedPoints" type="Integer"/>
		<property name="activeIndex" type="Integer"/>
		<property name="rewards" type="Array"/>
		<property name="rewardsCategories" type="Array"/>
		<property name="mainRewardIndex" type="Integer" default="-1"/>
		<event name="evPointsArrayChanged"/>
		<event name="evChanged"/>
	</component>

	<component name="ArcFinalStats">
		<property name="sidesCount" type="Integer"/>
		<property name="totalTaskDone" type="Integer"/>
		<property name="totalExp" type="Integer"/>
		<property name="totalRewardsAchieved" type="Integer"/>
		<property name="taskLeaderboardByPercent" type="Integer"/>
		<property name="expLeaderboardByPercent" type="Integer"/>
		<property name="rewardsLeaderboardByPercent" type="Integer"/>
		<property name="totalTeamsJoined" type="Integer"/>
	</component>

	<component name="ArcStageFinalStats"  sync="false">
		<property name="totalTaskDone" type="Integer"/>
		<property name="totalExp" type="Integer"/>
		<property name="taskLeaderboardByPercent" type="Integer"/>
		<property name="expLeaderboardByPercent" type="Integer"/>
	</component>

	<component name="ArcEventTaskTemplate" sync="false">
		<property name="id" type="String" pk="true"/>
		<property name="conditions" type="Array"/>
		<property name="progressAmount" type="Array"/>
		<property name="progressPoints" type="Array"/>
	</component>

	<component name="ArcEventTaskPersistent">
		<property name="arenaId"		type="Number" pk="true"/>
		<property name="id"				type="String" pk="true"/>
		<property name="taskId" 		type="String" sync="false"/> <!-- task template id -->
		<property name="startTime" 		type="Integer" sync="false"/> <!-- task start time in UNIXTIME -->
		<property name="finishTime" 	type="Integer"/> <!-- task end time in UNIXTIME -->
		<property name="personalPoints"	type="Integer"/>
		<property name="progress" 		type="Integer" sync="false"/>
		<property name="isDone" 		type="Boolean" sync="false"/>
		<property name="conditions" 	type="Array"/> <!-- list of SSE conditions entities ids  -->
		<event name="evIsDoneChanged"/>
		<event name="evChanged"/>
	</component>

	<component name="ArcEventTask">
		<property name="id"									type="String" pk="true"/>	<!-- unique id -->
		<property name="taskId"								type="String" sync="false"/>				<!-- task template id -->
		<property name="lineId"								type="Integer" sync="false"/>			<!-- line id: 0, 1 or 2  -->
		<property name="orderId"							type="Integer" sync="false"/>			<!-- order id during prime-time: 0, 1, 2 or 3  -->
		<property name="startTime"							type="Integer"/>			<!-- task start time in UNIXTIME -->
		<property name="finishTime"							type="Integer"/>			<!-- task end time in UNIXTIME -->
		<property name="state"								type="Integer"/>			<!-- stage: waiting, active, finished  -->
		<property name="isDone"								type="Boolean" sync="false"/>
		<property name="conditions"							type="Array"/>				<!-- list of SSE conditions entities ids  -->
		<property name="personalPoints"						type="Integer"/>			<!-- amount of points gained for task progress -->
		<property name="personalPointsForTeamLeaderboard"	type="Integer" sync="false"/>			<!-- amount of points gained for a team getting into the leaderboard -->
		<property name="personalPercentRate"				type="Integer"/>
		<property name="personalRatePoints"					type="Integer"/>
		<property name="teamRates"							type="Array"/>				<!-- list of pairs (sideId, rating) sorted by rate [(1, 1000), (3, 10), (0, 1), (2, 0)] -->

		<event name="evIsDoneChanged"/>
		<event name="evStateChanged"/>
		<event name="evProgressIndexChanged"/>
		<event name="evPersonalPointsChanged"/>
		<event name="evPersonalPercentRateChanged"/>
		<event name="evChanged"/>
	</component>

	<component name="Leaderboard" sync="false">
		<property name="start"						type="Integer"/> <!-- время старта лидерборды, UNIXTIME-->
		<property name="stop"						type="Integer"/> <!-- время окончания лидерборды, UNIXTIME-->
		<property name="state"						type="Integer"/> <!-- ref sse.SSE_STATE.* -->
		<property name="randomBattleScoringRules"	type="Dictionary"/> <!-- ref EventPointsReasons.getEventScoringRules -->
		<property name="eventBattleScoringRules"	type="Dictionary"/> <!-- ref EventPointsReasons.getEventScoringRules -->
		<property name="coopBattleScoringRules"		type="Dictionary"/> <!-- ref EventPointsReasons.getEventScoringRules -->
		<property name="rankBattleWinPoints"		type="Integer"/>
		<property name="clanBattleWinPoints"		type="Integer"/>
		<property name="pveBattlePointsForStar"		type="Integer"/>
		<property name="rewardsForTop5"				type="Array"/> <!-- array of entities ids with rewardSource components -->
		<property name="rewardsForTop10"			type="Array"/> <!-- array of entities ids with rewardSource components -->
		<property name="rewardsForTop25"			type="Array"/> <!-- array of entities ids with rewardSource components -->
		<property name="rewardsForTop50"			type="Array"/> <!-- array of entities ids with rewardSource components -->
		<property name="guaranteedReward"			type="Array"/> <!-- array of entities ids with rewardSource components -->
		<property name="achievementsForTop100"		type="Array"/> <!-- array of entities ids with rewardSource components -->
		<event name="evLeaderboardStateChanged"/>
		<event name="evChanged"/>
	</component>

	<!-- SSE ITEMS	 -->
	<!-- sse entity consists of SseCore/SseCorePersistent + SseEvent/SseEpic/SseChain/SseTask + Progress + SseTechConditions-->
	<!-- SseEpic/SseChain are containers for other sses-->

	<!--type of sse item. tag id is in SseCore/SseCorePersistent-->
	<component name="SseTag">
		<property name="id"				type="String" pk="true"/>
		<property name="start"			type="Number"/> <!-- время появления категории, UNIXTIME-->
		<property name="stop"			type="Number"/> <!-- время исчезновение категории, UNIXTIME-->
		<property name="name"			type="String"/>
		<property name="desc"			type="String" sync="false"/>
		<property name="color"			type="String" sync="false"/> <!-- hex like 0xFFAAAA00 -->
		<property name="background"		type="String"/>	<!-- symbol name in 'games/assets/textures/gui/bg/sse/sse_' -->
		<property name="isCustom"		type="Boolean"/> <!-- tag is not in PREDEFINED_SSE_TAGS -->
		<property name="isEndless"		type="Boolean"/> <!-- флаг для определения содержимого статуса категории -->
		<property name="sortId"			type="Integer"/>
		<property name="doneAmount"		type="Integer"/>
		<property name="activeAmount"	type="Integer"/>
		<property name="unclaimedTotal"	type="Integer"/> <!-- amount of completed unclaimed tasks/chains/epics -->
		<property name="epicsTotal"		type="Integer"/> <!-- num of SseEpic in this tag -->
		<event name="evChanged"/>
	</component>

	<!--sse items for sse window-->
	<component name="SseCore">
		<property name="id"				type="String" pk="true"/>
		<property name="start"			type="Number"/> <!-- время появления задачи/эпика/цепочки, UNIXTIME-->
		<property name="stop"			type="Number"/> <!-- время исчезновения задачи/эпика/цепочки, UNIXTIME-->
		<property name="state"			type="Integer"/> <!-- ref Sse.SSE_STATE.* -->
		<property name="isDone"			type="Boolean"/>
		<property name="isClaimed"		type="Boolean"/>
		<property name="isFeatured"		type="Boolean"/>
		<property name="lastClaimedIdx"	type="Integer" sync="false"/> <!-- Индекс последней забранной награды 0/1 -->
		<property name="isFailed"		type="Boolean"/>
		<property name="claimedAt"		type="Number" sync="false"/> <!-- Время забора награды, UNIXTIME -->
		<property name="tag"			type="String"/>
		<event name="evChanged"/>
	</component>

	<!--sse items for postbattle sse and sse as rewards -->
	<component name="SseCorePersistent">
		<property name="arenaId"		type="Number" pk="true"/>
		<property name="id"				type="String" pk="true"/>
		<property name="isDone"			type="Boolean"/>
		<property name="isClaimed"		type="Boolean"/>
		<property name="isFeatured"		type="Boolean"/>
		<property name="stop"			type="Number"/> <!-- время исчезновения задачи/эпика/цепочки, UNIXTIME-->
		<property name="tag"			type="String"/>

		<event name="evIsClaimedChanged"/>
	</component>

	<!--sse event -->
	<component name="SseEvent" sync="false">
		<property name="type"			type="Integer"/> <!-- ref SSE_Common.SSE_EVENT_TYPE.* -->
		<property name="isBanner"		type="Boolean"/>
		<property name="actions"		type="Array"/>
		<event name="evChanged"/>
	</component>

	<!--sse epic - parallel tasks execution -->
	<component name="SseEpic">
		<property name="previousEpicId"		type="String"/>
		<property name="name"				type="String"/>
		<property name="tasksToComplete"	type="Integer"/>
		<property name="isNew"				type="Boolean" sync="false"/>
		<property name="claimRewards"		type="Integer"/>
		<property name="activateAt"			type="Number" sync="false"/> <!-- Unix timestamp in UTC -->
		<property name="deactivateAt"		type="Number" sync="false"/> <!-- Unix timestamp in UTC -->
		<property name="sortId"				type="Integer" sync="false"/> <!-- sort identifier obtained from SSE XML -->
		<property name="sortIndex"			type="Integer"/> <!-- ordered Id (1,2,...) based on sortId -->
		<property name="epicsAmount"		type="Integer"/> <!-- total amount of epics in this Milestone -->
		<property name="rewardCategory"		type="String"/> <!-- ref Sse.SSE_REWARD_CATEGORY.* -->
		<property name="rewards"			type="Array"/>  <!-- array of entities ids with rewardSource components -->
		<property name="battleProgress"		type="Integer"/>

		<event name="evChanged"/>
	</component>

	<!--sse chain - sequential tasks execution -->
	<component name="SseChain">
		<property name="name"			type="String"/>
		<property name="activateAt"		type="Number" sync="false"/> <!-- Unix timestamp in UTC -->
		<property name="deactivateAt"	type="Number" sync="false"/> <!-- Unix timestamp in UTC -->
		<property name="sortId"			type="Integer" sync="false"/> <!-- sort identifier obtained from SSE XML -->
		<property name="claimRewards"	type="Integer"/>
		<property name="currentTaskId"	type="String"/> <!-- ref to SseCore.id in entity with SseTask component-->
		<property name="rewardCategory"	type="String"/> <!-- ref Sse.SSE_REWARD_CATEGORY.* -->
		<property name="rewards"		type="Array"/>  <!-- array of entities ids with rewardSource components -->
		<property name="battleProgress"	type="Integer"/>

		<event name="evChanged"/>
	</component>

	<!--sse itself -->
	<component name="SseTask">
		<property name="sortId"					type="Integer" sync="false"/> <!-- sort identifier obtained from SSE XML -->
		<property name="sortIndex"				type="Integer"/> <!-- ordered Id (1,2,...) based on sortId -->
		<property name="name"					type="String"/>
		<property name="percentProgress"		type="Number" sync="false"/>
		<property name="isPersonal"				type="Boolean" sync="false"/>
		<property name="claimRewards"			type="Integer"/> <!-- amount of rewards to claim out of: 0 - no claim -->
		<property name="isActive"				type="Boolean" sync="false"/>
		<property name="epicId"					type="String"/>
		<property name="chainId"				type="String"/>
		<property name="rewardCategory"			type="String"/> <!-- ref Sse.SSE_REWARD_CATEGORY.* -->
		<property name="rewards"				type="Array"/>  <!-- array of entities ids with rewardSource components -->
		<property name="conditionsBySetId"		type="Dictionary" sync="false"/>  <!-- dict of entities ids with conditions components by setId (0, 1, ... n)-->
		<property name="conditions"				type="Array"/>  <!-- array of entities ids with conditions components sorted by progress-->

		<event name="evRewardsChanged"/>
		<event name="evChanged"/>
	</component>

	<component name="SseHash" sync="false">
		<property name="hash" type="String"/> <!-- hash made of conditions and rewards -->
	</component>

	<component name="SseTechConditions" sync="false">
		<property name="conditions" type="Array"/> <!-- Instances of classes from SSE/Conditions.py-->
	</component>

	<component name="SseTechRewards" sync="false">
		<property name="rewards" type="Array"/> <!-- server data rewards, array of dicts -->
	</component>

	<component name="SseConditions">
		<property name="isSingleBattle"			type="Boolean" sync="false"/>
		<property name="battleTypes"			type="Array"/>
		<property name="eventBattleTypes"		type="Array"/>
		<property name="pveBattleTypes"			type="Array"/>
		<property name="sortedBattleTypesForUI"	type="Array"/> <!-- battleTypes + eventBattleTypes + pveBattleTypes -->
		<property name="countablesIds"			type="Array"/> <!-- this is actually array of ONE dict with keys {'battleProgress', 'currentProgress', 'maxProgress', 'ids'}, constructed in SSEClientUtils.getConditionInfo-->
		<property name="conditionCategory"		type="String"/> <!-- ref Sse.SSE_CONDITION_CATEGORY.* -->
		<property name="pveModifier"			type="Number"/>
		<property name="pveModifierApplied"		type="Boolean"/>
		<event name="evConditionSetChanged"/>
		<event name="evSortedBattleTypesForUIChanged"/>
	</component>

	<component name="SseWindowState">
		<property	name="selectedTag"			type="String" />
		<property	name="selectedContainer"	type="String" />
		<property	name="selectedTask"			type="String"  sync="false"/>
		<property	name="prevItemsByTag"		type="Dictionary"  sync="false"/>
		<property	name="itemToShow"			type="String" />
		<property	name="activeTaskIndex"		type="Integer" /> <!-- active task in chain -->
		<property	name="unclaimedRewardCount"	type="Integer" /> <!-- amount of completed unclaimed tasks/chains/epics -->

		<event		name="evChanged"/>
	</component>

	<component name="SseRefresh">
		<property name="isDaily"			type="Boolean"/>
		<property name="weekly"				type="Integer"/> <!-- type of weekly update sse.SSE_WEEK_UPDATE_TYPE -->
		<property name="refreshTime"		type="Number"/>
		<event name="evChanged"/>
	</component>

	<component name="SseGlobal">
		<property name="personalProgress"	type="Number"/> <!-- player's personal contribution to a global task -->
		<event name="evChanged"/>
	</component>

	<component name="SseOpenEnded">
		<property name="isRewarded"		type="Boolean"				/>
		<property name="isFrozen"		type="Boolean"				/>
		<property name="freezeAt"		type="Number"				/>
		<property name="resultsAt"		type="Number"				/>
		<property name="rewardToken" 	type="String" 	sync="false"/>

		<event name="evChanged"/>
	</component>

	<component name="SseOpenEndedCounter">
		<property name="activeAmount" type="Number"/>

		<event name="evChanged"/>
	</component>

	<component name="SsePrimeTime">
		<property name="startAt"	type="Number"/>
		<property name="endAt"		type="Number"/>

		<event name="evChanged"/>
	</component>

	<!-- Marker for markup, used as temporary workaround -->
	<component name="SseAchievementCondition"/>

	<component name="SseLink">
		<property name="url"			type="String"	/>
		<property name="mainText"		type="String"	/>
		<property name="tooltipText"	type="String"	/>
		<property name="isExternal"		type="Boolean"	/>

		<event name="evChanged"/>
	</component>

	<component name="SubmarineSearchPoint">
		<property name="id"			type="Integer" pk="true"/>
		<property name="counter"	type="Integer" sync="false"/>

		<event name="evCounterChanged"/>
		<event name="evHide"/>
	</component>

	<component name="SubmarineHydrophoneZone">
		<property name="id"			type="Integer" pk="true"/>
		<event name="evHide"/>
	</component>

	<component name="AirSupportCharge">
		<property name="id"			type="Integer" pk="true"/>
		<event name="evHide"/>
	</component>

	<component name="DepthCharge">
		<property	name="id"					type="String"		pk="true"/>
		<property	name="ownerID"				type="Integer"		 sync="false"/>
		<property	name="shotID"				type="Integer"		 sync="false"/>
		<property	name="dangerLevel"			type="Integer"		/>
		<event name="evDangerLevelChanged"/>
		<event name="evBlowUp"/>
	</component>

	<component name="SerialLoad">
		<property	name="index"				type="Integer" sync="false"/>
		<property	name="weaponType"			type="Integer" sync="false"/>
		<property	name="state"				type="Integer"/>

		<event name="evStateChanged"/>
	</component>

	<component name="Submarine">
		<property name="id"					type="Number" sync="false"/> <!-- TEMP FIX FOR OLD MARKERS, REMOVE AFTER SUBS MARKERS TO UB2 -->

		<property name="depthIndex"			type="Integer"/> <!-- shared_constants.battle.DEPTH_STATE -->
		<property name="depthRanges"		type="Dictionary"/> <!-- { DEPTH_STATE: [min, max] } -->
		<property name="depthStatesValues"	type="Array"/>
		<property name="showDepth"			type="Boolean" />
		<property name="depth"				type="Number" />
		<property name="depthValues"		type="Array"/>
		<property name="nearestDepthIndex"	type="Integer"/>

		<event 		name="evDepthIndexChanged"	/>
		<event		name="evShowDepthChanged"	/>
		<event		name="evDepthChanged"		/>
		<event		name="evDepthValuesChanged"/>
		<event		name="evNearestDepthIndexChanged" />
	</component>

	<component name="Battery">
		<property name="value"				type="Number"/>
		<property name="burnedValue"		type="Number"/>
		<property name="maxCapacity"		type="Integer"/>
		<property name="baseRegenRate"		type="Number" sync="false"/>
		<property name="baseSpendRate"		type="Number"/>
		<property name="currentRate"		type="Number"/>
		<property name="burnRate"			type="Number"/>
		<property name="batteryState"			type="Integer"/>
		<property name="isPotentiallyBurning"	type="Boolean"/>

		<event name="evValueChanged"/>
		<event name="evMaxCapacityChanged"/>
		<event name="evCurrentRateChanged"/>
		<event name="evBurnRateChanged"/>
		<event name="evBatteryStateChanged"/>
		<event name="evIsPotentiallyBurningChanged"/>

		<event name="evEnemyBatteryBurned"/>
		<event name="evBurnedValueChanged"/>
	</component>

	<component name="Ward">
		<property name="id"	type="Integer"	pk="true" />
		<property name="type" type="Integer"/>
	</component>

	<component name="PremiumItem">
		<property name="id"	type="String" pk="true"/>
		<property name="duration"	type="Number"/>
		<property name="gold"	type="Number"/>
		<property name="isLocked"	type="Boolean" sync="false"/>
		<property name="isSelected"	type="Boolean"/>
		<property name="type"	type="Integer" sync="false"/>
		<property name="cashbackDays"	type="Integer"/>
		<property name="cashbackGold"	type="Integer"/>
		<event	  name="evChanged"/>
	</component>

	<component name="LootboxOpeningState">
		<property name="lootboxOpened" type="Number"/>
		<property name="lootboxTotal" type="Number"/>
		<property name="lastOpenRewards" type="Number"/> <!-- entity id with last results -->
		<event name="evLootboxOpenedChanged"/>
		<event name="evLootboxesOpenStarted"/>
		<event name="evLootboxesOpenEnded"/>
	</component>

	<component name="OpenLooboxesResults">
		<property name="rewards" type="Array"/> <!-- entity ids with component RewardSource -->
	</component>
	<component name="CompletionRewards">
		<property name="rewards" type="Array"/> <!-- массив entity.id сущностей с компонентом ComponentClass.rewardSource -->
	</component>

	<component name="SplitRunTest">
		<property	name="id"			type="String"	pk="true"	/>
		<property	name="tokenId"		type="String"	 sync="false"/>
		<property	name="data"			type="Dictionary"			/>
		<event		name="evDataChanged"							/>
	</component>

	<component name="ExposedToken">
		<property	name="id"			type="String"	pk="true"/>
	</component>

	<component name="Notification"  sync="false">
		<property name="title" type="String" />
		<property name="description" type="String" />
	</component>

	<component name="Tooltip">
		<property name="title" type="String" />
		<property name="description" type="String" />

		<event name="evTitleChanged" />
		<event name="evDescriptionChanged" />
	</component>

	<!-- CrewToHirePersonality -->
	<component name="CrewToHirePersonality">
		<property	name="baseUrl"				type="String"					/>
		<property	name="overlayUrl"			type="String"					/>
		<property	name="rank"					type="Integer"	default="0"		/>
		<property	name="baseTrainingLevel"	type="Integer"	default="1"		/>
		<property	name="moneyTrainingLevel"	type="Integer"	default="2"		/>
		<property	name="goldTrainingLevel"	type="Integer"	default="3"		/>

		<property	name="nation"				type="String"	default="'Russia'" sync="false"/>
		<property	name="subnation"			type="String"	default="'Russia'" sync="false"/>

		<property 	name="level"				type="Integer"	default="0"		/>
		<property	name="fullName"				type="String"					/>
		<property	name="baseId"				type="Integer"	default="0"		 sync="false"/>
		<property	name="rankIDS"				type="String"					/>

		<event		name="evChanged"										/>
	</component>

	<!-- Event battles(gamestore)-->
	<component name="EventRosterParams" sync="false">
		<property name="startTime" type="String"/>
		<property name="rotationPeriod" type="Number"/>
		<property name="eventIds" type="Array"/>
		<event name="evChanged"/>
	</component>

	<component name="EventRosterState" sync="false">
		<property name="currentState" type="Integer"/>
		<event name="evCurrentStateUpdate"/>
	</component>

	<component name="EventBattleParams">
		<property	name="eventId"				type="Number"		pk="true"/>
		<property	name="gpName"				type="String"	 sync="false"	/>
		<property	name="eventName"			type="String"	 />
		<property	name="currencyType"			type="String"		/>
		<property	name="uniqueShips"			type="Array"		/>
	</component>

	<component name="EventBattleState">
		<property	name="uniqueId"				type="Integer"		pk="true"/>
		<property	name="name"					type="String"		/>
		<property	name="eventId"				type="Number"		/>
		<property 	name="primeTimeStart"		type="Integer"		 sync="false"/>
		<property 	name="primeTimeEnd"			type="Integer"		 sync="false"/>
		<property	name="isVisible"			type="Boolean"		 sync="false"/>
		<property	name="useBanner"			type="Boolean"		/>
		<property	name="priority"				type="Integer"		 sync="false"/>
		<property	name="sseChain"				type="String"		 sync="false"/>
		<event		name="evChanged"/>
	</component>

	<component name="BattleScenariosInfo">
		<property	name="scenariosByMap"		type="Dictionary" 	sync="false"/> <!-- {mapName: (scenarioName,)} -->
	</component>

	<component name="BattleUIInfo">
		<property 	name="tagsMaskForUI"    	type="Integer"		/> <!-- bitmask of SC.ui_common.SCENARIO_TAGS_MASK -->
	</component>


	<component name="WindowManager">
		<property	name="windowQueue"			type="Array"		/>
		<property	name="currentTopWindow"		type="String" sync="false"/> <!-- TODO: only for SysMessagesRendering, replace with topWindowNodeName -->
		<property	name="topWindowNodeName"	type="String"		/> <!-- sfm top window node -->
		<event		name="evChanged"/>
		<event		name="evTopWindowNodeNameChanged"/>
		<event		name="evCurrentTopWindowChanged" sync="false" />
	</component>

	<!-- RECRUIT = 0, VETERAN = 1, declarated at wows/game/res/gui/data/constants/common.xml -->
	<component name="Referral">
		<property	name="type"					type="Number"/>

		<event		name="evTypeUpdated"		/>
	</component>

	<component name="TacticalMapGridTextElement">
		<property	name="text"					type="String"/>
		<event		name="evTextUpdated"		/>
	</component>

	<component name="TacticalConsumablesGridTextElement">
		<property	name="text"					type="String"/>
		<event		name="evTextUpdated"		/>
	</component>

	<component name="VoicePrompt">
		<property	name="isPlaying"			type="Boolean"/>

		<event		name="evPlay"		/>
		<event		name="evStop"		/>
	</component>

	<component name="LoginProgress">
		<property	name="doneLoading"			type="Boolean"		/>
		<property	name="isConnected"			type="Boolean"		/>
		<property	name="firstTimeLogin"		type="Boolean"		default="true"/>

		<event		name="evIsConnectedChanged"/>
		<event		name="evDoneLoadingChanged"/>
		<event		name="evFirstTimeLoginChanged"/>
		<event      name="evStartFade"/>
	</component>

	<component name="ShipyardBannerState">
		<property name="progressbar"			type="Dictionary"/>
		<property name="availableRewards"		type="Integer"/>
		<property name="boosterAvailable"		type="Boolean"/>
		<property name="visible"				type="Boolean"/>
		<property name="type" 					type="String"/>
		<property name="finishTimestamp" 		type="Integer"/>

		<!-- Entity ID with Notification Tip component (if zero - not provided) -->
		<property name="notification" type="Integer"  sync="false"/>

		<event		name="evUpdate"/>
	</component>

	<component name="MetashopBannerState">
		<!-- Name of provided banner -->
		<property name="name" type="String"  sync="false"/>

		<!-- URL provided by armory banner -->
		<property name="url" type="String" sync="false" />

		<!-- Entity ID with Notification Tip component (if zero - not provided) -->
		<property name="notification" type="Integer"  sync="false"/>

		<!-- Description in banner -->
		<property name="description" type="String" />

		<property name="isNew" type="Boolean" /> <!-- Must showing 'NEW' label -->
		<property name="isActive" type="Boolean"/> <!-- Must glowing -->

		<property name="visible" type="Boolean" default="true"/> <!-- Visible to user -->

		<event name="evUpdate" />
	</component>

	<component name="PremiumShopBannerState">
		<!-- Name of provided banner -->
		<property name="name" type="String"  sync="false"/>

		<!-- URL provided by premium shop banner -->
		<property name="url" type="String"  sync="false"/>

		<!-- Entity ID with Notification Tip component (if zero - not provided) -->
		<property name="notification" type="Integer"  sync="false"/>

		<!-- Description in banner -->
		<property name="description" type="String" />

		<property name="isNew" type="Boolean"  sync="false"/> <!-- Must showing 'NEW' label -->
		<property name="isActive" type="Boolean"/> <!-- Must glowing -->

		<property name="visible" type="Boolean" default="true" sync="false"/> <!-- Visible to user -->

		<event name="evUpdate" />
	</component>

	<component name="ProspectiveEventBannerState">
		<!-- Указывает на наличие события, если false, значения в компоненте не валидны -->
		<property name="active" type="Boolean" />

		<!-- URL-адрес, на который будет переводить баннер при его открытии -->
		<property name="url" type="String" />

		<!-- URL-адрес изображения баннера -->
		<property name="image" type="String" />

		<!-- Время начала события -->
		<property name="startTime" type="Integer" />

		<!-- Время начала события -->
		<property name="finishTime" type="Integer" />

		<!-- Флаги состояния баннера -->
		<property name="hasCountdown" type="Boolean" />
		<property name="isGlowing" type="Boolean" />
		<property name="isRewardAvailable" type="Boolean" />
		<property name="align" type="Integer" />

		<property name="hasGuidingTip" type="Boolean" />

		<event name="evActiveChanged" />
		<event name="evUrlChanged" />
		<event name="evStartTimeChanged" />
		<event name="evImageChanged" />
		<event name="evHasCountdownChanged" />
		<event name="evIsHighlightedChanged" />
		<event name="evIsGlowingChanged" />
		<event name="evIsRewardAvailableChanged" />
		<event name="evHasGuidingTipChanged" />
	</component>

	<component name="TimeToLive">
		<property	name="lifeTime"				type="Number"		default="0"/>	<!-- life time: 0 or less - will start removing instantly-->
		<property	name="deathTime"			type="Number"		default="0"/>
		<property	name="isRemoving"			type="Boolean"		default="false"/>

		<event		name="evRemove"/>
		<event		name="evCancelRemoving"/>
		<event		name="evSelfRemove"/>
	</component>

	<component name="TechTreeBranch">
		<property	name="id"					type="Integer"	pk="true"/>
		<property	name="startShipId"			type="Number"	/>
		<property	name="endShipId"			type="Number"	/>
		<property	name="isSingleShipFeature"	type="Boolean"	/>
		<property	name="mainFeatures"			type="Array"	/>		<!-- array of string-->
		<property	name="otherFeatures"		type="Array"	/>		<!-- array of {category: int, feats: [{type: int, text: string}, ...]}-->
	</component>

	<component name="Highlight">
		<property name="state"			   type="Integer" default="1" />

		<event	name="evStateUpdated" />
	</component>

	<component name="RageMode">
		<property	name="ownerId"				type="Number" 	pk="true" />
		<property	name="slotData"				type="RageModeSlotData"	/>
		<event name="evUpdated"/>
	</component>

	<component name="RageModeState">
		<property	name="ownerId"			type="Number" 	pk="true"	/>
		<property	name="name"				type="String"				/>
		<property	name="state"			type="Integer"				/>
		<property	name="currentProgress"	type="Integer"				/>
		<property	name="duration"			type="Number"	sync="false"/>
		<property	name="hasDecrement"		type="Boolean"				/>
		<property	name="decrementDelay"	type="Number"				/>
		<property	name="decrementCount"	type="Number"				/>
		<property	name="decrementPeriod"	type="Number"				/>

		<event	name="evStateChanged"		/>
		<event	name="evCurrentProgressChanged"	/>
		<event	name="evCurrentProgressIncreased"/>
		<event	name="evCurrentProgressDecreased"/>
		<event	name="evDurationChanged"		/>
	</component>

	<component name="FireModeSlot">
		<!-- for icons in slot -->
		<property	name="ownerId"				type="Number" 	pk="true" />
		<property name="modes" type="Array" />
		<property name="commandId" type="Integer" default="-1"/> <!-- default = CMD_NONE -->
		<!-- for Tooltips -->
		<property	name="description"			type="String"/>
		<property	name="title"				type="String"/>
		<property	name="isActive"				type="Boolean"/>
		<property	name="iconPath"				type="String"/>
		<property	name="isBurstFire"			type="Boolean"/>

		<event name="evUpdated"/>
	</component>

	<component name="AltFireMode">
		<property 	name="isActive"		type="Boolean" />
		<event name="evIsActiveChanged" />
	</component>

	<component name="Ammo">
		<property	name="id"					type="String"	pk="true"	/> <!-- SlotData.slotIdent -->
		<property	name="hasSecondaryAmmo"		type="Boolean"				/>
		<property	name="commandId"			type="Number"				/>
		<property	name="weaponType"			type="Integer"				/>
		<property	name="slotId"				type="Number"	sync="false"/>
		<property	name="name"					type="String"				/>
		<property	name="squadType"			type="String"				/>
		<property	name="squadId"				type="Integer"				/>
		<property	name="isAutoUsage"			type="Boolean"				/>
		<!-- for Tooltips -->
		<property	name="viewData"			type="AmmoSlotData"			/>

		<event name="evUpdated"/>
	</component>

	<component name="Ability">
		<property	name="slotId"				type="Integer"	pk="true"/>
		<property	name="abilId"				type="Number"	pk="true"/>
		<property	name="numConsumables"		type="Integer"	default="-1"/>
		<property	name="hasLimitation"		type="Boolean"	default="false"/>
		<property	name="slotName"				type="String"	sync="false"/>
		<property	name="squadType"			type="String"	pk="true"/>
		<property	name="isSquadronAbility"	type="Boolean"	default="false"/>
		<property 	name="isInstalled" 			type="Boolean"	default="false"/>
		<property	name="toggle"				type="Boolean"	default="false"/>	<!-- Переключаемый консамабл для Пеламиды HW2020 -> BuffsShift -->
		<property	name="consumableType"		type="Integer"	sync="false"/>
		<property	name="periodical"			type="Boolean"	default="true"/>
		<property	name="isSpecial"			type="Boolean"	 default="false"/>
		<property	name="isSeen"				type="Boolean"	default="false"/> <!-- Для консамблов, получаемых через SSE (pinata party) -->
		<property	name="viewData"				type="ConsumableSlotData"	/>

		<event	name="evIsInstalledChanged" />
		<event	name="evNumConsumablesChanged" />
		<event	name="evNameChanged" />
		<event	name="evAttributesChanged" />
		<event	name="evIsUnlockedChanged" />
		<event	name="evIsSeenChanged" />
		<event	name="evChanged" />
	</component>

	<component name="Modernization">
		<property 	name="modId" 					type="Number"  pk="true"/>
		<property 	name="slotId"					type="Integer"	/>
		<property 	name="name"						type="String"	/>
<!--		<property 	name="slotsNum" 				type="Integer"  />-->
		<property 	name="numInStorage" 			type="Integer"  />
		<property 	name="type" 					type="String"   />
		<property 	name="seen" 					type="Boolean"   sync="false"/>
		<property 	name="isInstalled" 				type="Boolean"  default="false"/>
		<property 	name="availability"				type="Integer"   sync="false"/>
		<property 	name="isRecommended" 			type="Boolean"  default="false"/>

		<event	name="evIsRecommendedChanged" />
		<event	name="evIsInstalledChanged" />
		<event	name="evNumInStorageChanged" />
		<event	name="evAvailabilityChanged" />
	</component>
	
	<component name="RecommendedModernization">
		<property 	name="modsOnStorage"		type="Array"	/>
		<property 	name="modsToBuy"			type="Array"	/>
		<property 	name="totalCostCR"			type="Integer"	/>
		<event	name="evUpdated" />
	</component>

	<component name="Module">
		<!-- Constant properties -->
		<property	name="id"								type="Number"		/>
		<property	name="name"								type="String"		/>
		<property	name="type"								type="String"	pk="true"	/>
		<property	name="nameText"							type="String"/>
		<property	name="subTypeIDS"						type="String"	default="''"/>
		<property	name="depth"							type="Number"	pk="true"	/>
		<property	name="nextShipId"						type="Number"		/>

		<property	name="costFreeXP"						type="Integer"		/>
		<property	name="expDeficit"						type="Integer"		/>
		<property	name="creditsDeficit"					type="Integer"		/>
		<property	name="totalCostCR"						type="Integer"		/>
		<property	name="totalCostXP"						type="Integer"		/>
		<property	name="dependentModules"					type="Array"		/>
		<property	name="isExplored"						type="Boolean"		/>
		<property	name="isPurchased"						type="Boolean"		/>
		<property	name="canBuy"							type="Boolean"		/>

		<event	name="evDeficitChanged"/>
		<event	name="evUpdated" />
	</component>

	<component name="InstalledModule">
		<property 	name="type"	 type="String" pk="true"/>
	</component>

	<component name="StockModule">
		<property 	name="type"	 type="String" pk="true"/>
	</component>

	<component name="EquipmentSlot">
		<property name="type"			   	type="Integer" 	pk="true"/>
		<property name="subCollectionKey"   type="Integer" 	pk="true"/>
		<property name="installedEntityId"  type="Integer"/>
		<property name="bestItemTypeInSlot" type="Integer" 	default="0"/>
		<property name="squadType"  		type="String" 	pk="true"/>
		<property name="commandId"			type="Integer"	/>
		<property name="isSpecial"			type="Boolean"	/>


		<event	name="evCommandIdChanged" />
		<event	name="evInstalledEntityIdChanged" />
		<event	name="evBestItemTypeInSlotChanged" />
		<event	name="evIsSpecialChanged" />
	</component>

	<component name="SellShipData">
		<property name="shipCostCR"					type="Integer" 	/>
		<property name="shipCostGL"					type="Integer" 	/>
		<property name="topUnitsCost"				type="Integer" 	/>
		<property name="sellCostMod"				type="Integer" 	/>
		<!-- A warning should be shown when the active ship discount is greater than `SELL_COEF` as a percentage -->
		<property name="shouldShowDiscountWarning"  type="Boolean"	/>
		<event	name="evUpdated" />
	</component>

	<component name="InfotipState">
		<property name="isShown" type="Boolean"  sync="false"/>

		<event name="evUpdate"/>
	</component>

	<component name="PointOfInterest">
		<property name="type"					type="Integer"	/>
		<property name="screenPosition"			type="Point"	/>
		<property name="pointerYaw"				type="Number"	/>
		<property name="screenDistToPoint"		type="Number"	/>
		<property name="isOffScreen"			type="Boolean"	/>
		<property name="inScreenBounds"			type="Boolean"	/>
		<property name="ignoreHeightOffset"		type="Boolean"	 sync="false"/>
		<property name="isFullscreen"			type="Boolean"	 sync="false"/>
		<property name="useRealPosition"		type="Boolean"	 sync="false"/>
		<!-- if current world position is invalid dont show POI marker -->
		<property name="isPositionValid"		type="Boolean"	/>

		<event name="evIsOffScreenChanged" />
		<event name="evInScreenBoundsChanged" />
		<event name="evIsPositionValidChanged" />
	</component>

	<component name="InGameBonus">
		<property name="indexInPack"		type="Integer"	pk="true"/>
		<property name="packId"				type="Integer" />
		<property name="type"				type="Integer"/>
		<property name="buffName"			type="String" />
		<property name="consumableType"		type="Integer" default = "-1" />
		<property name="cmd"				type="Integer" />
		<property name="selected"			type="Boolean" />
		<property name="count"				type="Integer" />

		<event	name="evSelectedChanged" />
	</component>

	<component name="BattleLeveling">
		<property name="level"				type="Integer"	 sync="false"/>
		<property name="isMax"				type="Boolean" sync="false"	/>

		<event name="evChanged"	/>
	</component>

	<component name="AbilitiesDataForSkillTooltip">
		<property name="abilitiesToShow"	type="Dictionary"/> <!-- {abilityId: amount, ...} type(int, int) -->

		<event	name="evAbilitiesToShowChanged"	/>
	</component>

	<component name="AmmoDataForSkillTooltip">
		<property name="ammoToShow"	type="Array"/> <!-- {ammoId, ammoId...} type(string) -->

		<event	name="evAmmoToShowChanged"	/>
	</component>

	<!-- Rank Season Battles -->
	<component name="RankSeason">
		<property name="id"						type="Integer" pk="true"/>
		<property name="title"					type="String"/>
		<property name="isDivisionAllowed"		type="Boolean"/>
		<property name="seamlessLeagues"		type="Boolean"/>
		<property name="startLeague"			type="Integer"/>
		<property name="minRewardLeague"		type="Integer" sync="false"/>
		<property name="minRewardRank"			type="Integer" sync="false"/>
		<property name="finalRewards"			type="Array" sync="false"/>
		<property name="finalRewardsCategory"	type="String" sync="false"/>

		<property name="stage"				type="Integer"/>
		<property name="currentSprintId"	type="Integer"/>
		<property name="nextSprintId"		type="Integer"/>
		<property name="previousSprintId"	type="Integer"/>

		<property name="primeTimeStart"	type="Integer" sync="false"/>
		<property name="primeTimeEnd"	type="Integer" sync="false"/>

		<event name="evStageChanged"/>
		<event name="evChanged"/>
	</component>

	<component name="RankSprint">
		<property name="sprintId"	type="Integer" pk="true"/>
		<property name="seasonId"	type="Integer" sync="false"/>		<!-- ref to RankSeason.id -->
		<property name="startTime"	type="Number"/>			<!-- Sprint start time in UNIXTIME -->
		<property name="finishTime" type="Number"/>			<!-- Sprint finish time in UNIXTIME -->
		<property name="title"		type="String" sync="false"/>
	</component>

	<component name="PrimeTime">
		<property	name="primeTimeStartTime"	type="Number"		/>
		<property	name="primeTimeFinishTime"	type="Number"		/>
		<property	name="daylightshift"		type="Number"		/>
		<event		name="evChanged"/>
	</component>

	<component name="RankLeague">
		<property name="id"								type="Integer" pk="true"/>
		<property name="seasonId"						type="Integer" sync="false"/>		<!-- ref to RankSeason.id -->
		<property name="startRank"						type="Integer"/>
		<property name="startRankItemIndex"				type="Integer" sync="false"/>		<!-- index of start rank element in currentSeasonRanks.carousel subcollection -->
		<property name="shipsLevelMin"					type="Integer"/>
		<property name="shipsLevelMax"					type="Integer"/>
		<property name="teamLimit"						type="Integer"/>
		<property name="hasQualification"				type="Boolean"/>
		<property name="firstRankRewards"				type="Array"/>			<!-- array of entities ids with rewardSource components -->
		<property name="firstRankRewardsCategory"		type="String"/>			<!-- reward category -->
		<property name="qualificationRewards"			type="Array"/>			<!-- array of entities ids with rewardSource components -->
		<property name="qualificationRewardsCategory"	type="String"/>			<!-- reward categories -->
		<property name="victories"						type="Array"/>			<!-- array of numbers of victories -->
		<property name="victoryRewards"					type="Array"/>			<!-- array of entities ids with rewardSource components -->
		<property name="victoryRewardsCategories"		type="Array"/>			<!-- array of reward categories -->

		<event	  name="evStartRankItemIndexChanged"/>
		<event	  name="evChanged"/>
	</component>

	<component name="RankInfo">
		<property name="id"					type="Integer" pk="true"/>
		<property name="leagueId"			type="Integer" pk="true"/>		<!-- ref to RankLeague.id -->
		<property name="seasonId"			type="Integer" sync="false"/>				<!-- ref to RankSeason.id -->
		<property name="starsToNext"		type="Integer"/>
		<property name="starEarnPlace"		type="Integer"/>
		<property name="starLossPlace"		type="Integer"/>
		<property name="isGuaranteed"		type="Integer"/>				<!-- a 'safe' rank. Maps to isSavePoint in rank xml -->
		<property name="isStarGuaranteed"	type="Integer" sync="false"/>				<!-- a 'safe' star. Maps to permanentStars in rank xml -->
	</component>

	<component name="RankQualification">
		<property name="leagueId"						type="Integer" pk="true"/>
		<property name="seasonId"						type="Integer" sync="false"/>		<!-- ref to RankSeason.id -->
		<property name="starsToNext"					type="Integer"/>
		<property name="shipsLevelMin"					type="Integer"/>
		<property name="shipsLevelMax"					type="Integer"/>
		<property name="teamLimit"						type="Integer" sync="false"/>
		<property name="rewards"						type="Array" sync="false"/>			<!-- array of entities ids with rewardSource components -->
	</component>

	<component name="RankPlayer">
		<property name="currentLeague"			type="Integer"/>
		<property name="matchingLeague"			type="Integer"/> <!-- differs from currentLeague if the player in qualification -->
		<property name="currentRank"			type="Integer"/>
		<property name="currentRankIndex"		type="Integer" sync="false"/>
		<property name="bestRank"				type="Integer"/>
		<property name="bestRankInSeason"		type="Integer"/>
		<property name="victories"				type="Integer"/>
		<property name="lastRewardedVictories"	type="Integer"/>
		<property name="currentStars"			type="Integer"/>
		<property name="currentStage"			type="Integer" sync="false"/>
		<property name="isParticipated"			type="Boolean"/>
		<property name="isInQualification"		type="Boolean"/>
		<property name="hasQualificationPassed"	type="Boolean"/>
		<property name="denyReasons"			type="Array" sync="false"/>

		<event name="evChanged"/>
		<event name="evChangedIsInQualification"/>
		<event name="evMatchingLeagueChanged"/>
	</component>

	<component name="LastActiveRank" sync="false">
		<property name="stage"			type="Integer"/>
		<property name="seasonId"		type="Integer"/>
		<property name="league"			type="Integer"/>
		<property name="rank"			type="Integer"/>

	</component>

	<component name="PostBattleRankInfo">
		<property name="arenaUniqueID"	type="String" pk="true"/>
		<property name='newInfo'		type="RankInfoStruct"/>					<!-- new rank info: rank, rankBest, stars, stage, participated, totalStars -->
		<property name='oldInfo'		type="RankInfoStruct"/>					<!-- old rank info: same format as above -->
		<property name='changeEvents'	type="Array"/>						<!-- an array of events used to drive the animation of rank blocks & stars on the postbattle -->
		<property name='changeRanks'	type="Array"/>						<!-- an array of ranks used to instantiate rank blocks on the ui -->
		<property name='step'			type="Integer"/>					<!-- how many stars was gained/lost. Negative if stars were lost -->
		<property name='battleResult'	type="Integer"/>

		<property name='victoryRewardsProgress'			type="Integer"/>		<!-- shared_constants.common RANK_VICTORIES_REWARDS_PROGRESS -->
		<property name="victories"						type="Array"/>			<!-- array of numbers of victories -->
		<property name='victoryRewards'					type="Array"/>
		<property name='victoryRewardsCategories'		type="Array"/>

		<property name='firstRankRewards'				type="Array"/>
		<property name='firstRankRewardsCategory'		type="String"/>

		<property name='qualificationRewards'			type="Array"/>
		<property name='qualificationRewardsCategory'	type="String"/>

		<property name="fastQualificationVictories"				type="Array"/>			<!-- array of numbers of victories -->
		<property name="fastQualificationRewards"				type="Array"/>			<!-- array of entities ids with rewardSource components -->
		<property name="fastQualificationRewardsCategories"		type="Array"/>			<!-- array of reward categories -->

		<event name="evChanged"/>
	</component>

	<component name="RankCarouselItem"/>

	<component name="RankSeasonSummary">
		<property name="seasonId"		type="Integer" pk="true"/>
		<property name='league'			type="Integer"/>
		<property name='rank'			type="Integer"/>
		<property name='stars'			type="Integer"/>
		<property name='starsToNext'	type="Integer"/>
		<property name='rewards'		type="Array"/>
		<property name='rewardCategory'	type="String"/>
	</component>

	<component name="RankSprintSummary">
		<property name="sprintId"			type="Integer" pk="true"/>
		<property name="seasonId"			type="Integer" sync="false"/>
		<property name='currentLeague'		type="Integer"/>
		<property name='nextSprintLeague'	type="Integer"/>
		<property name='rank'				type="Integer"/>
		<property name='stars'				type="Integer"/>
		<property name='starsToNext'		type="Integer"/>
	</component>

	<component name="VehicleDeathInfo">
		<property name="reason"			type="String"/>
	</component>

	<component name="Route">
		<property name="name"				type="String"   pk="true"/>
		<property name="parentId"			type="Integer" sync="false"/>	<!-- entityId -->
		<property name="root"				type="String" sync="false"/>		<!-- route name -->
		<property name="level"				type="Integer" sync="false"/>
		<property name="children"			type="Array"/> <!-- Route entity id -->
		<property name="activeChild"		type="String"/>		<!-- route name -->
		<property name="prevActiveChild"	type="String"/>		<!-- route name -->

		<property name="isActive"			type="Boolean"/>
		<property name="isAvailable"		type="Boolean"/>

		<event	name="evChildrenChanged" />
		<event	name="evIsActiveChanged" />
		<event	name="evIsAvailableChanged" />
		<event	name="evActiveChildChanged" />
	</component>


	<component name="RouteFading">
		<property	name="isFading"	type="Boolean"/>

		<event	name="evIsFadingChanged"/>
	</component>


	<component name="BrawlBattlesSeason">
		<property name="id"						type="Integer" pk="true"/>
		<property name="promoTime"				type="Number"/>			<!-- Season promo time in UNIXTIME -->
		<property name="isActive"				type="Boolean"/>

		<property name="primeTimeStart"			type="Integer"/>
		<property name="primeTimeEnd"			type="Integer"/>

		<event name="evChanged"/>
	</component>

	<component name="AlmanacParams">
		<property name="background"		type="String"/>
		<property name="stages"			type="Array" sync="false"/> <!-- массив entity.id сущностей с компонентом ComponentClass.almanacStageParams -->
		<property name="extraRewardDays" type="Integer" sync="false"/>
		<event name="evChanged"/>
		<event name="evCloseWindow"/>
	</component>

	<component name="AlmanacStageParams">
		<property name="stageID"		type="Integer" pk="true"/>
		<property name="rewards"		type="Array"/> <!-- массив entity.id сущностей с компонентом ComponentClass.rewardSource -->
		<event name="evChanged"/>
	</component>

	<component name="AlmanacState">
		<property name="daysLeft"		type="Integer"/>
		<property name="stages"			type="Array"/> <!-- массив entity.id сущностей с компонентом ComponentClass.almanacStageState -->
		<property name="currentStage"	type="Integer"/>
		<event	name="evChanged" />
	</component>

	<component name="AlmanacStageState">
		<property name="stageID"		type="Integer" pk="true"/>
		<property name="stageType"		type="String"/>
		<property name="isLooted"		type="Boolean"/>
		<property name="isUnattainable"	type="Boolean"/>
		<property name="isCurrent"		type="Boolean"/>
		<property name="isPrevious"		type="Boolean" sync="false"/>
		<event	name="evStageUpdated"/>
	</component>

	<component name="RootRoute" sync="false">
		<property name="previousLeaf"		type="String"/>		<!-- route name -->
		<property name="activeLeaf"			type="String"/>		<!-- route name -->

		<event	name="evActiveLeafChanged" />
	</component>

	<component name="ShipAcesSeasonDump" sync="false">
		<property name="seasonData" 	type="Dictionary"/>
	</component>

	<component name="ShipAcesValidGroups" sync="false">
		<property name="groupsBySprintId" 		type="Array"/>
	</component>

	<component name="ShipAcesSeason">
		<property name="seasonId"					type="String" pk="true"	/>
		<property name="activeSprintId"				type="Number"/>
		<property name="finishTime"					type="Number"/>  <!-- UNIXTIME -->
		<property name="primaryReward"				type="String"/>  <!-- SC.common.CURRENCIES or Lootbox GameParam.name -->
		<property name="secondaryReward"			type="String"/>  <!-- SC.common.CURRENCIES -->

		<event name="evChanged"/>
	</component>

	<component name="ShipAcesSprint">
		<property name="sprintId"				type="Number" pk="true"/>	<!-- Sprint index -->
		<property name="startTime"  			type="Number"/>	<!-- Sprint (stage) start time in UNIXTIME -->
		<property name="nextSprintTime"			type="Number"/> <!-- Next sprint (within season) start time in UNIXTIME -->
		<property name="bestResult" 			type="Number"/> <!-- Best task result -->
		<property name="taskTotal" 				type="Number"/> <!-- Summary of tasks done in the sprint -->
		<property name="incomeTotal" 			type="Integer"/> <!-- Summary of metacurrency for the sprint -->
		<property name="incomeSecondaryTotal" 	type="Integer"/> <!-- Summary of secondary currency for the sprint -->
		<property name="incomeMax" 				type="Integer"/> <!-- Maximum of metacurrency for the sprint -->
		<property name="conditionCategory"		type="String"/>
		<property name="shipLevels" 			type="Array"/>
		<property name="incomeList"				type="Array"/> <!-- Array of RewardComponent Entity IDs -->
		<event name="evChanged"/>
	</component>

	<component name="ShipAcesTask" >
		<property name="shipType"							type="String" pk="true"/> 	<!-- shipType -->
		<property name="nation"								type="String" pk="true"/> 	<!-- nation -->
		<property name="sprintId"							type="Number" pk="true"/>	<!-- Sprint index -->
		<property name="prevConditionCount"					type="Integer"/>
		<property name="conditionCount"						type="Integer"/>
		<property name="conditionText"						type="String"/>
		<property name="rewards"							type="Array"/>				<!-- List of rewards -->
		<property name="isDone"								type="Boolean" sync="false"/> 			<!-- Task done state -->
		<property name="isEmpty"							type="Boolean"/> 			<!-- No ship for pair (nation, shiptype) -->
		<property name="stepsNumber"						type="Integer"/> 			<!-- How many times task has been executed -->
		<property name="incomeTotal" 						type="Integer"/> 			<!-- Summary of metacurrency for the task -->
		<property name="incomeSecondaryTotal" 				type="Integer"/> 			<!-- Summary of secondary currency for the task -->
		<property name="taskConditions"						type="Array" sync="false"/>	<!-- List with task countable condition -->
		<event name="evChanged"/>
	</component>

	<component name="ShipAcesPersistent">
		<property name="arenaId"		type="Number" pk="true"/>
		<property name="id"				type="String" pk="true"/>
		<property name="shipId"			type="Number"/>
		<property name="stepsNumber"	type="Integer"/> <!-- How many times task has been executed -->
	</component>

	<component name="ShipAcesFinalStats">
		<property name="bestBattleResults" 	type="Dictionary"	/>  <!-- Map: {conditionCategory: bestBattleResult} -->
		<property name="incomeList"			type="Array"		/>  <!-- Array of RewardComponent Entity IDs -->
	</component>

	<component name="ShipAcesCellHistory">
		<property name="shipType"			type="String" sync="false"/>
		<property name="nation"				type="String" sync="false"/>
		<property name="difficulty"			type="Integer"/>
		<property name="threshold"			type="Integer"/>
		<property name="battleProgress"		type="Integer"/>
		<property name="shipId"				type="Number"/>
		<property name="isBestResult"		type="Boolean" default="false"/>
	</component>

	<component name="AvatarSlotInfo">
		<property name="ownerId"		type="Integer" sync="false"/>
		<property name="slotType"		type="Integer" sync="false"/>
		<property name="title"			type="String"/>
		<property name="description"	type="String"/>
		<property name="iconPath"		type="String"/>
	</component>

	<component name="CapturedDropInfo">
		<property name="teamId"					type="Integer" pk="true"/>
		<property name="dropId"					type="String" pk="true"/>
		<property name="markerNameActive"		type="String"/>
		<property name="count"					type="Integer"/>
		<property name="maxBuffLevel"			type="Integer"/>
		<event	name="evCountChanged" />
	</component>

	<component name="CustomElementsVisibility">
		<property name="enabledElements"		type="Integer" />
		<property name="disabledElements"		type="Integer" />

		<event name="evChanged"/>
	</component>

	<component name="ShipCrossResearchInfo">
		<property 	name="shipsCrossResearchCostXP"	type="Integer"/>
		<property 	name="shipPathList"				type="Array" sync="false"/>

		<property 	name="researchPriceShipExp"					type="Integer"/>
		<property 	name="researchPriceFreeExp"					type="Integer"/>
		<property 	name="prevShipResearchedExp"				type="Integer"/>
		<property 	name="dependenciesResearchPriceInfo"		type="Dictionary"/>
		<property 	name="researchPriceInfo"					type="PriceInfoStruct"/>
		<property 	name="researchDeficitPriceInfo"				type="PriceInfoStruct"/>
		<property 	name="isFreeExpAvailable"					type="Boolean"/>
		<property 	name="isPrevShipResearched"					type="Boolean"/>
		<property 	name="isResearchPriceVisible"				type="Boolean"/>
		<property 	name="isFreeExpCost"						type="Boolean"/>
		<property 	name="isResearchDeficit"					type="Boolean"/>
		<property 	name="dependenciesResearchPriceVisible"		type="Boolean"/>
		<property 	name="isResearchPreviousShipLockVisible"	type="Boolean"/>
		<property 	name="isResearchAvailable"					type="Boolean"/>

		<event 		name="evChanged"/>
	</component>

	<component name="SavedResourcesAfterCrewFiring">
		<property name="profit"					type="Number"/>

		<event	name="evProfitChanged" />
	</component>

	<component name="GiftCounterComponent">
		<property name="canClaim"				type="Boolean" />
		<property name="totalBattleCount"		type="Integer" />
		<property name="currentBattleCount"		type="Integer" />
		<property name="rewardIndex"			type="Integer" />

		<event 		name="evChanged"/>
	</component>

	<component name="GiftLabelComponent">
		<property name="canClaim"				type="Boolean" />

		<event 		name="evChanged"/>
	</component>

	<component name="ScenarioMissionParticipant">
		<property	name="index"		type="Integer"/>
	</component>

	<component name="SpectatorState">
		<property name="state"	type="Integer"/>

		<event	name="evStateChanged"/>
	</component>

	<component name="UbUIStatisticsData">
		<property name="collector"			type="Integer"/>
		<property name="templates"			type="Dictionary"/>
	</component>


	<component name="BalancerInfo">
		<property name="playerShipId" 			type="Number"	/>
		<property name="isAddBots" 				type="Boolean"	/>
		<property name="maxWaitMin" 			type="Integer"	/>
		<property name="maxWaitSec" 			type="Integer"	/>
		<property name="mapId" 					type="Number"	/>
		<property name="scenario" 				type="String"	/>
		<property name="timeToWait" 			type="String"	/>
		<property name="playersTotal"			type="Integer"	/>
		<property name="playersInRange"			type="Integer"	/>
		<property name="destroyerNum" 			type="Integer"	/>
		<property name="carrierNum" 			type="Integer"	/>
		<property name="cruiserNum" 			type="Integer"	/>
		<property name="battleshipNum" 			type="Integer"	/>
		<property name="submarineNum" 			type="Integer"	/>
		<property name="isPreparingForBattle" 	type="Boolean"	/>

		<event	name="evTimeToWaitChanged"				/>
		<event	name="evPlayersTotalChanged"			/>
		<event	name="evPlayersInRangeChanged"			/>
		<event	name="evDestroyerNumChanged"			/>
		<event	name="evCarrierNumChanged"				/>
		<event	name="evCruiserNumChanged"				/>
		<event	name="evBattleshipNumChanged"			/>
		<event	name="evSubmarineNumChanged"			/>
		<event	name="evIsPreparingForBattleChanged"	/>
	</component>

	<component name="WinPointsRewardForDestroyingEnemyShip">
		<property name="sortIndex"		type="Integer" pk="true"/>
		<property name="shipType"		type="String"/>
		<property name="rewardPoints"	type="Integer"/>
	</component>

	<component name="WinPointsPenaltyForDestroyingAllyShip">
		<property name="sortIndex"		type="Integer" pk="true"/>
		<property name="shipType"		type="String"/>
		<property name="penaltyPoints"	type="Integer"/>
	</component>

	<component name="HoldingPointsMessage">
		<property name="sortIndex"			type="Integer" pk="true"/>
		<property name="controlPointType"	type="Integer"/>
		<property name="message"			type="String"/>
	</component>

	<component name="LicenseData">
		<property name="licenseText"	type="String"	lazy="true"/>

		<event name="evLicenseTextChanged"/>
	</component>

	<component name="RealmConstants">
		<property name="loginRestrict"						type="String"/>
		<property name="loginRestrictRegexp"				type="String"/>
		<property name="loginMaxLengthWgnr"					type="Integer"/>
		<property name="nicknameRestrict"					type="String"/>
		<property name="nicknameRestrictRegexp"				type="String"/>
		<property name="nicknameMaxLength"					type="Integer"/>
		<property name="birthdateRestrict"					type="String"/>
		<property name="birthdateRestrictRegexp"			type="String"/>
		<property name="passRestrict"						type="String"/>
		<property name="passRestrictRegexp"					type="String"/>
		<property name="passMinLengthWgnr"					type="Integer"/>
		<property name="passMaxLengthWgnr"					type="Integer"/>
		<property name="wowsLogo"							type="String"/>
		<property name="isShowShipTreeBg"					type="Boolean"/>
		<property name="isShowPlayersCountOnServer"			type="Boolean"/>
		<property name="currentRealm"						type="String"/>
		<property name="currentRegion"						type="String"/>
		<property name="isPremshopUIAvailable"				type="Boolean"/>
		<property name="isNewsUIAvailable"					type="Boolean"/>
		<property name="isInviteRefferalFriendUIAvailable"	type="Boolean"/>
		<property name="isMergedShopsRealm"					type="Boolean"/>
	</component>

	<component name="ExternalLogin">
		<property name="serviceName" type="String"/>
	</component>

	<component name="AccountCompletion">
		<property name="isAvailable" type="Boolean"/>
	</component>

	<component name="TimeZoneInfo">
		<property name="unixTime"		type="Number"/>
		<property name="timeZoneOffset"	type="Number"/>
		<property name="timeZoneName"	type="String"/>
	</component>

	<component	name="Airfield"	>
		<property	name="id"	type="Number"	pk="true"/>
		<property	name="name"	type="String"/>
	</component>

	<component name="BattlePass">
		<property	name="id"						type="Integer"/>
		<property	name="type"						type="Integer"/>
		<property	name="state"					type="Integer"/>
		<property	name="startTime"				type="Integer"/>
		<property	name="finishTime"				type="Integer"/>
		<property	name="totalPoints"				type="Integer"/>
		<property	name="allRewardsStack"			type="Integer" sync="false"/> <!-- entity id with stack of all battle pass rewards -->
		<property	name="previewRewardsStack"		type="Integer"/> <!-- entity id with last rewards stack -->
		<property	name="sseTag"					type="String"/>
		<property	name="bonusesHash"				type="String" sync="false"/>

		<property	name="isFirstLoginOfNewSeason"			type="Boolean" sync="false"/>
		<property	name="isOnboardingNeeded"				type="Boolean"/>
		<property	name="isEndSeasonOfferAvailable"		type="Boolean"/>
		<property	name="isStartSeasonReminderAvailable"	type="Boolean"/>
		<property	name="isEndSeasonReminderAvailable"		type="Boolean"/>

		<event		name="evChanged"/>
		<event		name="evBattlePassStateChanged"/>
		<event		name="evEndSeasonOfferAvailable"/>
		<event		name="evStartSeasonReminderAvailable"/>
		<event		name="evEndSeasonReminderAvailable"/>
	</component>

	<component name="DynamicDivisionMember">
		<property name="playerId"		type="Integer" pk="true"/>
		<property name="preBattleId"	type="Integer"/>

		<event name="evChanged"/>
	</component>

	<component name="Division">
		<property name="preBattleId"					type="Integer" pk="true"/>
		<property name="startBattleAvailable"			type="Boolean" sync="false"/>
		<property name="startDisableReason"				type="Integer" sync="false"/>
		<property name="locked"							type="Boolean"/>
		<property name="isReady"						type="Boolean"/>
		<property name="isEveryoneReady"				type="Boolean"/>
		<property name="windowState"					type="Integer"/>
		<property name="countdownType"					type="Integer" sync="false"/>
		<property name="timer"							type="Number"/>
		<property name="shipRestrictions"				type="Dictionary"/>
		<property name="levelGapExceed"					type="Boolean" sync="false"/>
		<property name="onlyMonoGroup"					type="Boolean" sync="false"/>
		<property name="levelGap"						type="Integer" sync="false"/>
		<property name="name"							type="String"/>
		<property name="inPortParticipantsCount"		type="Integer"/>
		<property name="ownerId"						type="Integer"/>
		<property name="creationTime"					type="Integer" sync="false"/>

		<event name="evLockedChanged"/>
		<event name="evIsReadyChanged"/>
		<event name="evIsEveryoneReadyChanged"/>
		<event name="evWindowStateChanged"/>
		<event name="evTimerChanged"/>
		<event name="evShipRestrictionsChanged"/>
		<event name="evNameChanged"/>
		<event name="evInPortParticipantsCountChanged"/>
		<event name="evOwnerIdChanged"/>
	</component>

	<component name="BattlePassAnimations">
		<property	name="animationSequence"	type="Array"/> <!-- animation events names -->
		<property	name="animatedLevels"		type="Array"/> <!-- levels to be animated -->

		<event		name="evChanged"/>
	</component>

	<component name="BattlePassLevel">
		<property	name="level"					type="Integer" pk="true"/>
		<property	name="pointsPerLevel"			type="Integer"/>
		<property	name="points"					type="Integer"/> <!-- actual points count -->
		<property	name="previousPoints"			type="Integer"/> <!-- previous points count -->

		<event		name="evChanged"/>
	</component>

	<component name="BattlePassReward">
		<property	name="level"					type="Integer" pk="true"/>
		<property	name="type"						type="Integer" pk="true"/>
		<property	name="row"						type="Integer" pk="true"/>
		<property	name="rewardId"					type="Number"/>
		<property	name="rewardState"				type="Integer"/>
		<property	name="featuredKey"				type="Integer" sync="false"/>

		<event		name="evRewardStateChanged"/>
	</component>

	<component name="BattlePassCurrentLevel"> <!-- level in progress -->
	</component>

	<component name="BattlePassPostProgressionLevel">
		<property	name="countCompleted"			type="Integer"/>

		<event		name="evChanged"/>
	</component>

	<component name="RewardsStack">
		<property 	name="rewards" type="Array"/> <!-- entity ids with component RewardSource -->

		<event		name="evChanged"/>
	</component>

	<component name="DivisionEntranceInfo">
		<property name="commentMaxChars"				type="Integer"/>
		<property name="isBanned"						type="Boolean"/>
		<property name="divisionStatus"					type="String"/>
		<property name="isDivisionAvailable"			type="Boolean"/>
		<property name="isSelfSeeker"					type="Boolean"/>
		<property name="commentStatus"					type="String"/>
		<property name="isSeekersListUpdateInProgress"	type="Boolean"/>

		<event name="evIsBannedChanged"/>
		<event name="evDivisionStatusChanged"/>
		<event name="evIsDivisionAvailableChanged"/>
		<event name="evIsSelfSeekerChanged"/>
		<event name="evCommentStatusChanged"/>
		<event name="evIsSeekersListUpdateInProgressChanged"/>
	</component>

	<component name="DivisionSeeker">
		<property name="accountId"		type="Integer" pk="true"/>
		<property name="seekerComment"	type="String"/>

		<event name="evSeekerCommentChanged"/>
	</component>

	<component name="MasterChanger">
		<property name="countBattles"			type="Integer"/>
		<property name="lastBattleTimestamp"	type="Number"/>

		<event name="evCountBattlesChanged"/>
		<event name="evLastBattleTimestampChanged"/>
	</component>

	<component name="AbuseStatus">
		<property name="reason" type="String" pk="true"/>
		<property name="status" type="Integer"/>

		<event name="evStatusChanged"/>
	</component>

	<component name="NewbieQuest">
		<property name="id"						type="Integer"			/>
		<property name="unlock"					type="Integer" pk="true"/>
		<property name="tier"					type="Integer"			/> <!-- account level -->
		<property name="isDone"					type="Boolean"			/>
		<property name="name"					type="String"			/>
		<property name="rewards"				type="Array"			/>
		<property name="rewardCategory"			type="String"			/> <!-- ref Sse.SSE_REWARD_CATEGORY.* -->

		<event name="evChanged"											/>
	</component>

	<component name="NewbieQuestsExpireTimer">
		<property name="expire"			type="Number"/> <!-- время исчезновения квестов, UNIXTIME-->
	</component>

	<component name="NewGuidingTip">
		<property	name="id"				type="Integer"	pk="true"	/>
		<property	name="targetID"			type="String"				/>
		<property	name="header"			type="String"				/>
		<property	name="desc"				type="String"				/>
		<property	name="isActive"			type="Boolean"				/>
		<event		name="evChanged"									/>
		<event		name="evTargetIDChanged"							/>
	</component>


	<component name="KeyTargetMarkerBattle"/>

	<component name="KeyTargetMarkerDock">
		<property name="value" type="Integer" pk="true"/>
		<property name="battleTypes" type="Array"/>
	</component>

	<component name="SysMessagePanel">
		<property name="isDragging" type="Boolean"/>
		<property name="panelHeight" type="Integer"/>

		<event name="evIsDraggingChanged"/>
		<event name="evPanelHeightChanged"/>
	</component>

	<component name="SysMessageCore">
		<!--	always comes with message from server	-->
		<property name="serverTimestamp"	type="Number"/>
		<property name="localTimestamp"		type="Number"/>
		<property name="contentEntitiesIds" type="Array"/>
		
		<!--	set on client	-->
		<property name="group"				type="Integer" sync="false"/>
		<property name="type"				type="Integer" sync="false"/>
		<property name="wasRead"			type="Boolean"/>
		<property name="eventName"			type="String"/>
		<property name="eventArgs"			type="Dictionary"/>
		
		<event name="evContentEntitiesIdsChanged"/>
		<event name="evWasReadChanged"/>
		<event name="evEventNameChanged"/>
		<event name="evEventArgsChanged"/>
	</component>

	<!-- markers components -->
	<component name="InformerSysMsgToBeRendered"/>
	<component name="NotificationSysMsgToBeRendered"/>
	<component name="EmergencySysMsgToBeRendered"/>
	<component name="wgncSysMsgToBeRendered"/>
	
	<component name="wgncTooltipState">
		<property name="isVisible"		type="Boolean"/>
		<event	name="evIsVisibleChanged"	/>
	</component>

	<component name="RenderedSysMsg">
		<property name="renderClassID"	type="Integer"/>
	</component>

	<component name="SysMessageGroup" sync="false">
		<property name="type"				type="Integer"	pk="true"/>
		<property name="group"				type="String"	pk="true"/>
	</component>
	
	<component name="SysMessageContentType">
		<property name="contentType"		type="Integer"/><!--ComponentClass id-->
	</component>

	<component name="SysMessageHeader">
		<property name="header"					type="String"/>
		<property name="subHeader"				type="String"/>
		<property name="unifiedStatus"			type="String"/>

		<property name="operation"				type="String"	sync="false"/>
		<property name="item"					type="String"	sync="false"/>
		<property name="source"					type="String"	sync="false"/>
		<property name="isHeaderAlreadyFormed"	type="Boolean"	sync="false"/>

		<event	name="evChanged"	/>
	</component>

	<component name="SysEmergencyMessageHeader">
		<property name="header"					type="String"/>
		<property name="subHeader"				type="String"/>
		<property name="unifiedStatus"			type="String"/>
	</component>

	<component name="SysMessageDescription">
		<property name="description"		type="String"/>
		<event	name="evDescriptionChanged"	/>
	</component>

	<component name="SysMessageHTMLDescription">
		<property name="description"		type="String"/>
		<event	name="evDescriptionChanged"	/>
	</component>
	
	<component name="SysMessageResourcesChanges">
		<property name="resourcesChanges"	type="PriceInfoStruct"/>
		<property name="title"				type="String"/>
		<event	name="evChanged"	/>
	</component>
	
	<component name="SysMessageShipInfo">
		<property name="shipId"				type="Number"/>
		<event	name="evShipIdChanged"	/>
	</component>
	<component name="SysMessageShipRangeInfo">
		<property name="startShipId"				type="Number"/>
		<property name="finishShipId"				type="Number"/>
		<event	name="evStartShipIdChanged"		/>
		<event	name="evFinishShipIdChanged"	/>
	</component>
		
	<component name="SysMessageShipInfoWithTitle">
		<property name="shipId"				type="Number"/>
		<property name="title"				type="String"/>
		<event	name="evShipIdChanged"	/>
		<event	name="evTitleChanged"	/>
	</component>

	<component name="SysMessageCounterInfo">
		<property name="counterInfo"		type="CounterLineInfoStruct"/>
		<event	name="evCountChanged"	/>
	</component>
	
	<component name="SysMessageDateInfo">
		<property name="timestamp"			type="Number"/>
		<property name="textLine"			type="String"/>
		<event	name="evTimestampChanged"	/>
	</component>

	<component name="SysMessageTimePeriodInfo">
		<property name="delta"				type="Number"/>
		<property name="textLine"			type="String"/>
	</component>

	<component name="SysMessageTimeLeftInfo">
		<property name="timestamp"			type="Number"/>
		<property name="textLine"			type="String"/>
		<property name="zeroTextLine"		type="String"/>
	</component>
	
	<component name="PostBattleSysMessage">
		<property name="arenaId"			type="Number"/>
		<property name="data"				type="Dictionary"	/>
		<event	name="evChanged"		/>
	</component>
	
	<component name="SysMessageCampaignInfo">
		<property name="campaignId"			type="Number"/>
	</component>
	
	<component name="SysMessageCampaignMissionInfo">
		<property name="missionId"			type="Number"/>
	</component>
	
	<component name="SysMessageCampaignTaskInfo">
		<property name="taskId"				type="Number"/>
	</component>
	
	<component name="SysMessageStatusLineInfo">
		<property name="unifiedStatus"		type="String"/>
		<property name="textLine"			type="String"/>
	</component>
	
	<component name="SysMessageButtons">
		<property name="buttons"			type="Array"/>
		<event	name="evButtonsChanged"		/>
	</component>
	
	<component name="SysMessageImage">
		<property name="url"			type="String"/>
		<event	name="evUrlChanged"		/>
	</component>
	
	<component name="WgncMessageIconWithText"/>
	
	<component name="WgncMessageTimeLeftInfo">
		<property name="timestamp"			type="Number"/>
		<property name="textLine"			type="String"/>
		<property name="zeroTextLine"		type="String"/>
		<property name="unifiedStatus"		type="String"/>
		<event	name="evChanged"/>
	</component>
	
	<component name="InformerMessage">
		<property name="data"				type="Dictionary"	/>
	</component>
	

	<component name="ChatRestrictions">
		<property	name="isBlockDockAndClanChat"		type="Boolean"/>
		<property	name="isBlockBattleChat"			type="Boolean"/>
		<property	name="isBlockPrebattleChat"			type="Boolean"/>
		<property	name="isBlockDescriptionTextFields"	type="Boolean"/>

		<event		name="evBlockDockAndClanChatChanged"/>
		<event		name="evBlockBattleChatChanged"/>
		<event		name="evBlockPrebattleChatChanged"/>
		<event		name="evBlockDescriptionTextFieldsChanged"/>
	</component>

	<component name="ShipsCarouselScrolling">
		<property name="shipIndex" type="Integer"/>
		<property name="rowsCount" type="Integer"/>
		<property name="isFilteredShipsHidden" type="Boolean"/>

		<event	name="evRowsCountChanged"/>
		<event	name="evIsFilteredShipsHiddenChanged"/>
		<event	name="evScrollToSelected"/>
	</component>
	
	<!-- DO NOT REMOVE!!!!!! this component for battle mods -->
	<component name="Mods_ShipParamsInBattle">
		<property	name="avatarId"		type="Integer"	pk="true"	/>
		<property	name="teamId"		type="Integer"				/>
		<property	name="isBot"		type="Boolean"				/>
		<property	name="levelRome"	type="String"				/>
		<property	name="shipTTX"		type="ShipTTX"				/>
	</component>

	<component name="ContinuousBattleEnter">
		<property name="showGuidingTip"		type="Boolean"	sync="false"/>
		<property name="warningReasons"		type="Integer"	/>  <!-- Bitmask that defines which modal windows must be displayed -->
		<property name="deficitList"		type="Array"	/>  <!-- Expired ship expendables, Array of RewardComponent entity IDs -->

		<event name="evChanged"/>
	</component>

	<component name="ShipUniqueFeatures">
		<property name="featuresList"			type="Array"/>  <!-- Array of ships.SHIP_UNIQUE_FEATURES <Int> -->
		<property name="availableBattles"		type="Array"/>  <!-- Array of common.SHIP_UNIQUE_FEATURES <String> -->
		<property name="expCollectingShipID"	type="Number"/>

		<event name="evChanged"/>
	</component>

	<component name="StrategicActionsEvent">
		<property name="id"							type="String"	sync="false"/>
		<property name="startTime"					type="Integer"	/>	<!-- UNIXTIME -->
		<property name="finishTime"					type="Integer"	/>	<!-- UNIXTIME -->
		<property name="state"						type="Integer"	/>	<!-- Event state according to STRATEGIC_ACTIONS_EVENT_STATE -->
		<property name="selectedTerritory"			type="Integer"	/>	<!-- Selected StrategicActionsTerritory entity ID -->
		<property name="observedTerritory"			type="Integer"	/>	<!-- Observed StrategicActionsTerritory entity ID -->

		<property name="thresholds"					type="Array"	/>	<!-- Array of completed territories thresholds -->
		<property name="rewards"					type="Array"	/>  <!-- Array of arrays of RewardComponent entity IDs for each threshold -->
		<property name="rewardsCategories"			type="Array"	/>  <!-- Array of SC.Sse.SSE_REWARD_CATEGORY for each threshold -->
		<property name="doneTerritories"			type="Integer"	/>
		<property name="activeThresholdIndex"		type="Integer"	/>
		<property name="isAnyRewardClaim"			type="Boolean"	/>	<!-- true, if we have any reward to claim (both global progress and territory progress) -->

		<property name="isFirstLoginOfNewSeason"	type="Boolean"/>
		<property name="isOnboardingSeen"			type="Boolean"/>	<!-- need to show the strategic actions onboarding screen -->
		<property name="isFirstEventBattleDone"		type="Boolean"/>

		<event name="evStateChanged"/>
		<event name="evObservedTerritoryChanged"/>
		<event name="evIsOnboardingSeenChanged"/>
		<event name="evIsFirstEventBattleDoneChanged"/>
		<event name="evChanged"/>
	</component>

	<component name="StrategicActionsTerritory">
		<property name="id"					type="String"	pk="true"/>
		<property name="level"				type="Integer"	/>  <!-- SC.Common.STRATEGIC_ACTIONS_TERRITORY_LEVEL -->
		<property name="status"				type="Integer"	/>  <!-- SC.Common.STRATEGIC_ACTIONS_TERRITORY_STATUS -->
		<property name="previousProgress"	type="Integer"	/>
		<property name="progress"			type="Integer"	/>
		<property name="maxProgress"		type="Integer"	/>
		<property name="rewards"			type="Array"	/>  <!-- Array of RewardComponent entity IDs -->
		<property name="rewardCategory"		type="String"	/>  <!-- SC.Sse.SSE_REWARD_CATEGORY -->
		<property name="restrictionsEntity"	type="Integer"	/>  <!-- preconditions entity id -->
		<property name="currentTaskIndex"	type="Integer"	/>

		<event name="evChanged"/>
	</component>

	<component name="StrategicActionsTerritoryMarker">
		<property name="id"					type="String"	pk="true"/>  <!-- MapRegion guid -->

		<event name="evChanged"/>
	</component>

	<component name="StrategicActionsMessage">
		<property name="id"					type="String"	pk="true"/>
	</component>

	<component name="StrategicActionsTask">
		<property name="territoryID"		type="String"	pk="true"/>
		<property name="taskIndex"			type="Integer"	pk="true"/>
		<property name="conditionType"		type="Integer"	/>  <!-- SC.Common.CONDITION_TYPES -->
		<property name="conditionsSets"		type="Array"	/>  <!-- Array of SseConditions entity IDs. Each entity holds only one countable condition. Has one element (condition set) for SINGLE, THRESHOLD conditions. -->
		<property name="thresholds"			type="Array"	/>  <!-- Array of condition progress thresholds. Is empty for Single, OR, AND conditions  -->
		<property name="points"				type="Array"	/>  <!-- Array of points matching condition progress thresholds. Has one element for Single, OR, AND conditions  -->

		<event name="evChanged"/>
	</component>

	<component name="StrategicActionsTaskPersistent">
		<property name="arenaId"				type="Number" 	pk="true"/>
		<property name="territoryID"			type="String"	/>
		<property name="taskIndex"				type="Integer"	/>
		<property name="conditionType"			type="Integer"	/>  <!-- SC.Common.CONDITION_TYPES -->
		<property name="conditionsSets"			type="Array"	/>  <!-- Array of SseConditions entity IDs. Each entity holds only one countable condition. Has one element (condition set) for SINGLE, THRESHOLD conditions. -->
		<property name="thresholds"				type="Array"	/>  <!-- Array of condition progress thresholds. Is empty for Single, OR, AND conditions  -->
		<property name="rewards"				type="Array"	/>  <!-- Array of RewardComponent entities ID -->
		<property name="doneConditionSetIndex"	type="Integer" 	/>	<!-- Index of completed condition set. Used for OR tasks, otherwise 0 -->
	</component>

	<component name="PerformanceInfo">
		<property name="fps"				type="Integer" />
		<property name="ping"				type="Integer" />
		<property name="replayFps"			type="Integer" />
		<property name="replayPing"			type="Integer" />

		<event name="evChanged"/>
	</component>

	<component name="TeamScore">
		<property name="teamId"					type="Integer"	pk="true"/>
		<property name="score"					type="Integer"/>

		<event name="evScoreChanged"/>
		<event name="evGainLocked"/>
	</component>

	<component name="SpecialAbilityUnlocker">
		<property name="abilityID" type="Integer" pk="true"/>
		<property name="shipType" type="String" pk="true"/>
		<property name="abilityName" type="String" />

		<event name="evChanged"/>
	</component>

	<component name="AdjustedShipConfig">
		<property name="config" type="Dictionary" default="null" sync="false"/>
		<event name="evChanged"/>
	</component>

	<component name="DivisionAbilityRestriction">
		<property name="abilityId" type="Integer" pk="true"/>
		<property name="name" type="String"/>
		<property name="maxCount" type="Integer"/>
		<property name="curCount" type="Integer"/>

		<event name="evChanged"/>
		<event name="evCurCountChanged"/>
	</component>

	<component name="BattleScreenplayMessage">
		<property name="text" type="String"/>
		<property name="fadingOut" type="Boolean" default="false"/>
		<property name="messageType" type="Integer" default="0" />

		<event name="evChanged"/>
		<event name="evFadingOutChanged"/>
	</component>

	<component name="BattleCard">
		<property name="gameParamId"						type="Number" pk="true"/>
		<property name="name"								type="String"/>
		<property name="currentLevel"						type="Integer"/>
		<property name="isInstalled"						type="Boolean" default="false"/>
		<property name="isAutoPicked"						type="Boolean" default="false"/>
		<property name="isActive"							type="Boolean"/>
		<property name="isActiveInEvent"					type="Boolean"/>
		<property name="cardType"							type="String"/>
		<property name="slot"								type="Integer"/>
		<property name="activePersonalCardBonusEntityID"	type="Integer"/>
		<property name="activeCommonCardBonusEntityID"		type="Integer"/>
		<property name="targetEntities"						type="Array" contains="Integer"/>
		
		<event name="evChanged"/>
	</component>

	<component name="BattleCardBonus">
		<property name="name"				type="String" pk="true" />
		<property name="bonusesByLevel"		type="Array"  contains="AttributesStruct"/>
		<event name="evChanged"/>
	</component>

<!-- Battle Loading-Started card installing timeout holder -->
	<component name="BattleCardSelector">
		<property name="isAvailable"		type="Boolean"/>
		<property name="maxCards"			type="Integer"/>
		<event name="evIsAvailableChanged"/>
		<event name="evMaxCardsChanged"/>
	</component>


	<component name="ProgressionLevel">
		<property name="level"					type="Integer" />
		<property name="points"					type="Integer" />
	</component>

	<component name="ProgressionLevelProgress">
		<property name="currentPoints"			type="Integer" />
		<property name="previousPoints"			type="Integer" />

		<event		name="evChanged"/>
	</component>

	<component name="PostProgressionLevel"/>

	<component name="EventHubSeason">
		<property	name="id"					type="Integer"/>
		<property	name="startTime"			type="Integer"/>
		<property	name="finishTime"			type="Integer"/>
		<property	name="isOnboardingNeeded"	type="Boolean"/>
		<property	name="serverPhaseIndex"		type="Integer" sync="false"/>

		<event		name="evChanged"/>
	</component>

	<component name="EventHubPhase">
		<property	name="index"					type="Integer" pk="true"/>
		<property	name="startTime"				type="Integer"/>
		<property	name="battleTypeGameParamId"	type="Number"/>
		<property	name="battleTypeIndex"			type="String"/>
	</component>

	<component name="EventHubLevel">
		<property	name="phaseIndex"			type="Integer"/>
	</component>

	<component name="EventHubSpotlightLevel"/>

	<component name="EventHubCurrentLevel"/>

	<component name="ProgressionAnimations">
		<property	name="animationSequence"	type="Array" contains="String"/> <!-- animation events names -->
		<property	name="animatedLevels"		type="Array" contains="Integer"/> <!-- levels to be animated -->

		<event		name="evChanged"/>
	</component>

	<component name="EventHubPostBattle">
		<property	name="nextRewardsStackEntityID"			type="Integer"/>
		<property	name="pointsForNextLevel"				type="Integer"/>
		<property	name="cardsRewardsStackEntityID"		type="Integer"/>
		<property	name="otherRewardsStackEntityID"		type="Integer"/>
	</component>

	<!-- This component is for using in mods only -->
	<component name="Mods_DataComponent">
		<property name="id" type="String" pk="true"/>
		<property name="data" type="Dictionary"/>

		<event name="evDataChanged"/>
	</component>

</components>
