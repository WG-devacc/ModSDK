(def element ConsumableTooltip (_abilityEntityId:number, _noMouseInstructions:bool=false, _isAircarrierConsumable:bool=false, _hasAlternatives:bool=false, _isShowUB2Tooltip:bool=false) layout=true dispatch_size_change=true
	(scope
		(macro PULL_SHIP_ID)
		(var ownShipEntity:gfx = "$datahub.getPrimaryEntity(CC.ownShip, shipIdForModuleInset)")
		(var ownShipInfo:gfx = "ownShipEntity ? ownShipEntity.ship : null" (event "ownShipEntity.ship.evUpdate") (event "ownShipEntity.ship.evCurrentSkinChanged"))

		(var isShipLocked:bool = "ownShipInfo ? ownShipInfo.isLocked : false" (event "ownShipInfo.evUpdateLock"))
		(var isInFormation:bool = "ownShipInfo ? ownShipInfo.isInFormation : false" (event "ownShipInfo.evUpdateLock"))
		(var isOwned:bool = "ownShipEntity != null")

		(var abilityEntity:gfx = "$datahub.getEntity(_abilityEntityId)")
		(var abilityComponent:gfx = "abilityEntity ? abilityEntity.ability : null")

		(var name:str = "abilityComponent ? abilityComponent.name : ''" (event "abilityComponent.evNameChanged"))
		(var isInstalled:bool = "abilityComponent ? abilityComponent.isInstalled : false" (event "abilityComponent.evIsInstalledChanged"))

		(var attributesComponent:gfx = "abilityEntity ? abilityEntity.attributes : null")
		(var attributesNegative:array = "attributesComponent ? attributesComponent.negative : []"	(event "attributesComponent.evChanged"))
		(var attributesNeutral:array = "attributesComponent ? attributesComponent.neutral : []"		(event "attributesComponent.evChanged"))
		(var attributesPositive:array = "attributesComponent ? attributesComponent.positive : []"	(event "attributesComponent.evChanged"))

		(var slotId:str = "abilityComponent ? abilityComponent.slotId : 0")
		(var isSquadronAbility:bool = "abilityComponent ? abilityComponent.isSquadronAbility : false")
		(var toggle:bool = "abilityComponent ? abilityComponent.toggle : false")

		(var abilitiesBySlotCollection:gfx = "$datahub.getCollection(CC.ability).getChildByPath('shipAbilsBySlotId.' + slotId)")
		(var hasAlternatives:bool = "abilitiesBySlotCollection && abilitiesBySlotCollection.items.length > 1 && !isShipLocked && !isInFormation")

		(var subheaderText:str = "	isSquadronAbility	? 'IDS_AIRPLANE_CONSUMABLES'
														: 'IDS_CONSUMABLES'")

		(var descriptionText:str = "tr(toUpper('IDS_DOCK_CONSUME_DESCRIPTION_' + name))")
		(var airCarrierConsumabletext:str = "_isAircarrierConsumable ? 'IDS_HINT_RESTRICTION_AUTO_DAMAGE' : ''")

		(var isMountedVisible:bool = "isInstalled && isOwned")
		(var unifiedStatus:str = "isMountedVisible ? SC.Ui_styles.UNIFIED_STATUS.CHECK : SC.Ui_styles.UNIFIED_STATUS.DEFAULT")

		(var mouseInstruction:dict = "	_noMouseInstructions || isSquadronAbility || _isAircarrierConsumable	? null :
										isOwned && isInFormation												? {	unifiedStatus: SC.Ui_styles.UNIFIED_STATUS.ATTENTION,
																													text: 'IDS_SET_UNREADY_DIVISION_FIRST_TO_CHANGE_CONSUMABLES' } :
										isOwned && isShipLocked													? {	unifiedStatus: SC.Ui_styles.UNIFIED_STATUS.ATTENTION,
																													text: 'IDS_LEAVE_BATTLE_FIRST_TO_CHANGE_CONSUMABLES' } :
										isOwned && !isInstalled													? {	unifiedStatus: SC.Ui_styles.UNIFIED_STATUS.MOUSE_LEFT,
																													text: 'IDS_INSTALL' } :
										_hasAlternatives														? {	unifiedStatus: SC.Ui_styles.UNIFIED_STATUS.MOUSE_LEFT,
																													text: 'IDS_INSTRUCTION_OPEN_CONSUMABLES' }
																												: null")

		(var consumableIconUrl:str = "'url:../consumables/consumable_' + name + '.png'")
		(var consumableHeaderText:str = "tr(toUpper('IDS_DOCK_CONSUME_TITLE_' + name))")
	)

	(macro PULL_TOOLTIP_UB2_STATE)
	(style (hitTest = false) (width = 340px))

	(macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND)
	(element TOOLTIP_SYSTEM_DEFAULT_CONTAINER
		(element TooltipSystemHeaderWithIconAndText
			_imageUrl =			"consumableIconUrl"
			_imageWidth =		"60"
			_imageHeight =		"60"
			_unifiedStatus =	"unifiedStatus"
			_headerText =		"consumableHeaderText"
			_subheaderText =	"subheaderText"
		)

		(block
			(style (width = "100%"))
			(controller $Instance renderer='TooltipSystemHorizontalDivider' (bind enabled "isMountedVisible"))
		)

		(block
			(style (width = "100%"))
			(controller $Instance renderer='TooltipSystemStatusLine'
				(bind enabled "isMountedVisible")
				(args
					_unifiedStatus = "SC.Ui_styles.UNIFIED_STATUS.CHECK"
					_text = 'IDS_COMMON_MOUNTED'
				)
			)
		)

		(block
			(style (width = "100%"))
			(controller $Instance renderer='TooltipSystemHorizontalDivider' (bind enabled "_isAircarrierConsumable"))
		)

		(block
			(style (width = "100%"))
			(controller $Instance renderer='TooltipSystemStatusLine'
				(bind enabled "_isAircarrierConsumable")
				(args
					_unifiedStatus = "SC.Ui_styles.UNIFIED_STATUS.INFO"
					_text = "airCarrierConsumabletext"
				)
			)
		)

		(element TooltipSystemHorizontalDivider)

		(element TooltipSystemDescriptionText
			_descriptionText = "descriptionText"
		)

		(block
			(style (width = "100%"))
			(controller $Instance renderer='TooltipSystemHorizontalDivider' (bind enabled "toggle"))
		)

		(block
			(style (width = "100%"))
			(controller $Instance renderer='TooltipSystemDescriptionText'
				(bind enabled "toggle")
				(args
					_descriptionText = 'IDS_DOCK_CONSUME_DESCRIPTION_BUFFSSHIFTS'
				)
			)
		)

		(element TooltipSystemHorizontalDivider)

		(element TooltipSystemParamsModifiersList
			_attributesPositive =	"attributesPositive"
			_attributesNeutral =	"attributesNeutral"
			_attributesNegative =	"attributesNegative"
		)

		(block
			(style (width = "100%"))
			(controller $Instance renderer='TooltipSystemHorizontalDivider' (bind enabled "mouseInstruction"))
		)

		(block
			(style (width = "100%"))
			(controller $Instance renderer='TooltipSystemStatusLine'
				(bind enabled "mouseInstruction")
				(args
					_unifiedStatus = "mouseInstruction.unifiedStatus"
					_text = "mouseInstruction.text"
				)
			)
		)
	)
)