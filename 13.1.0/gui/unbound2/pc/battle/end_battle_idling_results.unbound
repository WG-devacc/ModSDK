
(def constant RESULT_ANIMATION_NAME {
	"SC.Battle.BATTLE_RESULT.DEFEAT":	'lose',
	"SC.Battle.BATTLE_RESULT.VICTORY":	'win',
	"SC.Battle.BATTLE_RESULT.DRAW":		'draw'
})

(def constant RESULT_TEXT_IDS {
	"SC.Battle.BATTLE_RESULT.DEFEAT":	'IDS_DEFEAT',
	"SC.Battle.BATTLE_RESULT.VICTORY":	'IDS_VICTORY',
	"SC.Battle.BATTLE_RESULT.DRAW":		'IDS_DRAW'
})

(def constant RESULT_TEXT_COLOR {
	"SC.Battle.BATTLE_RESULT.DEFEAT":	0xFFB5A6,
	"SC.Battle.BATTLE_RESULT.VICTORY":	0x99FFD6,
	"SC.Battle.BATTLE_RESULT.DRAW":		0xE1E7F5
})


(def element EndBattleIdlingResults () layout=true
	(scope
		(macro IS_SPECTATOR_MODE)
		(var avatar:gfx = "$datahub.getSingleEntity(CC.playerAvatar)")
		(var isPlayer:bool = "avatar != null")
		(var isReallySpectator:bool = "!isPlayer && isSpectator")
		(var battleStateComponent:gfx = "$datahub.getSingleEntity(CC.battleState).battleState")
		(var resultId:number = "battleStateComponent ? battleStateComponent.resultId : -1" (event "battleStateComponent.evBattleResultsChanged"))
		(var winnerTeamId:number = "battleStateComponent ? battleStateComponent.winnerTeamId : -1" (event "battleStateComponent.evBattleResultsChanged"))
		(var winnerTeamText:str = "winnerTeamId == -1 ? 'IDS_DRAW' : ('IDS_THE_WINNER_TEAM_IS_' + winnerTeamId)")

		(var resultAnimName:str = "isReallySpectator ? RESULT_ANIMATION_NAME[SC.Battle.BATTLE_RESULT.DRAW] : RESULT_ANIMATION_NAME[resultId]")
		(var resultText:str = "isReallySpectator ? toUpper(tr(winnerTeamText)) : toUpper(tr(RESULT_TEXT_IDS[resultId]))")
		(var resultColorText:number = "isReallySpectator ? RESULT_TEXT_COLOR[SC.Battle.BATTLE_RESULT.DRAW] : RESULT_TEXT_COLOR[resultId]")

		
		

		(event evAddedToStage)
	)

	(dispatch evAddedToStage on='addedToStage')
	(class $FullsizeAbsolute)

	(style
		(bind backgroundImage "'url:../animations/spine/end_of_battle/' + resultAnimName + '.skel'")
		(backgroundSize = "cover")
		(height = 400)
		(hitTest = "false")
	)

	(block
		(class $MiddleAlignedAbsolutely)
		(style (top = "206") (pivotX=50%) (pivotY=50%))

		(controller $Animation
			(bindcall play
				from="{scaleX: 2, scaleY: 2}"
				to="{scaleX: 1, scaleY: 1}"
				duration=0.35
				easing="Easing.quint_out"
				action="kill"
				(event "evAddedToStage")
			)
		)
		(controller $Animation
			(bindcall play
				from="{alpha:0}"
				to="{alpha:1}"
				duration=0.65
				easing="Easing.quint_out"
				action="kill"
				(event "evAddedToStage")
			)
		)
		(tf
			(class $TextDefaultBold64NMWithoutShadow)
			(style (bind textColor "resultColorText"))
			(bind text "resultText")
		)
	)

	
	
	

	
	
	
	
	
)