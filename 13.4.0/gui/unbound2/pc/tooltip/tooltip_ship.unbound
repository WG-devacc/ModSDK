(def constant TOOLTIP_SHIP_MAX_WIDTH 300)
(def constant SHIP_INFO_TOOLTIP_MAX_WIDTH 364)
(def constant SHIP_INFO_TOOLTIP_MAX_WIDTH_CV 432)
(def constant SHIP_INFO_HIGH_RES_HEIGHT_VALUE 800)
(def constant CONSUMABLE_ICON_SIZE_LARGE 60)
(def constant CONSUMABLE_ICON_SIZE_SMALL 48)

(def css $ShipInfoIconWrapper ()
	(flow = "tile_horizontal")
	(width = 100%)
	(gap = "S")
)

(def element ShipExtendedTooltip (_shipId:number, _inRewards:bool = false) layout=true dispatch_size_change=true
	(scope
		(var inRewards:bool = "_inRewards") 
		(var _rewardReasons:dict = {}) 
		(var _isPRMP:bool = false) 
		(var inSideCompare:bool = false)


		(var ownShipEntity:gfx =	"$datahub.getPrimaryEntity(CC.ownShip, _shipId)")
		(macro PULL_USI "ownShipEntity")
		
		(var ownShipInfo:gfx =		"ownShipEntity ? ownShipEntity.ownShip : null" (event "ownShipEntity.ship.evCurrentSkinChanged"))
		(var isOwned:bool =			"ownShipEntity != null")

		(var isLocked:bool =		"ownShipInfo ? ownShipInfo.isLocked : false"		(event "ownShipInfo.evUpdateLock"))
		(var isNeedRepair:bool =	"ownShipInfo ? ownShipInfo.isNeedRepair : false"	(event "ownShipInfo.evUpdateDockState"))
		(var isNeedShell:bool =		"ownShipInfo ? ownShipInfo.isNeedShell : false"		(event "ownShipInfo.evUpdateDockState"))
		(var isNeedService:bool =	"isNeedRepair || isNeedShell")
		
		(var isInFormation:bool =	"ownShipInfo ? ownShipInfo.isInFormation : false"	(event "ownShipInfo.evUpdateLock"))
		(var exp:number =			"ownShipInfo ? ownShipInfo.exp : 0"					(event "ownShipInfo.evUpdateConfig"))

		(var shipEntity:gfx =		"$datahub.getPrimaryEntity(CC.ship, _shipId)")
		(var shipInfo:gfx =			"shipEntity ? shipEntity.ship : null"	(event "shipEntity.ship.evUpdate") (event "shipEntity.ship.evCurrentSkinChanged"))
		(var isEarlyAccess:bool =	"shipInfo.group == SC.Ships.SHIP_GROUPS.EARLY_ACCESS")

		
		(var showStats:bool = "!(shipInfo.isEventLike) || isOwned")
		(var showLabelComingSoon:bool = "shipInfo.group == SC.Ships.SHIP_GROUPS.DEMO_WITHOUT_STATS || shipInfo.group == SC.Ships.SHIP_GROUPS.DEMO_WITHOUT_STATS_PREM")
		(var isEventLike:bool = "shipInfo.isEventLike" )
		
		
		(var shipExplorePrice:number = 0) 
		(var shipBuyPrice:number = 0) 

		(var hasWarning:bool = "isNeedService || (isLocked && !isInFormation)")
	)
	(style (width = "TOOLTIP_SHIP_MAX_WIDTH"))
	
	(macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND)
	
	(element ShipInfoTabHeader
		_shipId = "_shipId"
		_isNotMyShip = false
		_inSideCompare = "inSideCompare"

		(style (width = 100%))
	)
	(block
		(class $InfoBlockIndent)
		(style
			(width = 100%) 
			(align = "center")
			(paddingBottom = 0px)
		)
		
		
		(block
			(style
				(width = 214px)
				(height = 126px)
				(marginTop = "-LS")
				(marginBottom = -20px)
				(bind backgroundImage "'url:' + shipInfo.pathPreview")
			)
		)
		(block
			(bind visible "!inSideCompare")
			(style
				(width = 100%)
			)
			(element CurrentXPMedium _exp="exp" _label='IDS_SHIP_EXPERIENCE'
				(style
					(marginBottom = "S")
				)
			)
			

















		)
	)	

	
	(block
		(bind visible "isEarlyAccess")
		(style (width = 100%))
		(element HorizontalDivider)

		(block 
		(style (width = 100%) (marginTop = 8px) (marginBottom = 8px) (marginLeft = 12px))
			(controller $Instance renderer='StatusLine'
				(bind enabled "isEarlyAccess")
				(args 
					_unifiedStatus = "SC.Ui_styles.UNIFIED_STATUS.EARLY_ACCESS"
					_text = 'IDS_EARLY_ACCESS_STATUS'
					_width = 100%
				)
			) 
		)
	)
	
	
	(block
		(bind visible "!inSideCompare")
		(style (width = 100%))
		(element HorizontalDivider)
		
		(block
			(class $Fullsize)
			(class $PxHorizontalCorrection)
			(style
				(position = "absolute") 
				(paddingTop = 3px)
				(paddingBottom = -2px)
			)
			(mc inner_panel
				(class $Fullsize)
			)
		)
		
		(element ShipDescription
			_shipNameIDS="shipInfo.nameIDS"
			_needShowProjectYear="shipInfo.needShowProjectYear"
			_isPaperShip="shipInfo.isPaperShip"
			_peculiarity="shipInfo.peculiarity"
		)
	)

	(block
		(style (width = 100%))
		(controller $Instance renderer='ShipExtendedTooltipShowStats'
			(bind enabled "showStats")
			(args
				_inSideCompare = "inSideCompare"
			)
		)
	)
	
	(block
		(style (width = 100%) )
		(controller $Instance renderer='LabelComingSoon'
			(bind enabled "showLabelComingSoon")
			(args
				_showTestSampleLabel = "showStats"
			)
		)
	)
		











	(block
		(style
			(width = 100%)
		)
		(controller $Instance renderer='InstructionWarning'
			(args
				_instructionText = "isNeedService ? 'IDS_SHIP_NEEDS_SERVICE_MESSAGE' : isLocked && !isInFormation ? 'IDS_SHIP_IN_BATTLE_MESSAGE' : 0"
				_maxWidth = "isNeedService ? 280 : isLocked && !isInFormation ? 280 : 0"
			)
			(exprs
				(class $InfoBlockIndent)
			)
			(bind enabled "hasWarning")
		)
	)
)

(def element ShipExtendedTooltipShowStats (_inSideCompare:bool = false) layout=true
	(scope
		(var comparison:gfx = "$datahub.getSingleEntity(CC.comparison).comparison")
		(var tooltipTTX:gfx = "comparison ? comparison.tooltipTTX : null" (event "comparison.evTooltipTTXChanged"))
	)
	(style
		(width = 100%)
		(bind paddingTop "_inSideCompare ? 18 : 0")
		(paddingLeft = 1)
		(paddingRight = 1)
		(paddingBottom = 1)
	)
	(controller $Instance renderer='ShipTTXSimple'
		(bind enabled "tooltipTTX")
		(args _shipTTX = "tooltipTTX")
	)
)







(def element ShipInfoTooltipHolder (_playerId:number, _parentWidth:number, _parentHeight:number, _isEnemy:bool)
	(scope
		(event evHideInfotip)
		(event evSubMenuOpen)

		(var infoEntity:gfx = "$datahub.getPrimaryEntity(CC.shipBattleInfo, _playerId)" (event "infoEntity.shipBattleInfo.evChanged"))
		(var playerEntity:gfx = "$datahub.getPrimaryEntity(CC.avatar, _playerId)")
		(var isBot:bool = "playerEntity ? playerEntity.avatar.isBot : false")
		(var isPlayer:bool = "playerEntity.relation.value == SC.Battle.PLAYER_RELATION.SELF")

		(var selfPlayer:gfx = "$datahub.getSingleEntity(CC.accountSelf)")
		(var isRealInfo:bool = "infoEntity ? infoEntity.shipBattleInfo.isRealParams : false" (event "infoEntity.shipBattleInfo.evChanged"))

		(var gameStatsCmdEntity:gfx = "$datahub.getPrimaryEntity(CC.commandMappingCommandName, 'CMD_GAME_STATS')")
		(var isGameStatsVisible:bool = "gameStatsCmdEntity.commandMappingCommand.isDown" (event "gameStatsCmdEntity.commandMappingCommand.evIsDownChanged"))
		(var infotipVisible:bool = false)

		(bind _isEnemy "playerEntity.relation.value == SC.Battle.PLAYER_RELATION.ENEMY")
	)

	(dispatch evHideInfotip (bind trigger "isGameStatsVisible"))

	(dispatch evSubMenuOpen args="{'isOpen': infotipVisible}" dir="EventDirection.UP" (bind trigger "infotipVisible"))

	(style
		(position = "absolute")
		(width = "_parentWidth")
		(height = "_parentHeight")
		(backgroundColor = 0x01000000)
	)

	(controller $Tooltip
		(enabled = "!infotipVisible")
		(renderer = 'ShipInfoTooltip')
		(args
			_infoEntity = "infoEntity"
			_playerEntity = "playerEntity"
		)
		(updateCachedBindings = true)
		(macro DEFAULT_TOOLTIP_BEHAVIOUR "0")
		(offset = {	x: 20, y: 20 })
		(screenBoundsOffset = 10)
		(priority = 0)
		(align = "right|middle")
		(position = "trackMouse")

		(macro STATS_LOG_TOOLTIP_DURATION "_isEnemy ? SC.Common.SHIPINFO_STATISTICS.TOOLTIP_ENEMY : SC.Common.SHIPINFO_STATISTICS.TOOLTIP_ALLY")
	)

	(controller $Tooltip 
		(renderer = 'ShipInfoInfotip')
		(args
			_infoEntity = "infoEntity"
			_playerEntity = "playerEntity"
		)
		(updateCachedBindings = true)

		(bindcall show animation={duration:0.1, easing:"Easing.cubic_in", from:{alpha:1}, to:{alpha:1}} on='leftClick')
		(bindcall hide animation={duration:0.1, easing:"Easing.cubic_out", from:{alpha:1}, to:{alpha:0}} on='evClickOutside' (event "evHideInfotip"))

		(priority = 1)
		(align = "_isEnemy ? left|middle : right|middle")
		(position = "borderNoTrack")
		(offset = {	x:10, y: 0})
		(screenBoundsOffset = 10)
		(bind infotipVisible "true" init=false on='evStartShow')
		(bind infotipVisible "false" init=false on='evStartHide')

		(macro STATS_LOG_TOOLTIP_DURATION "_isEnemy ? SC.Common.SHIPINFO_STATISTICS.INFOTIP_ENEMY : SC.Common.SHIPINFO_STATISTICS.INFOTIP_ALLY")
	)

	(controller $Tooltip
		(renderer = 'ContextMenuPlayer')
		(args
			_playerEntity = "playerEntity"
			_selfPlayer = "selfPlayer"
		)
		(bind enabled "!isPlayer")
		(cache = false)
		(macro DEFAULT_MENU_BEHAVIOUR "evHideInfotip" "1")
		(bind infotipVisible "true" init=false on='evStartShow')
		(bind infotipVisible "false" init=false on='evStartHide')
	)
)

(def macro SHIP_INFO_MAIN_SCOPE ()
	(var infoComponent:gfx = "_infoEntity ? _infoEntity.shipBattleInfo : null" (event "_infoEntity.shipBattleInfo.evChanged"))
	(var infoShipId:gfx = "infoComponent ? infoComponent.shipId : null")
	(var shipTTX:gfx = "infoComponent ? infoComponent.shipTTX : null" (event "_infoEntity.shipBattleInfo.evChanged"))
	(var condensedTTX:gfx = "infoComponent ? infoComponent.condensedTTX : null" (event "_infoEntity.shipBattleInfo.evChanged"))
	(var armaments:gfx = "infoComponent.armaments" (event "_infoEntity.shipBattleInfo.evChanged"))
	(var mainConsumables:gfx = "infoComponent.mainConsumables" (event "_infoEntity.shipBattleInfo.evChanged"))
	(var altConsumables:gfx = "infoComponent.altConsumables" (event "_infoEntity.shipBattleInfo.evChanged"))
	(var squadronConsumables:gfx = "infoComponent.squadronConsumables" (event "_infoEntity.shipBattleInfo.evChanged"))
	(var altFireMode:gfx = "infoComponent.altFireMode" (event "_infoEntity.shipBattleInfo.evChanged"))
	(var rageFireMode:gfx = "infoComponent.rageFireMode" (event "_infoEntity.shipBattleInfo.evChanged"))
	(var isRealInfo:bool = "infoComponent.isRealParams" (event "_infoEntity.shipBattleInfo.evChanged"))
	(var isEnemy:bool = "_playerEntity.relation.value == SC.Battle.PLAYER_RELATION.ENEMY")
	(var isPlayer:bool = "_playerEntity.relation.value == SC.Battle.PLAYER_RELATION.SELF")

	(var hasSquadrons:bool = "shipTTX.squadrons != null")
	(var isWide:bool = "hasSquadrons && armaments.length > 5")
	(var isCV:bool = "shipTTX.subtype == ShipTypes.AIRCARRIER")

	(var stageComponent:gfx = "$datahub.getSingleComponent(CC.stage)")
	(var stageHeight:number = "stageComponent.height" (event "stageComponent.evStageSizeChanged"))
	(var isHighResolution:bool = "stageHeight > SHIP_INFO_HIGH_RES_HEIGHT_VALUE" (event "stageComponent.evStageSizeChanged"))
	(var finalWidth:number = "isHighResolution	? isWide	? SHIP_INFO_TOOLTIP_MAX_WIDTH_CV 
															: SHIP_INFO_TOOLTIP_MAX_WIDTH 
												: isWide	? SHIP_INFO_TOOLTIP_MAX_WIDTH_CV - 72
															: SHIP_INFO_TOOLTIP_MAX_WIDTH - 60")
	(var iconSize:number = "isHighResolution ? CONSUMABLE_ICON_SIZE_LARGE : CONSUMABLE_ICON_SIZE_SMALL" watch=true)

	(var rawKeyTargetValue:gfx = "_playerEntity.keyTargetMarkerBattle")
	(var isKeyTargetVisible:bool = "rawKeyTargetValue != null")
)







(def element ShipInfoTooltip (_infoEntity:gfx, _playerEntity:gfx, _iconSize:number, _finalWidth:number) layout=true
	(scope
		(macro SHIP_INFO_MAIN_SCOPE)
	)

	(style
		(bind width "finalWidth" (bind enabled "finalWidth"))
		(hitTest = false)
	)

	(macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND)
	(element TOOLTIP_SYSTEM_DEFAULT_CONTAINER
		
		(element TooltipSystemPlayerDogTagAndRelation 
			_playerEntity = "_playerEntity"
			_totalWidth = "SHIP_INFO_TOOLTIP_MAX_WIDTH"
		)
		(element TooltipSystemHorizontalDivider)
		
		
		(element ShipInlineStereotypeSimple
			_shipId = "infoShipId" _width = 100%
		)

		(element CloneShipDescription
			_cloneId = "infoComponent.cloneShipId"
		)

		(element TooltipSystemHorizontalDivider)

		(block 
			(style (width = 100%))
			(bind visible "isKeyTargetVisible")

			(element TooltipSystemStatusLine
							_text = "	isPlayer	?	'IDS_KEY_TARGET_SELF' :
										isEnemy		?	'IDS_KEY_TARGET'
													:	'IDS_KEY_TARGET_ALLY'"

							_unifiedStatus = "SC.Ui_styles.UNIFIED_STATUS.KEY_TARGET"
						)
			(element TooltipSystemHorizontalDivider)
		)

		(block
			(style (width = 100%))

			(bind visible "isEnemy")
			
			(element TooltipSystemStatusLine
				_text = 'IDS_SHIP_INFO_SHOWING_MAX_PARAMS'
				_unifiedStatus = "SC.Ui_styles.UNIFIED_STATUS.INFO"
			)

			(element TooltipSystemHorizontalDivider)
			
		)

		
		(element CondensedShipParams _condensedTTX = "condensedTTX")

		(element TooltipSystemHorizontalDivider)
		
		(block
			(style (width = 100%))

			(macro TOOLTIP_SYSTEM_INNER_PANEL_BACKGROUND)
			
			(element ShipInfoArmamentsSimple
				_title = 'IDS_SHIP_INFO_ARMAMENT'
				_weaponItems = "armaments"
				_iconSize = "iconSize"
				_altFireMode = "altFireMode"
				_rageModeData = "rageFireMode"
				(bind visible "armaments.length != 0")
			)

			(element TooltipSystemHorizontalDivider)

			
			(element ShipInfoConsumables
				_title = "altConsumables.length > 0 ? 'IDS_SHIP_INFO_MAIN_CONSUMABLES_OPTIONAL' : 'IDS_SHIP_INFO_MAIN_CONSUMABLES'"
				_items = "mainConsumables"
				_extraItems = "altConsumables"
				_iconSize = "iconSize"
				_isSimple = true
				(bind visible "mainConsumables.length != 0 || altConsumables.length != 0")
			)

			(element TooltipSystemHorizontalDivider)

			
			(controller $Instance renderer='ShipInfoSquadronAverageConsumable'
				(bind enabled "squadronConsumables.length != 0")
				(args
					_title = 'IDS_SHIP_INFO_SQUADRON_CONSUMABLES'
					_items = "squadronConsumables"
					_iconSize = "iconSize"
				)
			)

			
			(element StatusLine
				_unifiedStatus = "SC.Ui_styles.UNIFIED_STATUS.MOUSE_LEFT"
				_text = 'IDS_SHIP_INFO_OPEN_INFOTIP'
				_width = "finalWidth-L"
			)

			
			(block
				(style (width = 100%))
				(bind visible "!isPlayer")
				(element TooltipSystemHorizontalDivider)
				(element StatusLine
					_unifiedStatus = "SC.Ui_styles.UNIFIED_STATUS.MOUSE_RIGHT"
					_text = 'IDS_HINT_RIGHT_CLICK_FOR_CONTEXT_MENU'
					_width = "finalWidth-L"
				)
			)
		)
	)
)

(def element ShipInfoInfotip (_infoEntity:gfx, _playerEntity:gfx, _iconSize:number, _finalWidth:number) layout=true
	(scope
		(macro SHIP_INFO_MAIN_SCOPE)
	)

	(style
		(bind width "finalWidth" (bind enabled "finalWidth"))
		(backgroundColor = 0x01000000)
	)

	(macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND "true")

	(element TOOLTIP_SYSTEM_DEFAULT_CONTAINER
		
		(element TooltipSystemPlayerDogTagAndRelation 
			_playerEntity = "_playerEntity"
			_totalWidth = "SHIP_INFO_TOOLTIP_MAX_WIDTH"
		)

		
		(block
			(style
				(width = 100%)
				(backgroundColor = 0x01000000)
			)

			(element TooltipSystemHorizontalDivider)

			(element ShipInlineStereotypeSimple
				_shipId = "infoShipId"
				_width = 100%
			)

			(element CloneShipDescription
				_cloneId = "infoComponent.cloneShipId"
			)

			(block 
				(style (width = 100%))
				(bind visible "isKeyTargetVisible")

				(element TooltipSystemHorizontalDivider)
				(element TooltipSystemStatusLine
								_text = "	isPlayer	?	'IDS_KEY_TARGET_SELF' :
											isEnemy		?	'IDS_KEY_TARGET'
														:	'IDS_KEY_TARGET_ALLY'"

								_unifiedStatus = "SC.Ui_styles.UNIFIED_STATUS.KEY_TARGET"
							)
			)


			(controller $Tooltip
				(renderer = 'NamedTTXTooltip')
				(args
					_shipId = "infoShipId"
					_shipTTX = "shipTTX"
				)
				(macro DEFAULT_TOOLTIP_BEHAVIOUR "0")
				(offset = {	x: 20, y: 0})
				(screenBoundsOffset = 10)

				(macro STATS_LOG_TOOLTIP_DURATION "SC.Common.SHIPINFO_STATISTICS.INTEGRALS_OPEN")
			)
			(element TooltipSystemHorizontalDivider)
		)

		
		(element CondensedShipParams
				_condensedTTX = "condensedTTX"

			(controller $Tooltip
				(renderer = 'ShipParamsExplanationTooltip')
				(args
					_isEnemy = "isEnemy"
					_isRealInfo = "isRealInfo"
				)
				(macro DEFAULT_TOOLTIP_BEHAVIOUR "0")
				(offset = {	x: 20, y: 10})

				(macro STATS_LOG_TOOLTIP_DURATION "SC.Common.SHIPINFO_STATISTICS.PARAMS_OPEN")
			)
		)

		(element TooltipSystemHorizontalDivider)
		
		(block
			(style (width = 100%))

			(macro TOOLTIP_SYSTEM_INNER_PANEL_BACKGROUND)
			
			(element ShipInfoArmaments
				_title = 'IDS_SHIP_INFO_ARMAMENT'
				_items = "armaments"
				_iconSize = "iconSize"
				_shipTTX = "shipTTX"
				_altFireMode = "altFireMode"
				_rageModeData = "rageFireMode"
				_hasSquadrons = "hasSquadrons"
				(bind visible "armaments.length != 0")
			)

			(element TooltipSystemHorizontalDivider)

			
			(element ShipInfoConsumables
				_title = "altConsumables.length > 0 ? 'IDS_SHIP_INFO_MAIN_CONSUMABLES_OPTIONAL' : 'IDS_SHIP_INFO_MAIN_CONSUMABLES'"
				_items = "mainConsumables"
				_extraItems = "altConsumables"
				_iconSize = "iconSize"
				(bind visible "mainConsumables.length != 0 || altConsumables.length != 0")
			)
		)
	)
)


(def element NamedTTXTooltip (_shipTTX:gfx, _shipId:number)
	(macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND)
	(style
		(width = 100%)
	)

	(element TOOLTIP_SYSTEM_DEFAULT_CONTAINER
		(element ShipInlineStereotypeSimple _shipId = "_shipId")
	)

	(element ShipTTXBasic
		_shipTTX = "_shipTTX"
	)
)

(def element ShipParamsExplanationTooltip (_isEnemy: bool, _isRealInfo: bool)
	(style (width = 100%))

	(macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND)
	(element TOOLTIP_SYSTEM_DEFAULT_CONTAINER
		(element TooltipSystemStatusLine
			_text = "_isEnemy	? 'IDS_SHIP_INFO_SHOWING_MAX_PARAMS'
								: _isRealInfo	? 'IDS_SHIP_INFO_SHOWING_REAL_PARAMS'
												: 'IDS_SHIP_INFO_SHOWING_TEMP_PARAMS'"
		)
	)
)

(def element CondensedShipParams (_condensedTTX:gfx)
	(class $ParametersPanel)
	(element TOOLTIP_SYSTEM_PARAMS_WRAPPER
		(element TOOLTIP_SYSTEM_PARAMS_BLOCK
			(element ShipParameter_Number _zeroValueHidden = true _value = "_condensedTTX.health" _valueConfig = "VALUE_CONFIG.DEFAULT" _title = 'IDS_SHIP_PARAM_HEALTH')
			(element ShipParameter_Number _zeroValueHidden = true _value = "_condensedTTX.mainGunMaxDist" _valueConfig = "VALUE_CONFIG.KILOMETER" _title = 'IDS_SHIP_PARAM_ARTILLERY')
			(element ShipParameter_Number _zeroValueHidden = true _value = "_condensedTTX.pingerMaxDist" _valueConfig = "VALUE_CONFIG.KILOMETER" _title = 'IDS_SHIP_PARAM_PINGER')
			(element ShipParameter_Number _zeroValueHidden = true _value = "_condensedTTX.torpedoesMaxDist" _valueConfig = "VALUE_CONFIG.KILOMETER" _title = 'IDS_SHIP_PARAM_TORPEDY')
			(element ShipParameter_Number _zeroValueHidden = true _value = "_condensedTTX.airSupportMaxDist" _valueConfig = "VALUE_CONFIG.KILOMETER" _title = 'IDS_SHIP_PARAM_AIR_SUPPORT')
			(element ShipParameter_Number _zeroValueHidden = true _value = "_condensedTTX.atbaMaxDist" _valueConfig = "VALUE_CONFIG.KILOMETER" _title = 'IDS_SHIP_PARAM_ATBA')
			(element ShipParameter_Number _zeroValueHidden = true _value = "_condensedTTX.airDefenseMaxDist" _valueConfig = "VALUE_CONFIG.KILOMETER" _title = 'IDS_SHIP_PARAM_AIR_DEFENSE')
			(element ShipParameter_Number _zeroValueHidden = true _value = "_condensedTTX.battery" _valueConfig = "VALUE_CONFIG.SECONDS" _title = 'IDS_SHIP_PARAM_BATTERY_MAX_CAPACITY')
			(element ShipParameter_Number _zeroValueHidden = true _value = "_condensedTTX.mobility" _valueConfig = "VALUE_CONFIG.KNOT_FLOAT" _title = 'IDS_SHIP_PARAM_SPEED')
			(element ShipParameter_Number _zeroValueHidden = true _value = "_condensedTTX.visibility" _valueConfig = "VALUE_CONFIG.KILOMETER_NEGATIVE" _title = 'IDS_SHIP_PARAM_VISIBILITY_DIST_BY_SHIP')
		)
	)
)

(def element CloneShipDescription (_cloneId:number)
	(visible = "_cloneId != -1")
	(style
		(width = 100%)
		(flow = "horizontal")
		(marginTop = "SXS")
	)

	(tf
		(class = $TextDefaultNM)
		(style (marginRight = "S"))
		(alpha = "TA")
		(text = 'IDS_SHIP_INFO_HAS_CLONE_SHIP')
	)

	(element ShipInlineStereotypeSimple _shipId = "_cloneId")
)

(def element ShipInfoArmaments (_items:array, _shipTTX:gfx, _hasSquadrons:bool, _title:str='', _altFireMode:gfx=null, _rageModeData:gfx=null, _firstSelection:number = -1, _iconSize:number=60)
	(scope
		(event evSquadronItemClicked)
		(event evSelectionChanged)

		(var selectedArmament:number = -1)
		(bind selectedArmament "$event.index" init=false (event "evSquadronItemClicked"))
	)

	(dispatch evSelectionChanged args="{newSelection: selectedArmament}" dir="EventDirection.DOWN" (bind trigger "selectedArmament"))

	(bindcall externalCall 'direct.action' "[SC.Common.STATISTICS_EVENTS.LOG, [SC.Common.SHIPINFO_STATISTICS.SQUADRON_SWITCH]]" init=false watch=false (event "evSquadronItemClicked"))

	(style (width = 100%))

	(element TooltipSystemStatusLine _text = "_title")

	(block
		(class = $ShipInfoIconWrapper)
		(style (marginTop = "S"))

		
		(controller $Repeat 
			(renderer = "_hasSquadrons ? 'ShipInfoClickableWeaponIcon' : 'ShipInfoWeaponIcon'")
			(bind count "_items.length")
			(args
				_slotItem = "_items[$index]"
				_iconSize = "_iconSize"
				_shipTTX = "_shipTTX"
				_selectedSlot = "selectedArmament"
			)
		)

		
		(controller $Instance renderer='ShipInfoAltFireModeIcon'
			(bind enabled "_altFireMode")
			(args
				_slotItem = "_altFireMode"
				_iconSize = "_iconSize"
			)
		)

		
		(controller $Instance renderer='ShipInfoRageModeIcon'
			(bind enabled "_rageModeData")
			(args
				_slotItem = "_rageModeData"
				_iconSize = "_iconSize"
			)
		)
	)

	(controller $Instance renderer='ShipInfoSelectedSquadronItems'
		(bind enabled "_hasSquadrons && selectedArmament != -1")
		(args
			_items = "_items[selectedArmament].planeConsumables"
			_planeArmament = "_items[selectedArmament].planeArmament"
			_selectedSlot = "selectedArmament"
			_shipTTX = "_shipTTX"
			_iconSize = "_iconSize"
		)
	)
)


(def element ShipInfoArmamentsSimple (_weaponItems:array, _title:str='', _altFireMode:gfx=null, _rageModeData:gfx=null, _iconSize:number=60)
	(style (width = 100%))

	(element TooltipSystemStatusLine _text = "_title")

	(block
		(class = $ShipInfoIconWrapper)
		(style (marginTop = "S"))

		
		(controller $Repeat renderer = 'ShipInfoWeaponIconSimple'
			(bind count "_weaponItems.length")
			(args
				_slotItem = "_weaponItems[$index]"
				_iconSize = "_iconSize"
			)
		)

		
		(element ShipInfoWeaponIconSimple
			_slotItem = "_altFireMode"
			_iconSize = "_iconSize"
			(visible = "_altFireMode")
		)

		
		(element ShipInfoWeaponIconSimple
			_slotItem = "_rageModeData"
			_iconSize = "_iconSize"
			(visible = "_rageModeData")
		)
	)
)

(def element ShipInfoSelectedSquadronItems (_items:array, _shipTTX:gfx, _selectedSlot:number=-1, _iconSize:number=60, _planeArmament:array=null)
	(style (width = 100%))

	(element TooltipSystemHorizontalDivider)

	(block
		(class = $ShipInfoIconWrapper)
		(macro TOOLTIP_SYSTEM_INNER_PANEL_BACKGROUND)

		(element ShipInfoWeaponIcon
				_slotItem = "_planeArmament[0]"
				_iconSize = "_iconSize"
				_shipTTX = "_shipTTX"
				_selectedSlot = "_selectedSlot"
				_isPlaneArmament = "true"
		)

		(controller $Repeat 
			(renderer = 'ShipInfoConsumableIcon')
			(bind count "_items.length")
			(args
				_slotItem = "_items[$index]"
				_iconSize = "_iconSize"
			)
		)
	)
)

(def element ShipInfoSquadronAverageConsumable (_items:array, _title:str='', _iconSize:number=60)
	(style (width = 100%))
	
	(element TooltipSystemStatusLine _text = "_title")

	(block
		(class = $ShipInfoIconWrapper)
		(style (marginTop = "S"))
	
		(controller $Repeat renderer = 'ShipInfoItemIcon'
			(bind count "_items.length")
			(args
				_slotItem = "_items[$index]"
				_iconSize = "_iconSize"
				_isPlane = "true"
			)
		)
	)
	(element TooltipSystemHorizontalDivider)
)

(def element ShipInfoConsumables (_title:str, _items:array, _extraItems:array=null, _iconSize:number=60, _isSimple:bool=false)
	(style (width = 100%))

	(element TooltipSystemStatusLine _text = "_title")

	(block
		(class = $ShipInfoIconWrapper)
		(style (marginTop = "S"))

		(controller $Repeat 
			(bind renderer "_isSimple ? 'ShipInfoItemIcon' : 'ShipInfoConsumableIcon'")
			(bind count "_items.length")
			(args
				_slotItem = "_items[$index]"
				_iconSize = "_iconSize"
			)
		)
		(controller $Repeat renderer = 'ShipInfoConsumableIconWithAlternatives'
			(bind enabled "_extraItems")
			(bind count "_extraItems.length")
			(args
				_items = "_extraItems[$index]"
				_iconSize = "_iconSize"
				_isSimple = "_isSimple"
			)
		)
	)
)

(def element ShipInfoConsumableIconWithAlternatives (_items:array, _iconSize:number=60, _isSimple:bool=false)
	(style (flow = "tile_vertical"))

	(controller $Repeat
		(bind renderer "_isSimple ? 'ShipInfoItemIcon' : 'ShipInfoConsumableIcon'")
		(bind count "_items.length")
		(args
			_slotItem = "_items[$index]"
			_iconSize = "_iconSize"
			_optional = true
		)
		(exprs
			(style
				(bind marginTop "$index > 0 ? XS : 0")
			)
		)
	)
)

(def element ShipInfoConsumableIcon (_slotItem:gfx, _iconSize:number=60, _optional:bool=false, _isPlane:bool=false)
	(element ShipInfoItemIcon
		_slotItem = "_slotItem"
		_iconSize = "_iconSize"
		_optional = "_optional"

		(controller $Tooltip (renderer = 'BattleConsumableTooltip')
			(args
				_consumableViewData = "_slotItem"
			)
			(macro DEFAULT_TOOLTIP_BEHAVIOUR "0")
			(offset = {	x: 20, y: 0 })

			(macro STATS_LOG_TOOLTIP_DURATION "SC.Common.SHIPINFO_STATISTICS.ARMAMENT_OPEN")
		)
	)
)

(def element ShipInfoWeaponIcon (_slotItem:gfx, _shipTTX:gfx, _iconSize:number=60, _isPlane:bool=false, _isPlaneArmament:bool=false)
	(scope
		(var uniqueFeatures:array = "_slotItem.uniqueFeatures")
		(var hasUniqueFeatures:bool = "uniqueFeatures.length > 0")
	)
	(element ShipInfoItemIcon
		_slotItem = "_slotItem"
		_iconSize = "_iconSize"
		(controller $Tooltip
			(renderer = 'BattleWeaponTooltip')
			(args
				_ammoViewData = "_slotItem"
				_shipTTX = "_shipTTX"
			)
			(macro DEFAULT_TOOLTIP_BEHAVIOUR "0")
			(offset = {	x: 20, y: 0 })

			(macro STATS_LOG_TOOLTIP_DURATION "	_isPlane			? SC.Common.SHIPINFO_STATISTICS.SQUADRON_OPEN :
												_isPlaneArmament	? SC.Common.SHIPINFO_STATISTICS.SQUADRON_ARMAMENT
																	: SC.Common.SHIPINFO_STATISTICS.ARMAMENT_OPEN")
		)
	)
	(htile
		(class $FullsizeAbsolute)
		(style
			(hitTest = false)
			(width = 70%)
		)
		(controller $Repeat renderer='WeaponSlotUniqueFeatureItem'
			(bind count "uniqueFeatures.length")
			(args
				_featureId = "uniqueFeatures[$index]"
			)
		)
	)
)

(def element ShipInfoWeaponIconSimple (_slotItem:gfx, _shipTTX:gfx, _iconSize:number=60)
	(scope
		(var uniqueFeatures:array = "_slotItem && _slotItem.uniqueFeatures ? _slotItem.uniqueFeatures : []")
		(var hasUniqueFeatures:bool = "uniqueFeatures.length > 0")
	)
	(element ShipInfoItemIcon
		_slotItem = "_slotItem"
		_iconSize = "_iconSize"
	)
	(htile
		(class $FullsizeAbsolute)
		(style
			(hitTest = false)
			(width = 70%)
		)
		(controller $Repeat renderer='WeaponSlotUniqueFeatureItem'
			(bind count "uniqueFeatures.length")
			(args
				_featureId = "uniqueFeatures[$index]"
			)
		)
	)
)

(def element ShipInfoClickableWeaponIcon (_slotItem:gfx, _shipTTX:gfx, _selectedSlot:number=-1, _iconSize:number=60)
	(scope
		(event evSquadronItemClicked)
		(event evSelectionChanged)

		(macro MOUSE_HANDLER_SCOPE)

		(var isClickable:bool = "_slotItem.planeArmament.length != 0")
		(var selectedSlot:number = "_selectedSlot")
		(var isSelected:bool = "isClickable && selectedSlot == $index")
		(var transformDict:dict = { redMultiplier: 1, greenMultiplier: 1,blueMultiplier: 1,alphaMultiplier: 1,redOffset: 40,greenOffset: 40,blueOffset: 40,alphaOffset: 0})

		(bind transformDict "isClickable ? transformDict : {}" watch = false)
		(bind selectedSlot "$event.newSelection" init=false (event "evSelectionChanged"))
		(bind isSelected "isClickable && selectedSlot == $index")
	)

	(dispatch evSquadronItemClicked args="{index : $index}" dir="EventDirection.UP" on='click' (bind enabled "isClickable && !isSelected"))
	(dispatch evSquadronItemClicked args="{index : $index}" dir="EventDirection.UP" on='addedToStage'(bind enabled "isClickable && selectedSlot == -1"))
	(macro MOUSE_EVENTS_DISPATCHER)

	(element ShipInfoWeaponIcon
		_slotItem = "_slotItem"
		_iconSize = "_iconSize"
		_shipTTX = "_shipTTX"
		_isPlane = "isClickable"

		(bind colorTransform "rollOver && !isSelected ? transformDict : {}")
	)

	(block
		(bind visible "isClickable")
		(class $MiddleAligned)
		(style
			(position = "absolute")
			(width = 40px)
			(height = 2px)
			(backgroundColor = 0xFFFFFFFF)
			(bottom = -14px) 
			(bind alpha "isSelected ? TC : 0" watch = false)
			(backgroundImage = 'url:../service_kit/tabs/tabs_selectable_bar.png')
			(backgroundSize = "fill")
		)

		(controller $Animation
			(bind enabled "isClickable")
	
			(bindcall play duration = 0.2 from = "{alpha: 0}" to = "{alpha: 0.50}" action="kill" easing = "Easing.quad_out" (bind enabled "isSelected"))
			(bindcall play duration = 0.1 from = "{alpha: 0.50}" to = "{alpha: 0}" action="kill" easing = "Easing.quad_out" (bind enabled "!isSelected"))
			(bindcall play duration = 0.2 to = "{alpha: 0.75}" action="kill" easing = "Easing.quad_out" (event "evRollOver") (bind enabled "!isSelected"))
			(bindcall play duration = 0.1 to = "{alpha: 0}" action="kill" easing = "Easing.quad_out" (event "evRollOut")	(bind enabled "!isSelected"))
		)
	)
)

(def element ShipInfoAltFireModeIcon (_slotItem:gfx, _iconSize:number=60)
	(element ShipInfoItemIcon
		_slotItem = "_slotItem"
		_iconSize = "_iconSize"

		(controller $Tooltip
			(renderer = 'FireModeTooltip')
			(args
				_fireModeStruct = "_slotItem"
				_iconSize = "_iconSize"
			)
			(macro DEFAULT_TOOLTIP_BEHAVIOUR "0")
			(offset = {	x: 20, y: 0 })

			(macro STATS_LOG_TOOLTIP_DURATION "SC.Common.SHIPINFO_STATISTICS.ARMAMENT_OPEN")
		)
	)
)

(def element ShipInfoRageModeIcon (_slotItem:gfx, _iconSize:number=60)
	(element ShipInfoItemIcon
		_slotItem = "_slotItem"
		_iconSize = "_iconSize"

		(controller $Tooltip
			(renderer = 'RageModeTooltip')
			(args
				_rageModeStruct = "_slotItem"
				_iconSize = "_iconSize"
			)
			(macro DEFAULT_TOOLTIP_BEHAVIOUR "0")
			(offset = {	x: 20, y: 0 })

			(macro STATS_LOG_TOOLTIP_DURATION "SC.Common.SHIPINFO_STATISTICS.ARMAMENT_OPEN")
		)
	)
)

(def element ShipInfoItemIcon (_slotItem:gfx, _iconSize:number=60, _optional:bool = false)
	(style
		(bind width "_iconSize")
		(bind height "_iconSize")
		(bind backgroundImage "_slotItem && _slotItem.iconPath ? 'url:' + _slotItem.iconPath : ''")
		(backgroundSize = "fill")
	)
	(block
		(bind visible "_optional")
		(style
			(bind width "_iconSize")
			(bind height "_iconSize")
			(position = "absolute")
			(backgroundImage = 'url:../service_kit/frames/64px_not_empty_field.png')
			(backgroundSize = "fill")
		)
	)
)