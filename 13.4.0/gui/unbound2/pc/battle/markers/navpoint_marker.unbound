(def constant ACTIVE_NAVPOINT_ALPHA 1)
(def constant INACTIVE_NAVPOINT_ALPHA 0.4)


(def element WorldNavpointMarker (_markerEntity:gfx) layout=true
	(scope
		(var markerEntityId:number = "_markerEntity ? _markerEntity.id : 0")

		(event evRollOver)
		(event evRollOut)
		(event evMouseDown)

		(macro GET_MARKER_ENTITY_COMPONENT 'navpoint')

		(var index:number = "navpointComponent ? navpointComponent.index : 0" (event "navpointComponent.evIndexChanged"))
		(var dragging:bool = "navpointComponent && navpointComponent.dragging" (event "navpointComponent.evDrag"))
		(var draggable:bool = "navpointComponent && navpointComponent.draggable" (event "navpointComponent.evDraggableChanged"))

		(var cameraComponent:gfx = "$datahub.getSingleComponent(CC.camera)")
		(var isTactical:bool = "cameraComponent.isTactical" (event "cameraComponent.evTacticalStateChanged"))
		(var isAnimating:bool = "cameraComponent.isAnimating" (event "cameraComponent.evIsAnimatingChanged"))
		(var showMarker:bool = "isTactical && !(isAnimating)")

		(var rollOver:bool = "$event.isOver" init=false watch=false (event "evRollOver") (event "evRollOut"))
		(var isDragging:bool = "rollOver || dragging")
	)

	(bindcall externalCall 'navpoints.mouseOver' "[markerEntityId]" init=false watch=false (event "evRollOver"))
	(bindcall externalCall 'navpoints.mouseOut' "[markerEntityId]" init=false watch=false (event "evRollOut"))
	(bindcall externalCall "$event.buttonIdx != 1 ? 'navpoints.mouseDown' : ''" "[markerEntityId]" init=false watch=false (event "evMouseDown"))
	
	(controller $Animation
		(bindcall play	duration="0.3"
						delay=0.05
						from="{alpha: 0}"
						to="{alpha: 1}"
						action="killAll"
						reverse="!(showMarker)"
						(bind trigger "showMarker")
		)
	)

	(style
		(width = 0) (height = 0)
		(align = "center|bottom")
		(bind hitTest "draggable")
	)

	(block
		
		(block
			(bind alpha "index ? INACTIVE_NAVPOINT_ALPHA : ACTIVE_NAVPOINT_ALPHA")
			(style
				(bind backgroundImage "'url:../battle_hud/markers/navpoint/navpoint_autopilot.png'")
				(backgroundSize = "autosize")
			)
		)

		(controller $Animation
			(bindcall play	duration="0.15"
							from="{scaleX: 1, scaleY: 1, ubScaleX: 1, ubScaleY: 1}"
							to="{scaleX: 1.1, scaleY: 1.1, ubScaleX: 1.1, ubScaleY: 1.1}"
							action="killAll"
							reverse="!(isDragging)"
							(bind trigger "isDragging")
			)
		)
	)

	
	(block
		(style
			(position = "absolute")
			(width = 30) (height = 30)
			(marginLeft = "-50%") (marginTop = "-50%")
			(backgroundColor = 0x01000000)
		)
		(dispatch evRollOver on='rollOver' args="{isOver: true}" (bind enabled "draggable"))
		(dispatch evRollOut on='rollOut' args="{isOver: false}" (bind enabled "draggable"))
		(dispatch evMouseDown on='mouseDown' (bind enabled "draggable"))
	)
)